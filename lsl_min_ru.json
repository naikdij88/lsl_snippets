[{"Vector":{"prefix":"vector","body":["vector ${0}"],"description":"type Vector"}},{"Integer":{"prefix":"integer","body":["integer ${0}"],"description":"type Integer"}},{"Float":{"prefix":"float","body":["float ${0}"],"description":"type Float"}},{"Key":{"prefix":"key","body":["key ${0}"],"description":"type Key"}},{"List":{"prefix":"list","body":["list ${0}"],"description":"type List"}},{"Rotation":{"prefix":"rotation","body":["rotation ${0}"],"description":"type Rotation"}},{"String":{"prefix":"string","body":["string ${0}"],"description":"type String"}},{"llAbs":{"description":"Возвращает целое число, которое является положительным версия Вэл.\n\ninteger llAbs( integer val )","body":["llAbs(${0})"],"prefix":"llAbs"}},{"llAcos":{"description":"Возвращает float, что такое арккосинус в радианах Валь\n\nfloat llAcos( float val )","body":["llAcos(${0})"],"prefix":"llAcos"}},{"llAddToLandBanList":{"description":"Добавить аватар к список запретить землю в течение нескольких часов, или бесконечно, если часов равен нулю.\n\nllAddToLandBanList( key avatar, float hours )","body":["llAddToLandBanList(${0})"],"prefix":"llAddToLandBanList"}},{"llAddToLandPassList":{"description":"Добавить аватар в список земель пройти в течение нескольких часов, или бесконечно, если часов равен нулю.\n\nllAddToLandPassList( key avatar, float hours )","body":["llAddToLandPassList(${0})"],"prefix":"llAddToLandPassList"}},{"llAdjustSoundVolume":{"description":"Регулировка громкости звуком.\n\nllAdjustSoundVolume( float volume )","body":["llAdjustSoundVolume(${0})"],"prefix":"llAdjustSoundVolume"}},{"llAgentInExperience":{"description":"Определяет, является ли указанный агент в опыт работы скрипта.Возвращает логическое значение (целое число), равное True, если агент в опыте и опытом может работать в текущей области.\n\ninteger llAgentInExperience( key agent )","body":["llAgentInExperience(${0})"],"prefix":"llAgentInExperience"}},{"llAllowInventoryDrop":{"description":"Позволяет всем пользователям без изменения разрешения на добавление предметов инвентаря к прим.\n\nllAllowInventoryDrop( integer add )","body":["llAllowInventoryDrop(${0})"],"prefix":"llAllowInventoryDrop"}},{"llAngleBetween":{"description":"Возвращает float, что это угол в радианах между вращением и вращения б.\n\nfloat llAngleBetween( rotation a, rotation b )","body":["llAngleBetween(${0})"],"prefix":"llAngleBetween"}},{"llApplyImpulse":{"description":"Применяется импульс к объекту\n\nllApplyImpulse( vector momentum, integer local )","body":["llApplyImpulse(${0})"],"prefix":"llApplyImpulse"}},{"llApplyRotationalImpulse":{"description":"Применяется импульс вращения для объекта.\n\nllApplyRotationalImpulse( vector force, integer local )","body":["llApplyRotationalImpulse(${0})"],"prefix":"llApplyRotationalImpulse"}},{"llAsin":{"description":"Возвращает float, который является арксинус в радианах Валь\n\nfloat llAsin( float val )","body":["llAsin(${0})"],"prefix":"llAsin"}},{"llAtan2":{"description":"Возвращает float, который является arctangent2 из Y, х.\n\nfloat llAtan2( float y, float x )","body":["llAtan2(${0})"],"prefix":"llAtan2"}},{"llAttachToAvatar":{"description":"Присоединяет объект к аватару, который выдал разрешение на сценарий. Объект берется в инвентарь пользователей и прикрепленные к attach_point.\n\nllAttachToAvatar( integer attach_point )","body":["llAttachToAvatar(${0})"],"prefix":"llAttachToAvatar"}},{"llAttachToAvatarTemp":{"description":"Следует той же Конвенции, как llAttachToAvatar, за исключением того, что объект не будет создавать новый инвентарь для пользователя, и исчезнет на отсоединения или отключения. Кроме того, эта функция может быть использована на Авис кроме владельца (при наличии разрешения), в этом случае право собственности меняется на нового владельца.\n\nllAttachToAvatarTemp( integer attach_point )","body":["llAttachToAvatarTemp(${0})"],"prefix":"llAttachToAvatarTemp"}},{"llAvatarOnLinkSitTarget":{"description":"Возвращает ключ, который является uuid пользователя, сидящего на прим.\n\nkey llAvatarOnLinkSitTarget( integer link )","body":["llAvatarOnLinkSitTarget(${0})"],"prefix":"llAvatarOnLinkSitTarget"}},{"llAvatarOnSitTarget":{"description":"Возвращает ключ, который является uuid пользователя, сидящего на прим.\n\nkey llAvatarOnSitTarget(  )","body":["llAvatarOnSitTarget(${0})"],"prefix":"llAvatarOnSitTarget"}},{"llAxes2Rot":{"description":"Возвращает вращения, который определяется 3 осям координат\n\nrotation llAxes2Rot( vector fwd, vector left, vector up )","body":["llAxes2Rot(${0})"],"prefix":"llAxes2Rot"}},{"llAxisAngle2Rot":{"description":"Возвращает вращения создаваемого углом относительно оси\n\nrotation llAxisAngle2Rot( vector axis, float angle )","body":["llAxisAngle2Rot(${0})"],"prefix":"llAxisAngle2Rot"}},{"llBase64ToInteger":{"description":"Возвращает целое число, которое находится на ул. в base64 декодируется как большой endian целое число.\n\ninteger llBase64ToInteger( string str )","body":["llBase64ToInteger(${0})"],"prefix":"llBase64ToInteger"}},{"llBase64ToString":{"description":"Возвращает строку, которая является НТР в base64 декодируется в обычную строку.\n\nstring llBase64ToString( string str )","body":["llBase64ToString(${0})"],"prefix":"llBase64ToString"}},{"llBreakAllLinks":{"description":"Delinks все призмы в наборе ссылке.\n\nllBreakAllLinks(  )","body":["llBreakAllLinks(${0})"],"prefix":"llBreakAllLinks"}},{"llBreakLink":{"description":"Delinks чопорному с заданным номером ссылка на связанный объект, набор\n\nllBreakLink( integer link )","body":["llBreakLink(${0})"],"prefix":"llBreakLink"}},{"llCastRay":{"description":"Бросают луч от начала до конца и представлять данные столкновения на перекрестках с objectsReturns список значений strided с дополнительным числом status_code на конце. Каждый шаг состоит из двух обязательных значений {ключевые идентификатор uuid, положение вектора} и, возможно, некоторые дополнительные значения {целое число номер_связи, вектор нормального} см RC_DATA_FLAGS для деталей. В status_code если он отрицательный код ошибки, иначе это количество просмотров (и успехов) вернулся.\n\nlist llCastRay( vector start, vector end, list options )","body":["llCastRay(${0})"],"prefix":"llCastRay"}},{"llCeil":{"description":"Возвращает целое число, которое является целочисленным значением val округлено в сторону положительной бесконечности (возврат >= вал).\n\ninteger llCeil( float val )","body":["llCeil(${0})"],"prefix":"llCeil"}},{"llClearCameraParams":{"description":"Сброс всех параметров камеры на значения по умолчанию и выключает контроль сценарию камеры.\n\nllClearCameraParams(  )","body":["llClearCameraParams(${0})"],"prefix":"llClearCameraParams"}},{"llClearLinkMedia":{"description":"Очищает (удаляет) СМИ и все параметры от данного лица на связанном прим(ы).Возвращает статус (целое число), что является STATUS_* флаг, детали успеха/провала операции.\n\ninteger llClearLinkMedia( integer link, integer face )","body":["llClearLinkMedia(${0})"],"prefix":"llClearLinkMedia"}},{"llClearPrimMedia":{"description":"Очищает (удаляет) СМИ и все параметры от данного лица.Возвращает статус (целое число), что является STATUS_* флаг, детали успеха/провала операции.\n\ninteger llClearPrimMedia( integer face )","body":["llClearPrimMedia(${0})"],"prefix":"llClearPrimMedia"}},{"llCloseRemoteDataChannel":{"description":"Закрывает канал XML-шлюз.\n\nllCloseRemoteDataChannel( key channel )","body":["llCloseRemoteDataChannel(${0})"],"prefix":"llCloseRemoteDataChannel"}},{"llCollisionFilter":{"description":"Устанавливает фильтр столкновения исключительно или включительно.\n\nllCollisionFilter( string name, key id, integer accept )","body":["llCollisionFilter(${0})"],"prefix":"llCollisionFilter"}},{"llCollisionSound":{"description":"Подавить столкновения по умолчанию звуки, замените влияние стандартные звуки с impact_sound в impact_volume объем\n\nllCollisionSound( string impact_sound, float impact_volume )","body":["llCollisionSound(${0})"],"prefix":"llCollisionSound"}},{"llCollisionSprite":{"description":"Подавить столкновения спрайтов по умолчанию, замените воздействия по умолчанию спрайт с impact_sprite\n\nllCollisionSprite( string impact_sprite )","body":["llCollisionSprite(${0})"],"prefix":"llCollisionSprite"}},{"llCos":{"description":"Возвращает float, что косинус тета.\n\nfloat llCos( float theta )","body":["llCos(${0})"],"prefix":"llCos"}},{"llCreateCharacter":{"description":"Создает исследовательской организации, известной как \"персонаж\", от объекта со скриптом. Необходимо активизировать использование функции поиска пути.\n\nllCreateCharacter( list options )","body":["llCreateCharacter(${0})"],"prefix":"llCreateCharacter"}},{"llCreateKeyValue":{"description":"Запустить асинхронную операцию, чтобы создать пару ключ-значение, связанное с опытом работы скрипта с помощью данного ключа (K) и значения (в).Возвращает дескриптор (ключ), который может быть использован для определения соответствующего события dataserver, чтобы определить, если эта команда успешно или нет.\n\nkey llCreateKeyValue( string k, string v )","body":["llCreateKeyValue(${0})"],"prefix":"llCreateKeyValue"}},{"llCreateLink":{"description":"Попытка связать объект сценария с целью.\n\nllCreateLink( key target, integer parent )","body":["llCreateLink(${0})"],"prefix":"llCreateLink"}},{"llCSV2List":{"description":"Эта функция принимает строку значений, разделенных запятыми, и превращает его в список.Возвращает список сделан путем анализа грц, строку значений, разделенных запятой.\n\nlist llCSV2List( string src )","body":["llCSV2List(${0})"],"prefix":"llCSV2List"}},{"llDataSizeKeyValue":{"description":"Запустить асинхронную операцию для запроса используется и общая сумма данных, выделенных на опыт.Возвращает дескриптор (ключ), который может быть использован для определения соответствующего события dataserver, чтобы определить, если эта команда успешно или нет и результатов.\n\nkey llDataSizeKeyValue(  )","body":["llDataSizeKeyValue(${0})"],"prefix":"llDataSizeKeyValue"}},{"llDeleteCharacter":{"description":"Преобразовать объект стандартный объект, удалив все первопрохождения свойства.\n\nllDeleteCharacter(  )","body":["llDeleteCharacter(${0})"],"prefix":"llDeleteCharacter"}},{"llDeleteKeyValue":{"description":"Запустить асинхронную операцию, чтобы удалить пару ключ-значение, связанное с опытом работы скрипта с заданным ключом (к).Возвращает дескриптор (ключ), который может быть использован для определения соответствующего события dataserver, чтобы определить, если эта команда успешно или нет и результатов.\n\nkey llDeleteKeyValue( string k )","body":["llDeleteKeyValue(${0})"],"prefix":"llDeleteKeyValue"}},{"llDeleteSubList":{"description":"Возвращает список, который является копией src, но с кусочком от начала до конца удален.\n\nlist llDeleteSubList( list src, integer start, integer end )","body":["llDeleteSubList(${0})"],"prefix":"llDeleteSubList"}},{"llDeleteSubString":{"description":"Возвращает строку, которая является результатом удаления символов из src от начала до конца.\n\nstring llDeleteSubString( string src, integer start, integer end )","body":["llDeleteSubString(${0})"],"prefix":"llDeleteSubString"}},{"llDetachFromAvatar":{"description":"Объект оторвать от аватара.\n\nllDetachFromAvatar(  )","body":["llDetachFromAvatar(${0})"],"prefix":"llDetachFromAvatar"}},{"llDetectedGrab":{"description":"Возвращает вектор, который является схватить смещение пользователь прикасаясь к объекту; работает только на сенсорное событие.\n\nvector llDetectedGrab( integer number )","body":["llDetectedGrab(${0})"],"prefix":"llDetectedGrab"}},{"llDetectedGroup":{"description":"Возвращает целое число, которое является истинным, если обнаруженный объект или агент имеет те же активные группы, как прим, содержащий скрипт. В противном случае возвращается false.\n\ninteger llDetectedGroup( integer number )","body":["llDetectedGroup(${0})"],"prefix":"llDetectedGroup"}},{"llDetectedKey":{"description":"Возвращает ключ, который является uuid обнаруженного объекта или количество аватар.\n\nkey llDetectedKey( integer number )","body":["llDetectedKey(${0})"],"prefix":"llDetectedKey"}},{"llDetectedLinkNumber":{"description":"Возвращает номер_связи (целое число) от произошедшего события. Если не поддерживается событие, возвращает ноль.\n\ninteger llDetectedLinkNumber( integer number )","body":["llDetectedLinkNumber(${0})"],"prefix":"llDetectedLinkNumber"}},{"llDetectedName":{"description":"Возвращает строку, которая является именем обнаруженного объекта.\n\nstring llDetectedName( integer item )","body":["llDetectedName(${0})"],"prefix":"llDetectedName"}},{"llDetectedOwner":{"description":"Возвращает ключ (идентификатор) владельца объекта.\n\nkey llDetectedOwner( integer number )","body":["llDetectedOwner(${0})"],"prefix":"llDetectedOwner"}},{"llDetectedPos":{"description":"Возвращает вектор, что это положение (в координатах область) обнаружен номер объекта.\n\nvector llDetectedPos( integer number )","body":["llDetectedPos(${0})"],"prefix":"llDetectedPos"}},{"llDetectedRot":{"description":"Возвращает вращение обнаружил номер объекта.\n\nrotation llDetectedRot( integer number )","body":["llDetectedRot(${0})"],"prefix":"llDetectedRot"}},{"llDetectedTouchBinormal":{"description":"Возвращает вектор, поверхности binormal (по касательной к поверхности, указывая на положительной Т (В) направление касательного пространства), где сенсорный событие было вызвано. Вместе с llDetectedTouchNormal, эта информация может быть использована, чтобы найти касательное пространство на ощупь место.\n\nvector llDetectedTouchBinormal( integer index )","body":["llDetectedTouchBinormal(${0})"],"prefix":"llDetectedTouchBinormal"}},{"llDetectedTouchFace":{"description":"Возвращает целое число, которое является индексом лицо аватара нажал на.\n\ninteger llDetectedTouchFace( integer index )","body":["llDetectedTouchFace(${0})"],"prefix":"llDetectedTouchFace"}},{"llDetectedTouchNormal":{"description":"Возвращает вектор, нормаль к поверхности (перпендикулярно к поверхности), где сенсорный событие было вызвано. Вместе с llDetectedTouchBinormal, эта информация может быть использована, чтобы найти касательное пространство на ощупь место.\n\nvector llDetectedTouchNormal( integer index )","body":["llDetectedTouchNormal(${0})"],"prefix":"llDetectedTouchNormal"}},{"llDetectedTouchPos":{"description":"Возвращает позицию вектор, в котором объект был тронут в координаты области, если он не подключен к ИЛС, в этом случае она возвращает позицию в пространстве координаты экрана.\n\nvector llDetectedTouchPos( integer index )","body":["llDetectedTouchPos(${0})"],"prefix":"llDetectedTouchPos"}},{"llDetectedTouchST":{"description":"Возвращает вектор, поверхностные координаты, где прим умилился. Координаты X и Y вектора содержат позиции по горизонтали (х) и вертикальная (т) лицом координаты соответственно (<с, т, 0.0>). Каждый компонент обычно находится в интервале [0.0, 1.0] с началом в нижнем левом углу.[1] с некоторыми объектами сетку, значения меньше, чем 0.0 и выше 1.0 не наблюдается.\n\nvector llDetectedTouchST( integer index )","body":["llDetectedTouchST(${0})"],"prefix":"llDetectedTouchST"}},{"llDetectedTouchUV":{"description":"Возвращает вектор, что такое текстурные координаты, где прим умилился. Координаты X и Y вектора содержат позиции по горизонтали (х) и вертикальная (в) текстурные координаты соответственно (<у, в наличии, 0.0>). Как llDetectedTouchST, интервал каждого компонента [0.0, 1.0] если текстура повторяется устанавливаются по умолчанию значение. Увеличение или уменьшение текстура повторяется то образом изменить этот интервал. Кроме того, в отличие от llDetectedTouchST, меняя текстуру изменятся результаты этой функции.\n\nvector llDetectedTouchUV( integer index )","body":["llDetectedTouchUV(${0})"],"prefix":"llDetectedTouchUV"}},{"llDetectedType":{"description":"Возвращает целое число маска, которая типы обнаруживаемых объект или аватар.\n\ninteger llDetectedType( integer number )","body":["llDetectedType(${0})"],"prefix":"llDetectedType"}},{"llDetectedVel":{"description":"Возвращает вектор скорости обнаруженного объекта или количество аватар.\n\nvector llDetectedVel( integer number )","body":["llDetectedVel(${0})"],"prefix":"llDetectedVel"}},{"llDialog":{"description":"Показывает диалоговое окно в нижнем правом углу экрана аватара (в правом верхнем углу в окне просмотра 1.х) с сообщением и кнопками выбора, а также кнопка игнор. Это имеет множество применений, начиная от простой доставки Сообщений до сложных систем меню.\n\nllDialog( key avatar, string message, list buttons, integer channel )","body":["llDialog(${0})"],"prefix":"llDialog"}},{"llDie":{"description":"Удаляет объект. Объект не идет на инвентаризацию владельцев:мусор.\n\nllDie(  )","body":["llDie(${0})"],"prefix":"llDie"}},{"llDumpList2String":{"description":"Возвращает строку, которая представляет собой список грц преобразован в строку с разделителем между записями.\n\nstring llDumpList2String( list src, string separator )","body":["llDumpList2String(${0})"],"prefix":"llDumpList2String"}},{"llEdgeOfWorld":{"description":"Проверяет границы нажмите на DIR из POS-это край света (нет соседних симулятор).Возвращает логическое значение (целочисленное) значение. Значение false указывает на тренажере в указанном направлении.\n\ninteger llEdgeOfWorld( vector pos, vector dir )","body":["llEdgeOfWorld(${0})"],"prefix":"llEdgeOfWorld"}},{"llEjectFromLand":{"description":"Выбрасывает аватар из посылки.\n\nllEjectFromLand( key avatar )","body":["llEjectFromLand(${0})"],"prefix":"llEjectFromLand"}},{"llEmail":{"description":"Отправляет письмо на адрес с темой и сообщением.\n\nllEmail( string address, string subject, string message )","body":["llEmail(${0})"],"prefix":"llEmail"}},{"llEscapeURL":{"description":"Возвращает строку, которая является избежал/закодированным URL-адрес, заменяя пробелы на \"%20\" и т. д. Функция будет избежать любого персонажа не В [А-яа-З0-9] в виде \"%XX\", где \"XX\" представляет собой шестнадцатеричное значение символа в кодировке utf-8 байт форма.\n\nstring llEscapeURL( string url )","body":["llEscapeURL(${0})"],"prefix":"llEscapeURL"}},{"llEuler2Rot":{"description":"Возвращает представление вращения Эйлера углы в.\n\nrotation llEuler2Rot( vector v )","body":["llEuler2Rot(${0})"],"prefix":"llEuler2Rot"}},{"llEvade":{"description":"Персонажи (ориентировочно) пытаются скрыть от своих преследователей, если есть хорошее укрытие бегут вдоль их пути. Скрытие означает, что нет прямой видимости из головы персонажа (центр верхней части ее физики прямоугольника) на голову своего преследователя и прямой путь между двумя по navmesh.\n\nllEvade( key target, list options )","body":["llEvade(${0})"],"prefix":"llEvade"}},{"llExecCharacterCmd":{"description":"Отправить команду системе программирования.\n\nllExecCharacterCmd( integer command, list options )","body":["llExecCharacterCmd(${0})"],"prefix":"llExecCharacterCmd"}},{"llFabs":{"description":"Возвращает float, что является положительным версия Вэл.\n\nfloat llFabs( float val )","body":["llFabs(${0})"],"prefix":"llFabs"}},{"llFleeFrom":{"description":"Руководит характер, чтобы держаться на определенном расстоянии от определенной позиции в регионе или соседних регионах.\n\nllFleeFrom( vector position, float distance, list options )","body":["llFleeFrom(${0})"],"prefix":"llFleeFrom"}},{"llFloor":{"description":"Возвращает целое число, которое является целочисленным значением val округлено в сторону отрицательной бесконечности (возврат <= вал).\n\ninteger llFloor( float val )","body":["llFloor(${0})"],"prefix":"llFloor"}},{"llForceMouselook":{"description":"Наборы если сидит аватар должен быть вынужден mouselook, когда они сидят на этом прим.\n\nllForceMouselook( integer mouselook )","body":["llForceMouselook(${0})"],"prefix":"llForceMouselook"}},{"llFrand":{"description":"Возвращает float, что это псевдо-случайный в диапазоне [0.0, маг) или (Маг, 0.0].[1] Это означает, что возвращаемое значение может быть любым значением в диапазоне от 0.0 до 0.0 в том числе и маг, но не включая стоимость самой Мэг. Знак маг играм возвращение.\n\nfloat llFrand( float mag )","body":["llFrand(${0})"],"prefix":"llFrand"}},{"llGenerateKey":{"description":"Генерирует ключ через версию 5 (хэш SHA-1) генерация uuid, чтобы создать уникальный ключ.Возвращает ключ, сгенерированный.\n\nkey llGenerateKey(  )","body":["llGenerateKey(${0})"],"prefix":"llGenerateKey"}},{"llGetAccel":{"description":"Возвращает вектор, который является ускорение объекта в рамках области ведения.\n\nvector llGetAccel(  )","body":["llGetAccel(${0})"],"prefix":"llGetAccel"}},{"llGetAgentInfo":{"description":"Возвращает битовое поле (целое число), содержащий информацию агента о ID.\n\ninteger llGetAgentInfo( key id )","body":["llGetAgentInfo(${0})"],"prefix":"llGetAgentInfo"}},{"llGetAgentLanguage":{"description":"Возвращает строку, которая является код языка предпочитаемый Язык интерфейса аватара пользователя.\n\nstring llGetAgentLanguage( key avatar )","body":["llGetAgentLanguage(${0})"],"prefix":"llGetAgentLanguage"}},{"llGetAgentList":{"description":"Запрашивает список агентов в настоящее время в регионе, ограниченный параметром Scope.Возвращает список [ключ id0, id1 в ключ, ... ключи идн] или [строка error_msg] - возвращает аватар ключи для всех агентов в регионе ограничено зоной(ами), определенным по области\n\nlist llGetAgentList( integer scope, list options )","body":["llGetAgentList(${0})"],"prefix":"llGetAgentList"}},{"llGetAgentSize":{"description":"Возвращает вектор, который представляет собой приблизительный Размер запрашиваемого аватар.\n\nvector llGetAgentSize( key avatar )","body":["llGetAgentSize(${0})"],"prefix":"llGetAgentSize"}},{"llGetAlpha":{"description":"Возвращает float, который является альфой лицо.\n\nfloat llGetAlpha( integer face )","body":["llGetAlpha(${0})"],"prefix":"llGetAlpha"}},{"llGetAndResetTime":{"description":"Возвращает float, что это время скрипт в секунд, а затем сбрасывает время сценария к нулю.\n\nfloat llGetAndResetTime(  )","body":["llGetAndResetTime(${0})"],"prefix":"llGetAndResetTime"}},{"llGetAnimation":{"description":"Возвращает строку, которая является именем воспроизводимого движения анимация для аватара ИД. См.таблицу ниже.\n\nstring llGetAnimation( key id )","body":["llGetAnimation(${0})"],"prefix":"llGetAnimation"}},{"llGetAnimationList":{"description":"Возвращает список ключей игры анимация для аватара.\n\nlist llGetAnimationList( key avatar )","body":["llGetAnimationList(${0})"],"prefix":"llGetAnimationList"}},{"llGetAnimationOverride":{"description":"Возвращает строку, которая является именем анимация, которая используется для указанной государственной анимация (anim_state).\n\nstring llGetAnimationOverride( string anim_state )","body":["llGetAnimationOverride(${0})"],"prefix":"llGetAnimationOverride"}},{"llGetAttached":{"description":"Возвращает attach_point (целое число) объект привязан к или ноль, если он либо не подключен или находится в ожидании отряда.\n\ninteger llGetAttached(  )","body":["llGetAttached(${0})"],"prefix":"llGetAttached"}},{"llGetAttachedList":{"description":"Возвращает список государственных вложений носили аватар.\n\nlist llGetAttachedList( key avatar )","body":["llGetAttachedList(${0})"],"prefix":"llGetAttachedList"}},{"llGetBoundingBox":{"description":"Возвращает список, ограничивающий прямоугольник объекта относительно его корня прим в локальных координатах.Формат: [ (вектор) min_corner, (вектор) max_corner ]\n\nlist llGetBoundingBox( key object )","body":["llGetBoundingBox(${0})"],"prefix":"llGetBoundingBox"}},{"llGetCameraPos":{"description":"Возвращает вектор, который показывает текущее положение камеры для агента задача разрешения.\n\nvector llGetCameraPos(  )","body":["llGetCameraPos(${0})"],"prefix":"llGetCameraPos"}},{"llGetCameraRot":{"description":"Возвращает вращения, что является текущей ориентации камеры для агента задача разрешения.\n\nrotation llGetCameraRot(  )","body":["llGetCameraRot(${0})"],"prefix":"llGetCameraRot"}},{"llGetCenterOfMass":{"description":"Возвращает позицию вектор центра объекта массового в координатах области.\n\nvector llGetCenterOfMass(  )","body":["llGetCenterOfMass(${0})"],"prefix":"llGetCenterOfMass"}},{"llGetClosestNavPoint":{"description":"Использовали, чтобы получить точку на navmesh, что ближайшая точка к точке.Возвращает список, содержащий единственный вектор, который является ближайшей точкой на navmesh с точки предоставляемые или пустой список.\n\nlist llGetClosestNavPoint( vector point, list options )","body":["llGetClosestNavPoint(${0})"],"prefix":"llGetClosestNavPoint"}},{"llGetColor":{"description":"Возвращает вектор, что цвет на лице.\n\nvector llGetColor( integer face )","body":["llGetColor(${0})"],"prefix":"llGetColor"}},{"llGetCreator":{"description":"Возвращает ключ для создателя прим.\n\nkey llGetCreator(  )","body":["llGetCreator(${0})"],"prefix":"llGetCreator"}},{"llGetDate":{"description":"Возвращает строку, которая представляет текущую дату в часовом поясе UTC в формате \"ГГГГ-мм-ДД\".\n\nstring llGetDate(  )","body":["llGetDate(${0})"],"prefix":"llGetDate"}},{"llGetDisplayName":{"description":"Возвращает строку, которая является неуникальным именем отображение аватар, указанного по ID.\n\nstring llGetDisplayName( key id )","body":["llGetDisplayName(${0})"],"prefix":"llGetDisplayName"}},{"llGetEnergy":{"description":"Возвращает float то есть, сколько энергии в объекте в процентах от максимального\n\nfloat llGetEnergy(  )","body":["llGetEnergy(${0})"],"prefix":"llGetEnergy"}},{"llGetEnv":{"description":"Возвращает строку с требуемым сведения о регионе.\n\nstring llGetEnv( string name )","body":["llGetEnv(${0})"],"prefix":"llGetEnv"}},{"llGetExperienceDetails":{"description":"Возвращает список информация об опыте. Этот список состоит из 6 компонентов: [строка experience_name, ключ owner_id, ключ experience_id, целое состояние, строки state_message, ключ и group_id]\n\nlist llGetExperienceDetails( key experience_id )","body":["llGetExperienceDetails(${0})"],"prefix":"llGetExperienceDetails"}},{"llGetExperienceErrorMessage":{"description":"Возвращает текстовое описание конкретного опыта постоянной ошибки ЛСЛ.Возвращает строку, описывающую код ошибки истек, либо строку, соответствующую ошибку. Возвращает XP_ERROR_UNKNOWN_ERROR если ошибка не является допустимым кодом ошибки.\n\nstring llGetExperienceErrorMessage( integer error )","body":["llGetExperienceErrorMessage(${0})"],"prefix":"llGetExperienceErrorMessage"}},{"llGetForce":{"description":"Возвращает вектор, что сила (если сценарий физическая)\n\nvector llGetForce(  )","body":["llGetForce(${0})"],"prefix":"llGetForce"}},{"llGetFreeMemory":{"description":"Возвращает целое число свободных байт памяти скрипт можно использовать.\n\ninteger llGetFreeMemory(  )","body":["llGetFreeMemory(${0})"],"prefix":"llGetFreeMemory"}},{"llGetFreeURLs":{"description":"Возвращает целое число, которое представляет количество доступных адресов.\n\ninteger llGetFreeURLs(  )","body":["llGetFreeURLs(${0})"],"prefix":"llGetFreeURLs"}},{"llGetGeometricCenter":{"description":"Возвращает вектор, который является геометрическим центром объекта относительно корня прим.\n\nvector llGetGeometricCenter(  )","body":["llGetGeometricCenter(${0})"],"prefix":"llGetGeometricCenter"}},{"llGetGMTclock":{"description":"Возвращает float, что это время в секундах, начиная с полуночи по Гринвичу. Значение обрезается до секунды.\n\nfloat llGetGMTclock(  )","body":["llGetGMTclock(${0})"],"prefix":"llGetGMTclock"}},{"llGetHTTPHeader":{"description":"Возвращает строку, которая является значением заголовка для идентификатор_запроса.\n\nstring llGetHTTPHeader( key request_id, string header )","body":["llGetHTTPHeader(${0})"],"prefix":"llGetHTTPHeader"}},{"llGetInventoryCreator":{"description":"Возвращает ключ создателя номенклатуры.\n\nkey llGetInventoryCreator( string item )","body":["llGetInventoryCreator(${0})"],"prefix":"llGetInventoryCreator"}},{"llGetInventoryKey":{"description":"Возвращает ключ, который является uuid именем инвентаризации\n\nkey llGetInventoryKey( string name )","body":["llGetInventoryKey(${0})"],"prefix":"llGetInventoryKey"}},{"llGetInventoryName":{"description":"Возвращает строку, которая является именем элемента инвентарный номер типа. Возвращает пустую строку, если ни один элемент указанного типа нашли в складской примитива (или есть меньше или равное количество элементов данного типа).\n\nstring llGetInventoryName( integer type, integer number )","body":["llGetInventoryName(${0})"],"prefix":"llGetInventoryName"}},{"llGetInventoryNumber":{"description":"Возвращает целое число-количество элементов данного типа в инвентаре примс.\n\ninteger llGetInventoryNumber( integer type )","body":["llGetInventoryNumber(${0})"],"prefix":"llGetInventoryNumber"}},{"llGetInventoryPermMask":{"description":"Возвращает битовое поле (целое число) запрашиваемой категории разрешения для складской номенклатуры\n\ninteger llGetInventoryPermMask( string item, integer category )","body":["llGetInventoryPermMask(${0})"],"prefix":"llGetInventoryPermMask"}},{"llGetInventoryType":{"description":"Возвращает целое число, которое является типом номенклатуры наименование\n\ninteger llGetInventoryType( string name )","body":["llGetInventoryType(${0})"],"prefix":"llGetInventoryType"}},{"llGetKey":{"description":"Возвращает ключ прим сценарием.\n\nkey llGetKey(  )","body":["llGetKey(${0})"],"prefix":"llGetKey"}},{"llGetLandOwnerAt":{"description":"Возвращает ключ, что является собственником земельного участка на POS.\n\nkey llGetLandOwnerAt( vector pos )","body":["llGetLandOwnerAt(${0})"],"prefix":"llGetLandOwnerAt"}},{"llGetLinkKey":{"description":"Возвращает ключ связан прим ссылке\n\nkey llGetLinkKey( integer link )","body":["llGetLinkKey(${0})"],"prefix":"llGetLinkKey"}},{"llGetLinkMedia":{"description":"Сделать медиа-параметры для конкретного лица на прим, дается необходимый список именованных параметров.Возвращает список параметров (список) значений в заказе просила.\n\nlist llGetLinkMedia( integer link, integer face, list params )","body":["llGetLinkMedia(${0})"],"prefix":"llGetLinkMedia"}},{"llGetLinkName":{"description":"Возвращает строку, которая является именем ссылки на набор ссылку\n\nstring llGetLinkName( integer link )","body":["llGetLinkName(${0})"],"prefix":"llGetLinkName"}},{"llGetLinkNumber":{"description":"Возвращает целое число-Количество ссылок прим, содержащий скрипт.\n\ninteger llGetLinkNumber(  )","body":["llGetLinkNumber(${0})"],"prefix":"llGetLinkNumber"}},{"llGetLinkNumberOfSides":{"description":"Возвращает целое число-количество граней (или сторон) прим ссылке.\n\ninteger llGetLinkNumberOfSides( integer link )","body":["llGetLinkNumberOfSides(${0})"],"prefix":"llGetLinkNumberOfSides"}},{"llGetLinkPrimitiveParams":{"description":"Возвращает значения атрибутов (список) для атрибутов запрашиваемых в списке параметров.\n\nlist llGetLinkPrimitiveParams( integer link, list params )","body":["llGetLinkPrimitiveParams(${0})"],"prefix":"llGetLinkPrimitiveParams"}},{"llGetListEntryType":{"description":"Возвращает Тип (целое число) записи по индексу в src.\n\ninteger llGetListEntryType( list src, integer index )","body":["llGetListEntryType(${0})"],"prefix":"llGetListEntryType"}},{"llGetListLength":{"description":"Возвращает целое число-количество элементов в списке грц.\n\ninteger llGetListLength( list src )","body":["llGetListLength(${0})"],"prefix":"llGetListLength"}},{"llGetLocalPos":{"description":"Возвращает вектор, что это позиция относительной (локальной) в корень.\n\nvector llGetLocalPos(  )","body":["llGetLocalPos(${0})"],"prefix":"llGetLocalPos"}},{"llGetLocalRot":{"description":"Возвращает вращения прим относительно корня.\n\nrotation llGetLocalRot(  )","body":["llGetLocalRot(${0})"],"prefix":"llGetLocalRot"}},{"llGetMass":{"description":"Возвращает float, что масса объекта (в Lindograms), что скрипт прикреплен.\n\nfloat llGetMass(  )","body":["llGetMass(${0})"],"prefix":"llGetMass"}},{"llGetMassMKS":{"description":"Возвращает float, что такое масса (в кг) объект, скрипт прилагается. Функционально идентичен llGetMass за исключением единиц, используемых в возвращаемое значение.\n\nfloat llGetMassMKS(  )","body":["llGetMassMKS(${0})"],"prefix":"llGetMassMKS"}},{"llGetMaxScaleFactor":{"description":"Возвращает float, который является крупнейшим коэффициент масштабирования, который может быть использован с llScaleByFactor, чтобы изменить размер объекта. Этот максимум определяется Правилами Linkability и ограничения масштаба прим.\n\nfloat llGetMaxScaleFactor(  )","body":["llGetMaxScaleFactor(${0})"],"prefix":"llGetMaxScaleFactor"}},{"llGetMemoryLimit":{"description":"Получить максимальный объем памяти скрипт может использовать.Возвращает целочисленное количество памяти скрипт можно использовать в байтах.\n\ninteger llGetMemoryLimit(  )","body":["llGetMemoryLimit(${0})"],"prefix":"llGetMemoryLimit"}},{"llGetMinScaleFactor":{"description":"Возвращает float, что является наименьшим коэффициентом масштабирования, который может быть использован с llScaleByFactor, чтобы изменить размер объекта. Этот минимум определяется шкалой пределы прим.\n\nfloat llGetMinScaleFactor(  )","body":["llGetMinScaleFactor(${0})"],"prefix":"llGetMinScaleFactor"}},{"llGetNextEmail":{"description":"Получить следующую почту, которая приходит с адреса, с указанным предметом.\n\nllGetNextEmail( string address, string subject )","body":["llGetNextEmail(${0})"],"prefix":"llGetNextEmail"}},{"llGetNotecardLine":{"description":"Просит линия линия карта идет название от dataserver.Возвращает ручку (ключ) на dataserver ответа на событие.\n\nkey llGetNotecardLine( string name, integer line )","body":["llGetNotecardLine(${0})"],"prefix":"llGetNotecardLine"}},{"llGetNumberOfNotecardLines":{"description":"Запрашивает количество строк в карта идет имя через событие dataserver (литой dataserver значение в integer)возвращает ручку (ключ) на dataserver ответа на событие.\n\nkey llGetNumberOfNotecardLines( string name )","body":["llGetNumberOfNotecardLines(${0})"],"prefix":"llGetNumberOfNotecardLines"}},{"llGetNumberOfPrims":{"description":"Возвращает целое число-количество примс в ссылке установить скрипт прикреплен.\n\ninteger llGetNumberOfPrims(  )","body":["llGetNumberOfPrims(${0})"],"prefix":"llGetNumberOfPrims"}},{"llGetNumberOfSides":{"description":"Возвращает целое число-количество граней (или сторон) прим.\n\ninteger llGetNumberOfSides(  )","body":["llGetNumberOfSides(${0})"],"prefix":"llGetNumberOfSides"}},{"llGetObjectDesc":{"description":"Возвращает строку, содержащую описание прим скрипт прикреплен.\n\nstring llGetObjectDesc(  )","body":["llGetObjectDesc(${0})"],"prefix":"llGetObjectDesc"}},{"llGetObjectDetails":{"description":"Возвращает список деталей для удостоверения личности, в частности, просила в параметрах.\n\nlist llGetObjectDetails( key id, list params )","body":["llGetObjectDetails(${0})"],"prefix":"llGetObjectDetails"}},{"llGetObjectMass":{"description":"Возвращает float, что масса ИД\n\nfloat llGetObjectMass( key id )","body":["llGetObjectMass(${0})"],"prefix":"llGetObjectMass"}},{"llGetObjectName":{"description":"Возвращает строку, которая является именем прим скрипт прикреплен.\n\nstring llGetObjectName(  )","body":["llGetObjectName(${0})"],"prefix":"llGetObjectName"}},{"llGetObjectPermMask":{"description":"Возвращает битовое поле (целое число) запрашиваемой категории разрешений для объекта, содержащего этот скрипт.\n\ninteger llGetObjectPermMask( integer category )","body":["llGetObjectPermMask(${0})"],"prefix":"llGetObjectPermMask"}},{"llGetObjectPrimCount":{"description":"Возвращает целое число, общее количество примс в объект, который содержит прим.\n\ninteger llGetObjectPrimCount( key prim )","body":["llGetObjectPrimCount(${0})"],"prefix":"llGetObjectPrimCount"}},{"llGetOmega":{"description":"Возвращает вектор, скорость вращения объекта в радианах в секунду.\n\nvector llGetOmega(  )","body":["llGetOmega(${0})"],"prefix":"llGetOmega"}},{"llGetOwner":{"description":"Возвращает ключ, который является владельцем объекта, идентификатор uuid.\n\nkey llGetOwner(  )","body":["llGetOwner(${0})"],"prefix":"llGetOwner"}},{"llGetOwnerKey":{"description":"Возвращает ключ, который является владельцем прим ИД\n\nkey llGetOwnerKey( key id )","body":["llGetOwnerKey(${0})"],"prefix":"llGetOwnerKey"}},{"llGetParcelDetails":{"description":"Возвращает список, который является посылка реквизитам, указанным в параметрах (в одном заказе) для посылки в поз.\n\nlist llGetParcelDetails( vector pos, list params )","body":["llGetParcelDetails(${0})"],"prefix":"llGetParcelDetails"}},{"llGetParcelFlags":{"description":"Возвращает битовое поле (целое число) посылки плит (PARCEL_FLAG_*) для посылки, которая включает пункт POS.\n\ninteger llGetParcelFlags( vector pos )","body":["llGetParcelFlags(${0})"],"prefix":"llGetParcelFlags"}},{"llGetParcelMaxPrims":{"description":"Возвращает целое число, которое является максимальной совокупной отдачи земель допускается для объектов на участке в POS.\n\ninteger llGetParcelMaxPrims( vector pos, integer sim_wide )","body":["llGetParcelMaxPrims(${0})"],"prefix":"llGetParcelMaxPrims"}},{"llGetParcelMusicURL":{"description":"Возвращает строку, содержащую посылка потокового аудио URL-адрес.\n\nstring llGetParcelMusicURL(  )","body":["llGetParcelMusicURL(${0})"],"prefix":"llGetParcelMusicURL"}},{"llGetParcelPrimCount":{"description":"Возвращает целое число, которое является общей земельной воздействия объектов на участке в POS данной категории\n\ninteger llGetParcelPrimCount( vector pos, integer category, integer sim_wide )","body":["llGetParcelPrimCount(${0})"],"prefix":"llGetParcelPrimCount"}},{"llGetParcelPrimOwners":{"description":"Возвращает список всех жителей, которые владеют объектами на участке в пос и использовать индивидуальные воздействия на землю. Список форматируется как [ ключ agentKey1, число agentImpact1, ключ agentKey2, число agentImpact2, ... ], и отсортированный по основным средством с не более 100 шагов.\n\nlist llGetParcelPrimOwners( vector pos )","body":["llGetParcelPrimOwners(${0})"],"prefix":"llGetParcelPrimOwners"}},{"llGetPermissions":{"description":"Возвращает целочисленное битовое поле с разрешения скрипт предоставляется\n\ninteger llGetPermissions(  )","body":["llGetPermissions(${0})"],"prefix":"llGetPermissions"}},{"llGetPermissionsKey":{"description":"Возвращает аватар (ключ) аватар, что последнему предоставлен или отклонен разрешения на сценарий.\n\nkey llGetPermissionsKey(  )","body":["llGetPermissionsKey(${0})"],"prefix":"llGetPermissionsKey"}},{"llGetPhysicsMaterial":{"description":"Используется для получения физических характеристик объекта.Возвращает список в виде [ gravity_multiplier поплавок, реституция поплавок, поплавок трения, поплавка плотности ]\n\nlist llGetPhysicsMaterial(  )","body":["llGetPhysicsMaterial(${0})"],"prefix":"llGetPhysicsMaterial"}},{"llGetPos":{"description":"Возвращает позицию вектора задачи в координатах области\n\nvector llGetPos(  )","body":["llGetPos(${0})"],"prefix":"llGetPos"}},{"llGetPrimitiveParams":{"description":"Возвращает значения атрибутов (список) для атрибутов запрашиваемых в списке параметров.\n\nlist llGetPrimitiveParams( list params )","body":["llGetPrimitiveParams(${0})"],"prefix":"llGetPrimitiveParams"}},{"llGetPrimMediaParams":{"description":"Получить медиа-параметры для конкретного лица на объект, дается необходимый список имен.Возвращает список параметров (список) значений в заказе просила.\n\nlist llGetPrimMediaParams( integer face, list params )","body":["llGetPrimMediaParams(${0})"],"prefix":"llGetPrimMediaParams"}},{"llGetRegionAgentCount":{"description":"Возвращает целое число-количество аватарок в регионе.\n\ninteger llGetRegionAgentCount(  )","body":["llGetRegionAgentCount(${0})"],"prefix":"llGetRegionAgentCount"}},{"llGetRegionCorner":{"description":"Возвращает вектор в метров, что является мировым расположение юго-западном углу области объект. Компонент Z представляет 0.0\n\nvector llGetRegionCorner(  )","body":["llGetRegionCorner(${0})"],"prefix":"llGetRegionCorner"}},{"llGetRegionFlags":{"description":"Возвращает целое число, которое является флаги области (REGION_FLAG_*) для региона объект.\n\ninteger llGetRegionFlags(  )","body":["llGetRegionFlags(${0})"],"prefix":"llGetRegionFlags"}},{"llGetRegionFPS":{"description":"Возвращает float, что это означает периодов проживания в секунду.\n\nfloat llGetRegionFPS(  )","body":["llGetRegionFPS(${0})"],"prefix":"llGetRegionFPS"}},{"llGetRegionName":{"description":"Возвращает строку, которая является нынешнее название области\n\nstring llGetRegionName(  )","body":["llGetRegionName(${0})"],"prefix":"llGetRegionName"}},{"llGetRegionTimeDilation":{"description":"Возвращает float, что текущее замедление времени, диапазон значений: [0.0, 1.0], 0.0 (полное расширение) и 1.0 (не расширяется).[1]\n\nfloat llGetRegionTimeDilation(  )","body":["llGetRegionTimeDilation(${0})"],"prefix":"llGetRegionTimeDilation"}},{"llGetRootPosition":{"description":"Возвращает вектор, что позиция области корневого объекта скрипта объект привязан к\n\nvector llGetRootPosition(  )","body":["llGetRootPosition(${0})"],"prefix":"llGetRootPosition"}},{"llGetRootRotation":{"description":"Возвращает вращение это вращение области корня прим объекта.\n\nrotation llGetRootRotation(  )","body":["llGetRootRotation(${0})"],"prefix":"llGetRootRotation"}},{"llGetRot":{"description":"Возвращает вращения вращения примитива относительно оси региона.\n\nrotation llGetRot(  )","body":["llGetRot(${0})"],"prefix":"llGetRot"}},{"llGetScale":{"description":"Возвращает вектор, масштаб прим.\n\nvector llGetScale(  )","body":["llGetScale(${0})"],"prefix":"llGetScale"}},{"llGetScriptName":{"description":"Возвращает строку, которая является именем сценария, который вызвал эту функцию.\n\nstring llGetScriptName(  )","body":["llGetScriptName(${0})"],"prefix":"llGetScriptName"}},{"llGetScriptState":{"description":"Возвращает логическое значение (целое число), равное True, если скрипт выполняется.\n\ninteger llGetScriptState( string script )","body":["llGetScriptState(${0})"],"prefix":"llGetScriptState"}},{"llGetSimStats":{"description":"Возвращает float, что запрашиваемая статистика.\n\nfloat llGetSimStats( integer stat_type )","body":["llGetSimStats(${0})"],"prefix":"llGetSimStats"}},{"llGetSimulatorHostname":{"description":"Возвращает строку, которая является именем машины скрипт выполняется (так же, как строки в окне просмотра диалогового помочь)\n\nstring llGetSimulatorHostname(  )","body":["llGetSimulatorHostname(${0})"],"prefix":"llGetSimulatorHostname"}},{"llGetSPMaxMemory":{"description":"Возвращает целое число самых байтов, используемых при LlScriptProfiler была активна.\n\ninteger llGetSPMaxMemory(  )","body":["llGetSPMaxMemory(${0})"],"prefix":"llGetSPMaxMemory"}},{"llGetStartParameter":{"description":"Возвращает целое число, которое является скрипт запуска параметр/рез.\n\ninteger llGetStartParameter(  )","body":["llGetStartParameter(${0})"],"prefix":"llGetStartParameter"}},{"llGetStaticPath":{"description":"Возвращает список векторов установки с указанием точки поиска пути между позициями в начале и в конце, на характер заданного радиуса. Точки эта функция возвращает предназначены для статическая навигация сетки, это означает, что объекты на \"движимое препятствие\" или \"подвижный Фантом\" игнорируются.\n\nlist llGetStaticPath( vector start, vector end, float radius, list params )","body":["llGetStaticPath(${0})"],"prefix":"llGetStaticPath"}},{"llGetStatus":{"description":"Возвращает логическое значение (целое число) равен статусу объекта.\n\ninteger llGetStatus( integer status )","body":["llGetStatus(${0})"],"prefix":"llGetStatus"}},{"llGetSubString":{"description":"Возвращает строку, являющуюся подстрокой гкз от начала и до конца, оставляя исходную строку нетронутой.\n\nstring llGetSubString( string src, integer start, integer end )","body":["llGetSubString(${0})"],"prefix":"llGetSubString"}},{"llGetSunDirection":{"description":"Возвращает вектор, нормализованный вектор направления на солнце в области.\n\nvector llGetSunDirection(  )","body":["llGetSunDirection(${0})"],"prefix":"llGetSunDirection"}},{"llGetTexture":{"description":"Возвращает строку, которая является текстуры на лицо\n\nstring llGetTexture( integer face )","body":["llGetTexture(${0})"],"prefix":"llGetTexture"}},{"llGetTextureOffset":{"description":"Возвращает вектор, текстура смещение лица В х (\"У\", по горизонтали) и Y (\"в\", вертикальной) компоненты. Компонент Z не используется.\n\nvector llGetTextureOffset( integer face )","body":["llGetTextureOffset(${0})"],"prefix":"llGetTextureOffset"}},{"llGetTextureRot":{"description":"Возвращает float, что это вращение текстуры, выраженная как угол, на лице\n\nfloat llGetTextureRot( integer face )","body":["llGetTextureRot(${0})"],"prefix":"llGetTextureRot"}},{"llGetTextureScale":{"description":"Возвращает вектор, что такое накипь текстуры на лицо (используются только компоненты X и Y).\n\nvector llGetTextureScale( integer face )","body":["llGetTextureScale(${0})"],"prefix":"llGetTextureScale"}},{"llGetTime":{"description":"Возвращает float, что время скрипта в секундах с точностью до доли секунды после запуска скрипта, последнего сброса или вызов llResetTime или llGetAndResetTime.\n\nfloat llGetTime(  )","body":["llGetTime(${0})"],"prefix":"llGetTime"}},{"llGetTimeOfDay":{"description":"Возвращает float, что это время в секундах с точностью до доли секунды со второй жизнью полночь или области до времени (время с момента, когда регион был доставлен онлайн/перезагружается); какое значение меньше. Если область настроена так что на солнце остается в неизменном положении, а затем возвращается значение региона до времени.\n\nfloat llGetTimeOfDay(  )","body":["llGetTimeOfDay(${0})"],"prefix":"llGetTimeOfDay"}},{"llGetTimestamp":{"description":"Возвращает строку, текущую дату и время в часовом поясе UTC в формате \"ГГГГ-мм-Ддтчч:мм:СС.ФФ..ФЗ\"\n\nstring llGetTimestamp(  )","body":["llGetTimestamp(${0})"],"prefix":"llGetTimestamp"}},{"llGetTorque":{"description":"Возвращает вектор, который является крутящим моментом (если сценарий физическая)\n\nvector llGetTorque(  )","body":["llGetTorque(${0})"],"prefix":"llGetTorque"}},{"llGetUnixTime":{"description":"Возвращает целое число-количество секунд, прошедшее с 00:00 часов 1 января 1970 года по UTC от системных часов.\n\ninteger llGetUnixTime(  )","body":["llGetUnixTime(${0})"],"prefix":"llGetUnixTime"}},{"llGetUsedMemory":{"description":"Возвращает целое число байтов памяти, используемых в настоящее время сценарий.\n\ninteger llGetUsedMemory(  )","body":["llGetUsedMemory(${0})"],"prefix":"llGetUsedMemory"}},{"llGetUsername":{"description":"Возвращает строку, которая является уникальное имя пользователя, аватар, указанного по ID.\n\nstring llGetUsername( key id )","body":["llGetUsername(${0})"],"prefix":"llGetUsername"}},{"llGetVel":{"description":"Возвращает вектор, что скорость объекта.\n\nvector llGetVel(  )","body":["llGetVel(${0})"],"prefix":"llGetVel"}},{"llGetWallclock":{"description":"Возвращает float, что это время в секундах, начиная с полуночи по Тихоокеанскому времени (по московскому времени), усекаются до целых секунд. Это же время в та выражается в секундах.\n\nfloat llGetWallclock(  )","body":["llGetWallclock(${0})"],"prefix":"llGetWallclock"}},{"llGiveInventory":{"description":"Дать инвентарь по назначению.\n\nllGiveInventory( key destination, string inventory )","body":["llGiveInventory(${0})"],"prefix":"llGiveInventory"}},{"llGiveInventoryList":{"description":"Дает предметы из инвентаря для цели, создавая новую папку для его размещения.\n\nllGiveInventoryList( key target, string folder, list inventory )","body":["llGiveInventoryList(${0})"],"prefix":"llGiveInventoryList"}},{"llGiveMoney":{"description":"Сумма перевода в$ L деньги от владельца скрипт для назначения аватар.Возвращает целочисленное значение, всегда равна нулю. В отличие от llTransferLindenDollars возвращает ключ, который может быть использован, чтобы соответствовать вызов функции результирующее событие transaction_result и истории транзакций.\n\ninteger llGiveMoney( key destination, integer amount )","body":["llGiveMoney(${0})"],"prefix":"llGiveMoney"}},{"llGodLikeRezObject":{"description":"Требует Режим Бога. Рэз напрямую с uuid и если владелец имеет Бога-бит.\n\nllGodLikeRezObject( key inventory, vector pos )","body":["llGodLikeRezObject(${0})"],"prefix":"llGodLikeRezObject"}},{"llGround":{"description":"Возвращает float, что является основанием высоты прямо под чопорная позиция + смещение\n\nfloat llGround( vector offset )","body":["llGround(${0})"],"prefix":"llGround"}},{"llGroundContour":{"description":"Возвращает вектор, который является основанием контур направлении ниже прим позиция + смещение. Контур-это направление линии контура в этой точке, то есть направление, в котором нет изменения по высоте.\n\nvector llGroundContour( vector offset )","body":["llGroundContour(${0})"],"prefix":"llGroundContour"}},{"llGroundNormal":{"description":"Возвращает вектор, который является основой нормального от текущего положения + смещение.\n\nvector llGroundNormal( vector offset )","body":["llGroundNormal(${0})"],"prefix":"llGroundNormal"}},{"llGroundRepel":{"description":"Критически демпфирует на высоте, если в пределах высоты * 0,5 от земли или воды (смотря что выше)\n\nllGroundRepel( float height, integer water, float tau )","body":["llGroundRepel(${0})"],"prefix":"llGroundRepel"}},{"llGroundSlope":{"description":"Возвращает вектор, который является основанием склон чуть ниже позиции объекта + смещение\n\nvector llGroundSlope( vector offset )","body":["llGroundSlope(${0})"],"prefix":"llGroundSlope"}},{"llHTTPRequest":{"description":"Отправляет http-запрос на указанный URL-адрес с телом запроса и параметров.Возвращает дескриптор (ключ) выявление запроса http.\n\nkey llHTTPRequest( string url, list parameters, string body )","body":["llHTTPRequest(${0})"],"prefix":"llHTTPRequest"}},{"llHTTPResponse":{"description":"Реагирует на идентификатор_запроса со статусом и тела.\n\nllHTTPResponse( key request_id, integer status, string body )","body":["llHTTPResponse(${0})"],"prefix":"llHTTPResponse"}},{"llInsertString":{"description":"Возвращает строку DST с грц вставлен начиная с поз.\n\nstring llInsertString( string dst, integer pos, string src )","body":["llInsertString(${0})"],"prefix":"llInsertString"}},{"llInstantMessage":{"description":"Посылает мгновенные Сообщения, указанного в строке сообщения пользователя, указанное пользователем.\n\nllInstantMessage( key user, string message )","body":["llInstantMessage(${0})"],"prefix":"llInstantMessage"}},{"llIntegerToBase64":{"description":"Возвращает строку base64 и большой endian кодировать числа\n\nstring llIntegerToBase64( integer number )","body":["llIntegerToBase64(${0})"],"prefix":"llIntegerToBase64"}},{"llJson2List":{"description":"Эта функция принимает строку, представляющую json и возвращает список высшего уровня.Возвращает список сделан путем анализа грц, строковое представление в формате json.\n\nlist llJson2List( string src )","body":["llJson2List(${0})"],"prefix":"llJson2List"}},{"llJsonGetValue":{"description":"Получает значение, обозначенное описатели из строки json.Возвращает строку, сделанные разбор json-строка, представляющая json и перемещения, как указано спецификаторы.\n\nstring llJsonGetValue( string json, list specifiers )","body":["llJsonGetValue(${0})"],"prefix":"llJsonGetValue"}},{"llJsonSetValue":{"description":"Возвращает в случае успеха новый формат json строку текста, который является json со значением, заданным в списке описателей значения.\n\nstring llJsonSetValue( string json, list specifiers, string value )","body":["llJsonSetValue(${0})"],"prefix":"llJsonSetValue"}},{"llJsonValueType":{"description":"Получает типа json значение в json на месте спецификаторы.Возвращает строку, указывающую Тип значения на описатели в json.\n\nstring llJsonValueType( string json, list specifiers )","body":["llJsonValueType(${0})"],"prefix":"llJsonValueType"}},{"llKey2Name":{"description":"Возвращает строку, которая является именем наследие прим или аватар, указанного по ID.\n\nstring llKey2Name( key id )","body":["llKey2Name(${0})"],"prefix":"llKey2Name"}},{"llKeyCountKeyValue":{"description":"Запустить асинхронную операцию, чтобы запросить количество ключей с опытом работы скрипта.Возвращает дескриптор (ключ), который может быть использован для определения соответствующего события dataserver, чтобы определить, если эта команда успешно или нет и результатов.\n\nkey llKeyCountKeyValue(  )","body":["llKeyCountKeyValue(${0})"],"prefix":"llKeyCountKeyValue"}},{"llKeysKeyValue":{"description":"Запустить асинхронную операцию, чтобы запросить количество ключей от опыта работы скрипта.Возвращает дескриптор (ключ), который может быть использован для определения соответствующего события dataserver, чтобы определить, если эта команда успешно или нет.\n\nkey llKeysKeyValue( integer first, integer count )","body":["llKeysKeyValue(${0})"],"prefix":"llKeysKeyValue"}},{"llLinkParticleSystem":{"description":"Система частиц, определенный список правил для прим ссылке(ов).\n\nllLinkParticleSystem( integer link, list rules )","body":["llLinkParticleSystem(${0})"],"prefix":"llLinkParticleSystem"}},{"llLinkSitTarget":{"description":"Установить местоположение сидеть связанный прим(ы). Расположение сидят относительно установки и вращения прим.\n\nllLinkSitTarget( integer link, vector offset, rotation rot )","body":["llLinkSitTarget(${0})"],"prefix":"llLinkSitTarget"}},{"llList2CSV":{"description":"Возвращает строку значений, разделенных запятой, принятых в порядке от грц.\n\nstring llList2CSV( list src )","body":["llList2CSV(${0})"],"prefix":"llList2CSV"}},{"llList2Float":{"description":"Возвращает float, что по индексу в src.\n\nfloat llList2Float( list src, integer index )","body":["llList2Float(${0})"],"prefix":"llList2Float"}},{"llList2Integer":{"description":"Возвращает целое число, которое является индексом в src.\n\ninteger llList2Integer( list src, integer index )","body":["llList2Integer(${0})"],"prefix":"llList2Integer"}},{"llList2Json":{"description":"Эта функция принимает список и возвращает json-строку из списка как объект json, json-массив.Возвращает строку, которая является либо значений сериализуется в качестве типа json, или если ошибка была обнаружена JSON_INVALID.\n\nstring llList2Json( string type, list values )","body":["llList2Json(${0})"],"prefix":"llList2Json"}},{"llList2Key":{"description":"Возвращает ключ, который имеет индекс в src.\n\nkey llList2Key( list src, integer index )","body":["llList2Key(${0})"],"prefix":"llList2Key"}},{"llList2List":{"description":"Возвращает список, который является кусочком гкз от начала до конца.\n\nlist llList2List( list src, integer start, integer end )","body":["llList2List(${0})"],"prefix":"llList2List"}},{"llList2ListStrided":{"description":"Возвращает список всех записей в списке strided индекс которых кратен шаг в начале серии и до конца.\n\nlist llList2ListStrided( list src, integer start, integer end, integer stride )","body":["llList2ListStrided(${0})"],"prefix":"llList2ListStrided"}},{"llList2Rot":{"description":"Возвращает вращения, что по индексу в src.\n\nrotation llList2Rot( list src, integer index )","body":["llList2Rot(${0})"],"prefix":"llList2Rot"}},{"llList2String":{"description":"Возвращает строку, которая является индексом в src.\n\nstring llList2String( list src, integer index )","body":["llList2String(${0})"],"prefix":"llList2String"}},{"llList2Vector":{"description":"Возвращает вектор, что по индексу в src.\n\nvector llList2Vector( list src, integer index )","body":["llList2Vector(${0})"],"prefix":"llList2Vector"}},{"llListen":{"description":"Наборы ручка для msg на канал с именем и ID.Возвращает дескриптор (целое число), которые можно использовать, чтобы деактивировать или удалить слушать.\n\ninteger llListen( integer channel, string name, key id, string msg )","body":["llListen(${0})"],"prefix":"llListen"}},{"llListenControl":{"description":"Заставляет слушать событие обратного вызова активным или неактивным\n\nllListenControl( integer handle, integer active )","body":["llListenControl(${0})"],"prefix":"llListenControl"}},{"llListenRemove":{"description":"Удаляет слушать событие обратного вызова\n\nllListenRemove( integer handle )","body":["llListenRemove(${0})"],"prefix":"llListenRemove"}},{"llListFindList":{"description":"Возвращает целочисленный индекс первого экземпляра испытания в ГНЦ.\n\ninteger llListFindList( list src, list test )","body":["llListFindList(${0})"],"prefix":"llListFindList"}},{"llListInsertList":{"description":"Возвращает список, содержащий все элементы из дест, но с элементами из src вставляется в стартовую позицию.\n\nlist llListInsertList( list dest, list src, integer start )","body":["llListInsertList(${0})"],"prefix":"llListInsertList"}},{"llListRandomize":{"description":"Возвращает список, который является случайной перестановки ница.\n\nlist llListRandomize( list src, integer stride )","body":["llListRandomize(${0})"],"prefix":"llListRandomize"}},{"llListReplaceList":{"description":"Возвращает список, который является копией дест с начала до конца удален и src вставить в начало.\n\nlist llListReplaceList( list dest, list src, integer start, integer end )","body":["llListReplaceList(${0})"],"prefix":"llListReplaceList"}},{"llListSort":{"description":"Возвращает список, который является src, отсортированные по ходу.\n\nlist llListSort( list src, integer stride, integer ascending )","body":["llListSort(${0})"],"prefix":"llListSort"}},{"llListStatistics":{"description":"Возвращает float, который является результатом выполнения статистической совокупности функцию на грц.\n\nfloat llListStatistics( integer operation, list src )","body":["llListStatistics(${0})"],"prefix":"llListStatistics"}},{"llLoadURL":{"description":"Диалог показывает аватар, предлагающее загрузить веб-страницу по ссылке с сообщения.Если пользователь нажмет кнопку да, запускает страницу в веб-браузере, при запуске браузера, если требуется.\n\nllLoadURL( key avatar, string message, string url )","body":["llLoadURL(${0})"],"prefix":"llLoadURL"}},{"llLog":{"description":"Возвращает float, что натуральный логарифм Вэл.Если val <= вместо 0 вернуться 0.0.\n\nfloat llLog( float val )","body":["llLog(${0})"],"prefix":"llLog"}},{"llLog10":{"description":"Возвращает float, что это логарифм по основанию 10 Вэл.Если val <= вместо 0 вернуться к нулю.\n\nfloat llLog10( float val )","body":["llLog10(${0})"],"prefix":"llLog10"}},{"llLookAt":{"description":"Привести объект к точке его оси (положительное значение Z) к цели, сохраняя его переднюю ось (положительное х) ниже горизонта.\n\nllLookAt( vector target, float strength, float damping )","body":["llLookAt(${0})"],"prefix":"llLookAt"}},{"llLoopSound":{"description":"Играет звуком, зацикливание на неопределенный срок в том\n\nllLoopSound( string sound, float volume )","body":["llLoopSound(${0})"],"prefix":"llLoopSound"}},{"llLoopSoundMaster":{"description":"Играет добавленные звукового цикла в объеме, признает его мастером синхронизации.\n\nllLoopSoundMaster( string sound, float volume )","body":["llLoopSoundMaster(${0})"],"prefix":"llLoopSoundMaster"}},{"llLoopSoundSlave":{"description":"Играет звуком, зацикливание на том, синхронизированные с наиболее звучных синхронизации мастер-заявил llLoopSoundMaster.\n\nllLoopSoundSlave( string sound, float volume )","body":["llLoopSoundSlave(${0})"],"prefix":"llLoopSoundSlave"}},{"llManageEstateAccess":{"description":"Использовать для добавления или удаления агентов из поместья агента доступ или запрет списков или групп из списка группы доступа к недвижимости.Возвращает логическое значение (целочисленное) значение True, если вызов прошел успешно; false, если регулирование, недопустимых действий, недействительным или NULL, ID или объект собственника не допускается, чтобы управлять имением.\n\ninteger llManageEstateAccess( integer action, key avatar )","body":["llManageEstateAccess(${0})"],"prefix":"llManageEstateAccess"}},{"llMapDestination":{"description":"Открывает карту мира с центром на simname с POS выделены.Работает только для скриптов, прикрепленных к аватару, или во время события касания.\n\nllMapDestination( string simname, vector pos, vector look_at )","body":["llMapDestination(${0})"],"prefix":"llMapDestination"}},{"llMD5String":{"description":"Возвращает строку из 32 шестнадцатеричных символов, контрольная сумма MD5 ница с солью \":\"+элемент \"nonce\".\n\nstring llMD5String( string src, integer nonce )","body":["llMD5String(${0})"],"prefix":"llMD5String"}},{"llMessageLinked":{"description":"Цель этой функции-разрешить скрипты в один и тот же объект для общения. Она инициирует событие link_message с теми же параметрами, Кол-во, СПО и ID В все скрипты в прим(ы), описанные по ссылке.\n\nllMessageLinked( integer link, integer num, string str, key id )","body":["llMessageLinked(${0})"],"prefix":"llMessageLinked"}},{"llMinEventDelay":{"description":"Установить минимальное время между событиями обрабатывается.\n\nllMinEventDelay( float delay )","body":["llMinEventDelay(${0})"],"prefix":"llMinEventDelay"}},{"llModifyLand":{"description":"Изменить землю с действием на кисти\n\nllModifyLand( integer action, integer brush )","body":["llModifyLand(${0})"],"prefix":"llModifyLand"}},{"llModPow":{"description":"Возвращает целое число, которое является в степени б, с мод. ( (**б)%в )\n\ninteger llModPow( integer a, integer b, integer c )","body":["llModPow(${0})"],"prefix":"llModPow"}},{"llMoveToTarget":{"description":"Критически влажной в Тау секунд (если сценарий физическая)\n\nllMoveToTarget( vector target, float tau )","body":["llMoveToTarget(${0})"],"prefix":"llMoveToTarget"}},{"llNavigateTo":{"description":"Руководит объекта в заданное положение в регионе или соседних регионах.\n\nllNavigateTo( vector pos, list options )","body":["llNavigateTo(${0})"],"prefix":"llNavigateTo"}},{"llOffsetTexture":{"description":"Устанавливает текстуру смещения U и V для выбранного лица.\n\nllOffsetTexture( float u, float v, integer face )","body":["llOffsetTexture(${0})"],"prefix":"llOffsetTexture"}},{"llOpenRemoteDataChannel":{"description":"Создает канал для прослушивания для XML-RPC-вызовов. Вызовет событие remote_data с идентификатором канала, когда он будет доступен.\n\nllOpenRemoteDataChannel(  )","body":["llOpenRemoteDataChannel(${0})"],"prefix":"llOpenRemoteDataChannel"}},{"llOverMyLand":{"description":"Возвращает целочисленное значение типа boolean, True, если идентификатор на землю, принадлежащую владельцу скрипта, false в противном случае.\n\ninteger llOverMyLand( key id )","body":["llOverMyLand(${0})"],"prefix":"llOverMyLand"}},{"llOwnerSay":{"description":"Говорит мсг только владельцу объекта, если владелец в данный момент находится в том же регионе.\n\nllOwnerSay( string msg )","body":["llOwnerSay(${0})"],"prefix":"llOwnerSay"}},{"llParcelMediaCommandList":{"description":"Управляет воспроизведением фильмов и других мультимедийных ресурсов на участке или для агента.\n\nllParcelMediaCommandList( list commandList )","body":["llParcelMediaCommandList(${0})"],"prefix":"llParcelMediaCommandList"}},{"llParcelMediaQuery":{"description":"Возвращает список, содержащий Результаты запроса. Результаты в том же порядке, как запрос.\n\nlist llParcelMediaQuery( list query )","body":["llParcelMediaQuery(${0})"],"prefix":"llParcelMediaQuery"}},{"llParseString2List":{"description":"Возвращает список, который является src разбивается на список строк, отбрасывая сепараторы, сохраняя распорки, отбрасывает любого NULL (пустая строка) значений генерируется.\n\nlist llParseString2List( string src, list separators, list spacers )","body":["llParseString2List(${0})"],"prefix":"llParseString2List"}},{"llParseStringKeepNulls":{"description":"Возвращает список, который является src взломали список, отбрасывая сепараторы, сохраняя распорки, сохраняя значения NULL автоматически.\n\nlist llParseStringKeepNulls( string src, list separators, list spacers )","body":["llParseStringKeepNulls(${0})"],"prefix":"llParseStringKeepNulls"}},{"llParticleSystem":{"description":"Определяет систему частиц, содержащей прим на основе списка правил.\n\nllParticleSystem( list rules )","body":["llParticleSystem(${0})"],"prefix":"llParticleSystem"}},{"llPassCollisions":{"description":"Наборы проходят столкновения атрибут прим.\n\nllPassCollisions( integer pass )","body":["llPassCollisions(${0})"],"prefix":"llPassCollisions"}},{"llPassTouches":{"description":"Задает пропуск-штрихи атрибут прим.\n\nllPassTouches( integer pass )","body":["llPassTouches(${0})"],"prefix":"llPassTouches"}},{"llPatrolPoints":{"description":"Устанавливает патрулирование объекта между указанными в patrolPoints.\n\nllPatrolPoints( list patrolPoints, list options )","body":["llPatrolPoints(${0})"],"prefix":"llPatrolPoints"}},{"llPlaySound":{"description":"Играет после подключения звук громкостью\n\nllPlaySound( string sound, float volume )","body":["llPlaySound(${0})"],"prefix":"llPlaySound"}},{"llPlaySoundSlave":{"description":"Играет после подключения звука по громкости, синхронизируются в следующем цикле большинство звуковой синхронизации мастер-заявил llLoopSoundMaster.\n\nllPlaySoundSlave( string sound, float volume )","body":["llPlaySoundSlave(${0})"],"prefix":"llPlaySoundSlave"}},{"llPow":{"description":"Возвращает float, что база выросла до показателя мощности (baseexponent)\n\nfloat llPow( float base, float exponent )","body":["llPow(${0})"],"prefix":"llPow"}},{"llPreloadSound":{"description":"Загружает звук на зрителя в диапазоне\n\nllPreloadSound( string sound )","body":["llPreloadSound(${0})"],"prefix":"llPreloadSound"}},{"llPursue":{"description":"Заставляет объект преследовать цель.\n\nllPursue( key target, list options )","body":["llPursue(${0})"],"prefix":"llPursue"}},{"llPushObject":{"description":"Применяется импульс и ang_impulse в объект цель\n\nllPushObject( key target, vector impulse, vector ang_impulse, integer local )","body":["llPushObject(${0})"],"prefix":"llPushObject"}},{"llReadKeyValue":{"description":"Запустить асинхронную операцию, чтобы прочитать значение, связанное с указанным ключом (K) и опыт работы скрипта.Возвращает дескриптор (ключ), который может быть использован для определения соответствующего события dataserver, чтобы определить, если эта команда успешно или нет и результатов.\n\nkey llReadKeyValue( string k )","body":["llReadKeyValue(${0})"],"prefix":"llReadKeyValue"}},{"llRegionSay":{"description":"Говорит строку msg на канал номер канала, который может быть услышан в любом месте в регионе скрипт прослушивает канал.\n\nllRegionSay( integer channel, string msg )","body":["llRegionSay(${0})"],"prefix":"llRegionSay"}},{"llRegionSayTo":{"description":"Говорит текст, поставленный в строку msg на канал сбыта в целое число канала на объект или аватар указанные цели\n\nllRegionSayTo( key target, integer channel, string msg )","body":["llRegionSayTo(${0})"],"prefix":"llRegionSayTo"}},{"llReleaseControls":{"description":"Прекратить прием сырья (которые были взяты с llTakeControls), извлекает любую оставшуюся мероприятий контроля. Если PERMISSION_TAKE_CONTROLS был ранее предоставлен, он будет аннулирован.\n\nllReleaseControls(  )","body":["llReleaseControls(${0})"],"prefix":"llReleaseControls"}},{"llReleaseURL":{"description":"Релизы указанный URL-адрес, он больше не будет использоваться.\n\nllReleaseURL( string url )","body":["llReleaseURL(${0})"],"prefix":"llReleaseURL"}},{"llRemoteDataReply":{"description":"Отправлять в формате XML-RPC в ответ на канал в почты с полезной нагрузкой строку sdata и целое idata по\n\nllRemoteDataReply( key channel, key message_id, string sdata, integer idata )","body":["llRemoteDataReply(${0})"],"prefix":"llRemoteDataReply"}},{"llRemoteLoadScriptPin":{"description":"Скопируйте название скрипта в цель и настроено для работы с start_param только если целевой пин играм пин\n\nllRemoteLoadScriptPin( key target, string name, integer pin, integer running, integer start_param )","body":["llRemoteLoadScriptPin(${0})"],"prefix":"llRemoteLoadScriptPin"}},{"llRemoveFromLandBanList":{"description":"Удалить аватар из списка запрета земель\n\nllRemoveFromLandBanList( key avatar )","body":["llRemoveFromLandBanList(${0})"],"prefix":"llRemoveFromLandBanList"}},{"llRemoveFromLandPassList":{"description":"Удалить аватар из списка земле пройти.\n\nllRemoveFromLandPassList( key avatar )","body":["llRemoveFromLandPassList(${0})"],"prefix":"llRemoveFromLandPassList"}},{"llRemoveInventory":{"description":"Удалить именованный элемент инвентаризации\n\nllRemoveInventory( string item )","body":["llRemoveInventory(${0})"],"prefix":"llRemoveInventory"}},{"llRemoveVehicleFlags":{"description":"Отключить указанный автомобиль флаги\n\nllRemoveVehicleFlags( integer flags )","body":["llRemoveVehicleFlags(${0})"],"prefix":"llRemoveVehicleFlags"}},{"llRequestAgentData":{"description":"Запрашивает сведения о ID агента. При наличии данных событий dataserver будет raisedReturns ручку (ключ) на мероприятие dataserver, когда он вырос.\n\nkey llRequestAgentData( key id, integer data )","body":["llRequestAgentData(${0})"],"prefix":"llRequestAgentData"}},{"llRequestDisplayName":{"description":"Просит Отображаемое имя агента с данным идентификатором. Когда имя дисплея доступна событие dataserver будет поднят. Агент с данным идентификатором не должны быть в том же регионе или в интернете на момент запроса.Возвращает дескриптор (ключ), который используется для идентификации события dataserver, когда он вырос.\n\nkey llRequestDisplayName( key id )","body":["llRequestDisplayName(${0})"],"prefix":"llRequestDisplayName"}},{"llRequestExperiencePermissions":{"description":"Спрашивает агента о разрешении на участие в Опыт работы скрипта.\n\nllRequestExperiencePermissions( key agent, string name )","body":["llRequestExperiencePermissions(${0})"],"prefix":"llRequestExperiencePermissions"}},{"llRequestInventoryData":{"description":"Запрашивает данные о наименовании товара в инвентарь прим. При наличии данных событий dataserver будет поднят.Возвращает дескриптор (ключ), который используется для идентификации события dataserver, когда он вырос.\n\nkey llRequestInventoryData( string name )","body":["llRequestInventoryData(${0})"],"prefix":"llRequestInventoryData"}},{"llRequestPermissions":{"description":"Спросите агента для разрешения на выполнение определенных классах функций.\n\nllRequestPermissions( key agent, integer permissions )","body":["llRequestPermissions(${0})"],"prefix":"llRequestPermissions"}},{"llRequestSecureURL":{"description":"Запросы по одному протоколу https:// (протокол SSL) URL-Адрес для использования этого объекта. В http_request событие tiggered с результатом запроса. Протокол https использует порт 12043.Возвращает дескриптор (ключ) используется для определения результата запроса в http_request событие.\n\nkey llRequestSecureURL(  )","body":["llRequestSecureURL(${0})"],"prefix":"llRequestSecureURL"}},{"llRequestSimulatorData":{"description":"Запросы на информацию о регионе. При наличии данных событий dataserver будет поднят.Возвращает ручку (ключ) на dataserver ответа на событие.\n\nkey llRequestSimulatorData( string region, integer data )","body":["llRequestSimulatorData(${0})"],"prefix":"llRequestSimulatorData"}},{"llRequestURL":{"description":"Запросы на одну http:// URL-Адрес для использования этого скрипта. В http_request событие срабатывает с результатом запроса. Протокол http использует порт 12046.Возвращает дескриптор (ключ) используется для определения результата запроса в http_request событие.\n\nkey llRequestURL(  )","body":["llRequestURL(${0})"],"prefix":"llRequestURL"}},{"llRequestUsername":{"description":"Просит Имя пользователя агента с данным идентификатором. Если Имя пользователя доступно событие dataserver будет поднят. Агент с данным идентификатором не должны быть в том же регионе или в интернете на момент запроса.\n\nkey llRequestUsername( key id )","body":["llRequestUsername(${0})"],"prefix":"llRequestUsername"}},{"llResetAnimationOverride":{"description":"Сбрасывает анимацию переопределить указанного государственного анимация (anim_state) к соответствующему значению по умолчанию.\n\nllResetAnimationOverride( string anim_state )","body":["llResetAnimationOverride(${0})"],"prefix":"llResetAnimationOverride"}},{"llResetLandBanList":{"description":"Удаляет все жители из списка бан земли.\n\nllResetLandBanList(  )","body":["llResetLandBanList(${0})"],"prefix":"llResetLandBanList"}},{"llResetLandPassList":{"description":"Удаляет все жители из списка доступа к земле/пасс.\n\nllResetLandPassList(  )","body":["llResetLandPassList(${0})"],"prefix":"llResetLandPassList"}},{"llResetOtherScript":{"description":"Сбрасывает имя скрипта.\n\nllResetOtherScript( string name )","body":["llResetOtherScript(${0})"],"prefix":"llResetOtherScript"}},{"llResetScript":{"description":"Сбрасывает скрипт.\n\nllResetScript(  )","body":["llResetScript(${0})"],"prefix":"llResetScript"}},{"llResetTime":{"description":"Сбрасывает скрипт-Таймер до нуля.\n\nllResetTime(  )","body":["llResetTime(${0})"],"prefix":"llResetTime"}},{"llReturnObjectsByID":{"description":"Если скрипт принадлежит агент, PERMISSION_RETURN_OBJECTS может быть предоставлено владельцем. Если скрипт принадлежит группе, это разрешение может быть предоставлено агентом, принадлежащим к \"хозяевам\" роль группы.Возвращает целое число-количество объектов, успешно возвращены их владельцам или ERR_* флаг.\n\ninteger llReturnObjectsByID( list objects )","body":["llReturnObjectsByID(${0})"],"prefix":"llReturnObjectsByID"}},{"llReturnObjectsByOwner":{"description":"Если скрипт принадлежит агент, PERMISSION_RETURN_OBJECTS может быть предоставлено владельцем. Если скрипт принадлежит группе, это разрешение может быть предоставлено агентом, принадлежащим к \"хозяевам\" роль группы.Возвращает целое число-количество объектов, успешно возвращены их владельцам или ERR_* флаг.\n\ninteger llReturnObjectsByOwner( key owner, integer scope )","body":["llReturnObjectsByOwner(${0})"],"prefix":"llReturnObjectsByOwner"}},{"llRezAtRoot":{"description":"Инстанцировать объект инвентаризации повернут гнить с корня в позиции, двигаясь на скорости, используя параметр как параметр запуска\n\nllRezAtRoot( string inventory, vector position, vector velocity, rotation rot, integer param )","body":["llRezAtRoot(${0})"],"prefix":"llRezAtRoot"}},{"llRezObject":{"description":"Инстанцировать объект инвентаризации в торговых точках со скоростью Вэл и гнили вращения с параметром Start парам\n\nllRezObject( string inventory, vector pos, vector vel, rotation rot, integer param )","body":["llRezObject(${0})"],"prefix":"llRezObject"}},{"llRot2Angle":{"description":"Возвращает float, что угол поворота представлен сгниет\n\nfloat llRot2Angle( rotation rot )","body":["llRot2Angle(${0})"],"prefix":"llRot2Angle"}},{"llRot2Axis":{"description":"Возвращает вектор оси вращения представлены гнить\n\nvector llRot2Axis( rotation rot )","body":["llRot2Axis(${0})"],"prefix":"llRot2Axis"}},{"llRot2Euler":{"description":"Возвращает вектор, который является представлением Эйлера (крен, тангаж, рыскание) от квят, с каждой составляющей, выраженный в радианах.\n\nvector llRot2Euler( rotation quat )","body":["llRot2Euler(${0})"],"prefix":"llRot2Euler"}},{"llRot2Fwd":{"description":"Вычисляет ориентацию локальной оси x относительно родителя (т. е. корень прим или в мире).Возвращает вектор, который является вектором Forward определяется Q, т. е. единичный вектор, указывающий на местном положительном направлении оси x.\n\nvector llRot2Fwd( rotation q )","body":["llRot2Fwd(${0})"],"prefix":"llRot2Fwd"}},{"llRot2Left":{"description":"Вычисляет ориентации локальной оси Y-оси по отношению к родителю (т. е. относительно корня прим или в мире).Возвращает вектор, что левый вектор определяется Q, т. е. единичный вектор, указывающий на местном положительное направление Y\n\nvector llRot2Left( rotation q )","body":["llRot2Left(${0})"],"prefix":"llRot2Left"}},{"llRot2Up":{"description":"Вычисляет ориентации локальной оси Z-оси по отношению к родителю (т. е. корень прим или в мире).Возвращает вектор, то есть вектор, определенный на Q, т. е. единичный вектор, указывающий в направлении положительной оси Z\n\nvector llRot2Up( rotation q )","body":["llRot2Up(${0})"],"prefix":"llRot2Up"}},{"llRotateTexture":{"description":"Задает вращение, текстура выбрана лицом в угол.\n\nllRotateTexture( float angle, integer face )","body":["llRotateTexture(${0})"],"prefix":"llRotateTexture"}},{"llRotBetween":{"description":"Возвращает вращения, что является кратчайшим поворота между начальным направлением и направлением конец\n\nrotation llRotBetween( vector start, vector end )","body":["llRotBetween(${0})"],"prefix":"llRotBetween"}},{"llRotLookAt":{"description":"Заставляет объект вращаться плавно, чтобы target_direction с сила сопротивления на силу демпфирования.\n\nllRotLookAt( rotation target_direction, float strength, float damping )","body":["llRotLookAt(${0})"],"prefix":"llRotLookAt"}},{"llRotTarget":{"description":"Эта функция, чтобы скрипт знал, когда она достигнет поворота.Он регистрирует гнить с ошибкой, что вызывает постоянно at_rot_target и событий not_at_rot_target до незарегистрированные.Возвращает дескриптор (целое число), чтобы отменить цель llRotTargetRemove\n\ninteger llRotTarget( rotation rot, float error )","body":["llRotTarget(${0})"],"prefix":"llRotTarget"}},{"llRotTargetRemove":{"description":"Удаляет целевой ручка вращения зарегистрирована llRotTarget\n\nllRotTargetRemove( integer handle )","body":["llRotTargetRemove(${0})"],"prefix":"llRotTargetRemove"}},{"llRound":{"description":"Возвращает целое число, которое Вэл ближе.\n\ninteger llRound( float val )","body":["llRound(${0})"],"prefix":"llRound"}},{"llSameGroup":{"description":"Возвращает логическое значение (целое число), равное True, если uuid и чопорных скрипт находится в той же группе, В противном случае-false.\n\ninteger llSameGroup( key uuid )","body":["llSameGroup(${0})"],"prefix":"llSameGroup"}},{"llSay":{"description":"Говорит текст, поставленный в строку msg на канал сбыта в целое число канала.\n\nllSay( integer channel, string msg )","body":["llSay(${0})"],"prefix":"llSay"}},{"llScaleByFactor":{"description":"Попытки изменить весь объект по scaling_factor, выдерживая размеры позиция соотношений примс.\n\ninteger llScaleByFactor( float scaling_factor )","body":["llScaleByFactor(${0})"],"prefix":"llScaleByFactor"}},{"llScaleTexture":{"description":"Устанавливает текстуру у маштабы & V для выбранного лица.\n\nllScaleTexture( float u, float v, integer face )","body":["llScaleTexture(${0})"],"prefix":"llScaleTexture"}},{"llScriptDanger":{"description":"Возвращает логическое значение (целое число), равное True, если продажи за общественные земли, песочница, земля, земля, которая не позволяет, чтобы все изменить и построить, или землю, которая не позволяет вне скриптов.\n\ninteger llScriptDanger( vector pos )","body":["llScriptDanger(${0})"],"prefix":"llScriptDanger"}},{"llScriptProfiler":{"description":"Включает или отключает скрипты профилирования.\n\nllScriptProfiler( integer flags )","body":["llScriptProfiler(${0})"],"prefix":"llScriptProfiler"}},{"llSendRemoteData":{"description":"Отправлять в формате XML-RPC-запрос к дест через канал с полезной нагрузкой канала (в строке), число idata и строку sdata.Возвращает ключ, который имеет почты на результирующие события remote_data.\n\nkey llSendRemoteData( key channel, string dest, integer idata, string sdata )","body":["llSendRemoteData(${0})"],"prefix":"llSendRemoteData"}},{"llSensor":{"description":"Выполняет одно сканирование по имя и ID с типом в радиусе метра и радианах дуги вперед вектор\n\nllSensor( string name, key id, integer type, float radius, float arc )","body":["llSensor(${0})"],"prefix":"llSensor"}},{"llSensorRemove":{"description":"Удаляет настройки датчика llSensorRepeat.\n\nllSensorRemove(  )","body":["llSensorRemove(${0})"],"prefix":"llSensorRemove"}},{"llSensorRepeat":{"description":"Выполняет одно сканирование по имя и ID с типом в диапазоне метров и радианах дуги вперед вектор и курс повторяется каждые секунд. Он не выполняет первое сканирование до скорости секунд прошло.\n\nllSensorRepeat( string name, key id, integer type, float range, float arc, float rate )","body":["llSensorRepeat(${0})"],"prefix":"llSensorRepeat"}},{"llSetAlpha":{"description":"Устанавливает Альфа на лицо\n\nllSetAlpha( float alpha, integer face )","body":["llSetAlpha(${0})"],"prefix":"llSetAlpha"}},{"llSetAngularVelocity":{"description":"Применяется скоростей вращения объектов. Он делает такую же работу как llApplyRotationalImpulse, но не зависит от массы объекта .\n\nllSetAngularVelocity( vector initial_omega, integer local )","body":["llSetAngularVelocity(${0})"],"prefix":"llSetAngularVelocity"}},{"llSetAnimationOverride":{"description":"Установить анимацию (анимация), который будет играть для данного государственного анимация (anim_state).\n\nllSetAnimationOverride( string anim_state, string anim )","body":["llSetAnimationOverride(${0})"],"prefix":"llSetAnimationOverride"}},{"llSetBuoyancy":{"description":"Наборы плавучесть задачи или объекта. Требует, чтобы физика включена.\n\nllSetBuoyancy( float buoyancy )","body":["llSetBuoyancy(${0})"],"prefix":"llSetBuoyancy"}},{"llSetCameraAtOffset":{"description":"Устанавливает точку в камеру смотрит, чтобы компенсировать для аватарки, которые сидят на объекте.\n\nllSetCameraAtOffset( vector offset )","body":["llSetCameraAtOffset(${0})"],"prefix":"llSetCameraAtOffset"}},{"llSetCameraEyeOffset":{"description":"Наборы глаз камеры смещения для аватарки, которые сидят на объекте.\n\nllSetCameraEyeOffset( vector offset )","body":["llSetCameraEyeOffset(${0})"],"prefix":"llSetCameraEyeOffset"}},{"llSetCameraParams":{"description":"Задает несколько параметров камеры сразу.\n\nllSetCameraParams( list rules )","body":["llSetCameraParams(${0})"],"prefix":"llSetCameraParams"}},{"llSetClickAction":{"description":"Задает действие, выполняемое при нажатии на прим (ака кликом).\n\nllSetClickAction( integer action )","body":["llSetClickAction(${0})"],"prefix":"llSetClickAction"}},{"llSetColor":{"description":"Устанавливает цвет на лице прим.\n\nllSetColor( vector color, integer face )","body":["llSetColor(${0})"],"prefix":"llSetColor"}},{"llSetContentType":{"description":"Наборы Интернет-СМИ типа \"заголовка\" типа Контента любого последующего ЛСЛ ответ http-сервера через llHTTPResponse.\n\nllSetContentType( key request_id, integer content_type )","body":["llSetContentType(${0})"],"prefix":"llSetContentType"}},{"llSetDamage":{"description":"Устанавливает сумму ущерба, что будет сделано, когда этот объект попадает на аватар.\n\nllSetDamage( float damage )","body":["llSetDamage(${0})"],"prefix":"llSetDamage"}},{"llSetForce":{"description":"Применяет силу к объекту (если сценарий физическая)\n\nllSetForce( vector force, integer local )","body":["llSetForce(${0})"],"prefix":"llSetForce"}},{"llSetForceAndTorque":{"description":"Задает силу и крутящий момент объекта (если сценарий физическая)\n\nllSetForceAndTorque( vector force, vector torque, integer local )","body":["llSetForceAndTorque(${0})"],"prefix":"llSetForceAndTorque"}},{"llSetHoverHeight":{"description":"Критически демпфирует на высоту над поверхностью земли (или воды) в tau секунд.\n\nllSetHoverHeight( float height, integer water, float tau )","body":["llSetHoverHeight(${0})"],"prefix":"llSetHoverHeight"}},{"llSetInventoryPermMask":{"description":"Требует Режим Бога. Наборы данной категории разрешение на новое значение на склад.\n\nllSetInventoryPermMask( string item, integer category, integer value )","body":["llSetInventoryPermMask(${0})"],"prefix":"llSetInventoryPermMask"}},{"llSetKeyframedMotion":{"description":"Укажите список раз, позиции и ориентации, следовать объект. Объект будет плавно перемещаться между ключевыми кадрами на тренажере. Столкновения с другими нефизическими или ключевой объекты будут игнорироваться (не сценарий событий будет огонь и обрабатывать столкновения не произойдет). Столкновений с физическими объектами будут вычисляться и представляться, но объект ключевые кадры будут затронуты этим наездом. (Физический объект будет быть затронуты,.)\n\nllSetKeyframedMotion( list keyframes, list options )","body":["llSetKeyframedMotion(${0})"],"prefix":"llSetKeyframedMotion"}},{"llSetLinkAlpha":{"description":"Если существует прим в ссылке указан по ссылке, установить альфу на лице, что прим.\n\nllSetLinkAlpha( integer link, float alpha, integer face )","body":["llSetLinkAlpha(${0})"],"prefix":"llSetLinkAlpha"}},{"llSetLinkCamera":{"description":"Наборы глаз камеры смещения, и смещение, что камера смотрит на аватарки, которые сидят на связанном прим.\n\nllSetLinkCamera( integer link, vector eye, vector at )","body":["llSetLinkCamera(${0})"],"prefix":"llSetLinkCamera"}},{"llSetLinkColor":{"description":"Если существует прим в ссылке указан по ссылке, установите цвет на лице, что прим.\n\nllSetLinkColor( integer link, vector color, integer face )","body":["llSetLinkColor(${0})"],"prefix":"llSetLinkColor"}},{"llSetLinkMedia":{"description":"Установить медиа-параметры для конкретного лица на связанном прим(ы) без задержек.Возвращает статус (целое число), что является STATUS_* флаг, детали успешности/неуспешности операции(с).\n\ninteger llSetLinkMedia( integer link, integer face, list params )","body":["llSetLinkMedia(${0})"],"prefix":"llSetLinkMedia"}},{"llSetLinkPrimitiveParams":{"description":"Наборы параметров примитива в соответствии с правилами.\n\nllSetPrimitiveParams( list rules )","body":["llSetLinkPrimitiveParams(${0})"],"prefix":"llSetLinkPrimitiveParams"}},{"llSetLinkPrimitiveParamsFast":{"description":"Наборы параметров призмы в соответствии с правилами.\n\nllSetLinkPrimitiveParamsFast( integer link, list rules )","body":["llSetLinkPrimitiveParamsFast(${0})"],"prefix":"llSetLinkPrimitiveParamsFast"}},{"llSetLinkTexture":{"description":"Если существует прим в ссылке указан по ссылке, установить текстуры на лицо прим.\n\nllSetLinkTexture( integer link, string texture, integer face )","body":["llSetLinkTexture(${0})"],"prefix":"llSetLinkTexture"}},{"llSetLinkTextureAnim":{"description":"Анимировать текстуру на указанные лицо/лица, указанные прим/примс, установив данные текстуры и смещение. Идентичны llSetTextureAnim кроме возможности изменять прим в набор ссылок.\n\nllSetLinkTextureAnim( integer link, integer mode, integer face, integer sizex, integer sizey, float start, float length, float rate )","body":["llSetLinkTextureAnim(${0})"],"prefix":"llSetLinkTextureAnim"}},{"llSetLocalRot":{"description":"Задает вращение ребенка прим относительно корня прим\n\nllSetLocalRot( rotation rot )","body":["llSetLocalRot(${0})"],"prefix":"llSetLocalRot"}},{"llSetMemoryLimit":{"description":"Лимит запросу байты должны быть зарезервированы для этого сценария.Возвращает логическое значение (целочисленное) значение True, если ограничение памяти был успешно установлен (или false, если нет).\n\ninteger llSetMemoryLimit( integer limit )","body":["llSetMemoryLimit(${0})"],"prefix":"llSetMemoryLimit"}},{"llSetObjectDesc":{"description":"Задает описание примс\n\nllSetObjectDesc( string description )","body":["llSetObjectDesc(${0})"],"prefix":"llSetObjectDesc"}},{"llSetObjectName":{"description":"Задает имя примитива по имени параметра.\n\nllSetObjectName( string name )","body":["llSetObjectName(${0})"],"prefix":"llSetObjectName"}},{"llSetObjectPermMask":{"description":"Требует Режим Бога. Устанавливает данную маску разрешение на новое значение на корневого объекта и выполнения.\n\nllSetObjectPermMask( integer mask, integer value )","body":["llSetObjectPermMask(${0})"],"prefix":"llSetObjectPermMask"}},{"llSetParcelMusicURL":{"description":"Наборы потоковое аудио URL-адрес объекта участок находится на\n\nllSetParcelMusicURL( string url )","body":["llSetParcelMusicURL(${0})"],"prefix":"llSetParcelMusicURL"}},{"llSetPayPrice":{"description":"Предлагаю суммы по умолчанию для текстового поля и кнопки оплатить платные появления диалогового окна, когда кто-то выбирает платить этот объект.\n\nllSetPayPrice( integer price, list quick_pay_buttons )","body":["llSetPayPrice(${0})"],"prefix":"llSetPayPrice"}},{"llSetPhysicsMaterial":{"description":"Используется для задания физических характеристик объекта.\n\nllSetPhysicsMaterial( integer mask, float gravity_multiplier, float restitution, float friction, float density )","body":["llSetPhysicsMaterial(${0})"],"prefix":"llSetPhysicsMaterial"}},{"llSetPos":{"description":"Перемещение объекта или примитива к поз без использования физики.\n\nllSetPos( vector pos )","body":["llSetPos(${0})"],"prefix":"llSetPos"}},{"llSetPrimitiveParams":{"description":"Наборы параметров призмы в соответствии с правилами.\n\nllSetPrimitiveParams( list rules )","body":["llSetPrimitiveParams(${0})"],"prefix":"llSetPrimitiveParams"}},{"llSetPrimMediaParams":{"description":"Установить медиа-параметры для конкретного лица.Возвращает статус (целое число), что является STATUS_* флаг, детали успешности/неуспешности операции(с).\n\ninteger llSetPrimMediaParams( integer face, list params )","body":["llSetPrimMediaParams(${0})"],"prefix":"llSetPrimMediaParams"}},{"llSetRegionPos":{"description":"Пытается переместить весь объект так, чтобы корневая прим находится в пределах 0,1 м положении.Возвращает целочисленное значение типа boolean, True, если объект был успешно размещен в течение 0,1 м от установки, false в противном случае. См. спецификацию для деталей.\n\ninteger llSetRegionPos( vector position )","body":["llSetRegionPos(${0})"],"prefix":"llSetRegionPos"}},{"llSetRemoteScriptAccessPin":{"description":"Позволяет прим, чтобы иметь скрипты удаленно загружается через llRemoteLoadScriptPin, когда он проходит правильный пин-код и прим установлен мод.\n\nllSetRemoteScriptAccessPin( integer pin )","body":["llSetRemoteScriptAccessPin(${0})"],"prefix":"llSetRemoteScriptAccessPin"}},{"llSetRot":{"description":"Задает вращение прим гнить.\n\nllSetRot( rotation rot )","body":["llSetRot(${0})"],"prefix":"llSetRot"}},{"llSetScale":{"description":"Устанавливает Размер прим в зависимости от размера\n\nllSetScale( vector size )","body":["llSetScale(${0})"],"prefix":"llSetScale"}},{"llSetScriptState":{"description":"Установить текущее состояние имя скрипта.\n\nllSetScriptState( string name, integer running )","body":["llSetScriptState(${0})"],"prefix":"llSetScriptState"}},{"llSetSitText":{"description":"Отображает текст, а не по умолчанию \"сидеть\" в контекстном меню.\n\nllSetSitText( string text )","body":["llSetSitText(${0})"],"prefix":"llSetSitText"}},{"llSetSoundQueueing":{"description":"Установить, добавленные звуки ожидания для текущего звука до конца. Если очереди-это правда, очереди включена, если false очереди отключена. Звук очереди отключена по умолчанию.\n\nllSetSoundQueueing( integer queue )","body":["llSetSoundQueueing(${0})"],"prefix":"llSetSoundQueueing"}},{"llSetSoundRadius":{"description":"Устанавливает жесткий отсечения радиус слышимости скриптовые звуки (как крепится и срабатывает).\n\nllSetSoundRadius( float radius )","body":["llSetSoundRadius(${0})"],"prefix":"llSetSoundRadius"}},{"llSetStatus":{"description":"Задает состояние объекта атрибуты, указанные в состояние} маска для значение\n\nllSetStatus( integer status, integer value )","body":["llSetStatus(${0})"],"prefix":"llSetStatus"}},{"llSetText":{"description":"Отображает текст, который парит над прим с определенным цветом и прозрачностью (указанный с альфой).\n\nllSetText( string text, vector color, float alpha )","body":["llSetText(${0})"],"prefix":"llSetText"}},{"llSetTexture":{"description":"Устанавливает текстуру лица прим.\n\nllSetTexture( string texture, integer face )","body":["llSetTexture(${0})"],"prefix":"llSetTexture"}},{"llSetTextureAnim":{"description":"Анимировать текстуру на указанные лицо/лица путем задания масштаба текстуры и смещение.\n\nllSetTextureAnim( integer mode, integer face, integer sizex, integer sizey, float start, float length, float rate )","body":["llSetTextureAnim(${0})"],"prefix":"llSetTextureAnim"}},{"llSetTimerEvent":{"description":"Вызвать событие таймера срабатывает максимум раз в сек. Пройдя в 0.0 останавливает дальнейшие события таймера.\n\nllSetTimerEvent( float sec )","body":["llSetTimerEvent(${0})"],"prefix":"llSetTimerEvent"}},{"llSetTorque":{"description":"Устанавливает крутящий момент объекта (если сценарий физическая)\n\nllSetTorque( vector torque, integer local )","body":["llSetTorque(${0})"],"prefix":"llSetTorque"}},{"llSetTouchText":{"description":"Отображает текст, а не по умолчанию \"касания\" в меню правой кнопки мыши\n\nllSetTouchText( string text )","body":["llSetTouchText(${0})"],"prefix":"llSetTouchText"}},{"llSetVehicleFlags":{"description":"Включен указанный автомобиль флаги\n\nllSetVehicleFlags( integer flags )","body":["llSetVehicleFlags(${0})"],"prefix":"llSetVehicleFlags"}},{"llSetVehicleFloatParam":{"description":"Устанавливает параметры транспортного средства поплавковый параметр значение.\n\nllSetVehicleFloatParam( integer param, float value )","body":["llSetVehicleFloatParam(${0})"],"prefix":"llSetVehicleFloatParam"}},{"llSetVehicleRotationParam":{"description":"Задает параметр вращения автомобиля парам гнить.\n\nllSetVehicleRotationParam( integer param, rotation rot )","body":["llSetVehicleRotationParam(${0})"],"prefix":"llSetVehicleRotationParam"}},{"llSetVehicleType":{"description":"Задает Тип транспортного средства к одному из типов по умолчанию.\n\nllSetVehicleType( integer type )","body":["llSetVehicleType(${0})"],"prefix":"llSetVehicleType"}},{"llSetVehicleVectorParam":{"description":"Задает вектора параметров транспортного средства param в ВМК.\n\nllSetVehicleVectorParam( integer param, vector vec )","body":["llSetVehicleVectorParam(${0})"],"prefix":"llSetVehicleVectorParam"}},{"llSetVelocity":{"description":"Применяет скорость для объекта\n\nllSetVelocity( vector force, integer local )","body":["llSetVelocity(${0})"],"prefix":"llSetVelocity"}},{"llSHA1String":{"description":"Возвращает строку из 40 шестнадцатеричных символов, что является SHA-1 хэш безопасности ница.\n\nstring llSHA1String( string src )","body":["llSHA1String(${0})"],"prefix":"llSHA1String"}},{"llShout":{"description":"Кричит текста в строку msg на канал сбыта в целое число канала.\n\nllShout( integer channel, string msg )","body":["llShout(${0})"],"prefix":"llShout"}},{"llSin":{"description":"Возвращает float, что такое синус тета.\n\nfloat llSin( float theta )","body":["llSin(${0})"],"prefix":"llSin"}},{"llSitOnLink":{"description":"Аватар указанные agent_id, установленным вынужден сидеть на сидеть мишенью прим определяется параметром ссылке. Если указанная ссылка уже занята, симулятор поисков в цепочке призмы в ссылке задать ищите доступную цель сидеть.Возвращает целое число\n\nInteger llSitOnLink( key agent_id, integer link )","body":["llSitOnLink(${0})"],"prefix":"llSitOnLink"}},{"llSitTarget":{"description":"Установить местоположение сидеть на прим. Расположение сидят относительно установки и вращения прим.\n\nllSitTarget( vector offset, rotation rot )","body":["llSitTarget(${0})"],"prefix":"llSitTarget"}},{"llSleep":{"description":"Ставит скрипт, чтобы спать в течение секунд. Скрипт ничего не сделает за это время.\n\nllSleep( float sec )","body":["llSleep(${0})"],"prefix":"llSleep"}},{"llStartAnimation":{"description":"Начать аним анимация для агентов, которые предоставлены PERMISSION_TRIGGER_ANIMATION если разрешение не было отменено.\n\nllStartAnimation( string anim )","body":["llStartAnimation(${0})"],"prefix":"llStartAnimation"}},{"llStopAnimation":{"description":"Остановка аним анимация для агентов, которые предоставлены PERMISSION_TRIGGER_ANIMATION если разрешение не было отменено.\n\nllStopAnimation( string anim )","body":["llStopAnimation(${0})"],"prefix":"llStopAnimation"}},{"llStopHover":{"description":"Остановить зависший на высоте\n\nllStopHover(  )","body":["llStopHover(${0})"],"prefix":"llStopHover"}},{"llStopLookAt":{"description":"Перестань создавать объект, чтобы указать на цель\n\nllStopLookAt(  )","body":["llStopLookAt(${0})"],"prefix":"llStopLookAt"}},{"llStopMoveToTarget":{"description":"Перестает критически демпфированный движения\n\nllStopMoveToTarget(  )","body":["llStopMoveToTarget(${0})"],"prefix":"llStopMoveToTarget"}},{"llStopSound":{"description":"Останавливает прилагается звук(ы) в настоящее время, если они были начаты llLoopSound\n\nllStopSound(  )","body":["llStopSound(${0})"],"prefix":"llStopSound"}},{"llStringLength":{"description":"Возвращает целое число-количество символов в str (не считая нулевого).\n\ninteger llStringLength( string str )","body":["llStringLength(${0})"],"prefix":"llStringLength"}},{"llStringToBase64":{"description":"Возвращает строку base64 представлении ул. интерпретировать как символы utf-8 последовательность байтов\n\nstring llStringToBase64( string str )","body":["llStringToBase64(${0})"],"prefix":"llStringToBase64"}},{"llStringTrim":{"description":"Возвращает строку, которая является src с ведущим и/или конечные пробелы (пробелы, табуляции и переводы строк) зачищают от него.\n\nstring llStringTrim( string src, integer type )","body":["llStringTrim(${0})"],"prefix":"llStringTrim"}},{"llSubStringIndex":{"description":"Возвращает целое число, которое является индексом первого экземпляра образца в источник.\n\ninteger llSubStringIndex( string source, string pattern )","body":["llSubStringIndex(${0})"],"prefix":"llSubStringIndex"}},{"llTakeControls":{"description":"Позволяет для перехвата клавиатуры и кликов мыши, а конкретно те, которые предусмотрены элементы управления, от агента сценарий разрешения.\n\nllTakeControls( integer controls, integer accept, integer pass_on )","body":["llTakeControls(${0})"],"prefix":"llTakeControls"}},{"llTan":{"description":"Возвращает float, что это тангенс тэта.\n\nfloat llTan( float theta )","body":["llTan(${0})"],"prefix":"llTan"}},{"llTarget":{"description":"Эта функция, чтобы скрипт знал, когда она достигнет позиции.Он регистрирует положение с диапазоном, который вызывает постоянно at_target и событий not_at_target до незарегистрированные.Возвращает дескриптор (целое число), чтобы отменить цель с llTargetRemove.\n\ninteger llTarget( vector position, float range )","body":["llTarget(${0})"],"prefix":"llTarget"}},{"llTargetOmega":{"description":"Вращает объект/прим вокруг оси со скоростью spinrate * llVecMag(оси) в радианах в секунду с усилением прочности.\n\nllTargetOmega( vector axis, float spinrate, float gain )","body":["llTargetOmega(${0})"],"prefix":"llTargetOmega"}},{"llTargetRemove":{"description":"Удаляет позиционные цели обработки зарегистрированных llTarget\n\nllTargetRemove( integer handle )","body":["llTargetRemove(${0})"],"prefix":"llTargetRemove"}},{"llTeleportAgent":{"description":"Просит телепорт аватар на достопримечательность, хранящиеся в инвентаризации объекта. Если нет места предоставляется (пустую строку), аватар телепортировался в позиции место в текущей области. В любом случае, аватар повернулся к указаниям look_at.\n\nllTeleportAgent( key avatar, string landmark, vector position, vector look_at )","body":["llTeleportAgent(${0})"],"prefix":"llTeleportAgent"}},{"llTeleportAgentGlobalCoords":{"description":"Телепортирует агент для набора region_coordinates в области по указанным global_coordinates. Агент земли перед направление определяется look_at. Глобальные регионе, координаты можно получить с помощью llRequestSimulatorData(region_name, DATA_SIM_POS)\n\nllTeleportAgentGlobalCoords( key agent, vector global_coordinates, vector region_coordinates, vector look_at )","body":["llTeleportAgentGlobalCoords(${0})"],"prefix":"llTeleportAgentGlobalCoords"}},{"llTeleportAgentHome":{"description":"Телепортирует аватар на землях хозяина до дома без каких-либо предупреждений, похожие на Бог призывает или умирает.\n\nllTeleportAgentHome( key avatar )","body":["llTeleportAgentHome(${0})"],"prefix":"llTeleportAgentHome"}},{"llTextBox":{"description":"Показывает диалоговое окно на экране аватара с текстом сообщения. Она содержит текстовое поле для ввода любой текст, который вводится, говорит аватарку на канале, когда кнопку \"Отправить\" нажата.\n\nllTextBox( key avatar, string message, integer channel )","body":["llTextBox(${0})"],"prefix":"llTextBox"}},{"llToLower":{"description":"Возвращает строку, которая является src со всеми строчными буквами\n\nstring llToLower( string src )","body":["llToLower(${0})"],"prefix":"llToLower"}},{"llToUpper":{"description":"Возвращает строку, которая является src с прописных букв.\n\nstring llToUpper( string src )","body":["llToUpper(${0})"],"prefix":"llToUpper"}},{"llTransferLindenDollars":{"description":"Сумма перевода в$ L деньги от владельца скрипт для назначения аватар.Возвращает ключ, используемый в соответствующий событие transaction_result за успех или неудачу передачи. Если сделка окажется успешной, этот ключ будет отображаться в истории операций.\n\nkey llTransferLindenDollars( key destination, integer amount )","body":["llTransferLindenDollars(${0})"],"prefix":"llTransferLindenDollars"}},{"llTriggerSound":{"description":"Воспроизведение звука по громкости, по центру, но не привязан к объекту.\n\nllTriggerSound( string sound, float volume )","body":["llTriggerSound(${0})"],"prefix":"llTriggerSound"}},{"llTriggerSoundLimited":{"description":"Воспроизведение звука по громкости, по центру, но не привязан к объекту, только в поле определяется векторами top_north_east и bottom_south_west\n\nllTriggerSoundLimited( string sound, float volume, vector top_north_east, vector bottom_south_west )","body":["llTriggerSoundLimited(${0})"],"prefix":"llTriggerSoundLimited"}},{"llUnescapeURL":{"description":"Возвращает строку, которая представляет собой неэкранированную/некодированной версии URL, заменив \"%20\" с пробелами и т. д.\n\nstring llUnescapeURL( string url )","body":["llUnescapeURL(${0})"],"prefix":"llUnescapeURL"}},{"llUnSit":{"description":"Агент, идентифицированный идентификатор вынужден встать, если любой из следующих действий:\n\nllUnSit( key id )","body":["llUnSit(${0})"],"prefix":"llUnSit"}},{"llUpdateCharacter":{"description":"Настройки обновления для персонажа\n\nllUpdateCharacter( list options )","body":["llUpdateCharacter(${0})"],"prefix":"llUpdateCharacter"}},{"llUpdateKeyValue":{"description":"Запустить асинхронную операцию, чтобы обновить пару ключ-значение, связанное с опытом сценария с данного ключа (K) и значения (в).Возвращает дескриптор (ключ), который может быть использован для определения соответствующего события dataserver, чтобы определить, если эта команда успешно или нет и результатов.\n\nkey llUpdateKeyValue( string k, string v, integer checked, string original_value )","body":["llUpdateKeyValue(${0})"],"prefix":"llUpdateKeyValue"}},{"llVecDist":{"description":"Возвращает float, который является неориентированный неотрицательное расстояние между vec_a и vec_b.\n\nfloat llVecDist( vector vec_a, vector vec_b )","body":["llVecDist(${0})"],"prefix":"llVecDist"}},{"llVecMag":{"description":"Возвращает float, что это величина векторная (на неориентированный неотрицательное расстояние от vec в <0.0, 0.0, 0.0>).\n\nfloat llVecMag( vector vec )","body":["llVecMag(${0})"],"prefix":"llVecMag"}},{"llVecNorm":{"description":"Возвращает вектор, вектор нормированный (единичный вектор разделяя ту же сторону, ВМК).\n\nvector llVecNorm( vector vec )","body":["llVecNorm(${0})"],"prefix":"llVecNorm"}},{"llVolumeDetect":{"description":"Если обнаружить верно, VolumeDetect включена, физический объект и аватары могут проходить через объект.\n\nllVolumeDetect( integer detect )","body":["llVolumeDetect(${0})"],"prefix":"llVolumeDetect"}},{"llWanderWithin":{"description":"Задает характер бродить по центральной точке в пределах заданного радиуса.\n\nllWanderWithin( vector origin, vector dist, list options )","body":["llWanderWithin(${0})"],"prefix":"llWanderWithin"}},{"llWater":{"description":"Возвращает float, что вода рост ниже позиция примитива + смещение\n\nfloat llWater( vector offset )","body":["llWater(${0})"],"prefix":"llWater"}},{"llWhisper":{"description":"Шепчет текст, поставленный в строку msg на канал сбыта в целое число канала.\n\nllWhisper( integer channel, string msg )","body":["llWhisper(${0})"],"prefix":"llWhisper"}},{"llWind":{"description":"Возвращает вектор, скорость ветра на позиции примитива + смещение\n\nvector llWind( vector offset )","body":["llWind(${0})"],"prefix":"llWind"}},{"llXorBase64":{"description":"Правильно выполняет элемент исключающее или на двух в base64 строки.Возвращает строку base64 и xor в str1 и str2.\n\nstring llXorBase64( string str1, string str2 )","body":["llXorBase64(${0})"],"prefix":"llXorBase64"}},{"ACTIVE":{"body":["ACTIVE${0}"],"prefix":"ACTIVE","description":"integer ACTIVE = 0x2;"}},{"AGENT":{"body":["AGENT${0}"],"prefix":"AGENT","description":"integer AGENT = 0x1;"}},{"AGENT_ALWAYS_RUN":{"body":["AGENT_ALWAYS_RUN${0}"],"prefix":"AGENT_ALWAYS_RUN","description":"integer AGENT_ALWAYS_RUN = 0x1000;"}},{"AGENT_ATTACHMENTS":{"body":["AGENT_ATTACHMENTS${0}"],"prefix":"AGENT_ATTACHMENTS","description":"integer AGENT_ATTACHMENTS = 0x0002;"}},{"AGENT_AUTOPILOT":{"body":["AGENT_AUTOPILOT${0}"],"prefix":"AGENT_AUTOPILOT","description":"integer AGENT_AUTOPILOT = 0x2000;"}},{"AGENT_AWAY":{"body":["AGENT_AWAY${0}"],"prefix":"AGENT_AWAY","description":"integer AGENT_AWAY = 0x0040;"}},{"AGENT_BUSY":{"body":["AGENT_BUSY${0}"],"prefix":"AGENT_BUSY","description":"integer AGENT_BUSY = 0x0800;"}},{"AGENT_BY_LEGACY_NAME":{"body":["AGENT_BY_LEGACY_NAME${0}"],"prefix":"AGENT_BY_LEGACY_NAME","description":"integer AGENT_BY_LEGACY_NAME = 0x1;"}},{"AGENT_BY_USERNAME":{"body":["AGENT_BY_USERNAME${0}"],"prefix":"AGENT_BY_USERNAME","description":"integer AGENT_BY_USERNAME = 0x10;"}},{"AGENT_CROUCHING":{"body":["AGENT_CROUCHING${0}"],"prefix":"AGENT_CROUCHING","description":"integer AGENT_CROUCHING = 0x0400;"}},{"AGENT_FLYING":{"body":["AGENT_FLYING${0}"],"prefix":"AGENT_FLYING","description":"integer AGENT_FLYING = 0x0001;"}},{"AGENT_IN_AIR":{"body":["AGENT_IN_AIR${0}"],"prefix":"AGENT_IN_AIR","description":"integer AGENT_IN_AIR = 0x0100;"}},{"AGENT_LIST_PARCEL":{"body":["AGENT_LIST_PARCEL${0}"],"prefix":"AGENT_LIST_PARCEL","description":"integer AGENT_LIST_PARCEL = 1;"}},{"AGENT_LIST_PARCEL_OWNER":{"body":["AGENT_LIST_PARCEL_OWNER${0}"],"prefix":"AGENT_LIST_PARCEL_OWNER","description":"integer AGENT_LIST_PARCEL_OWNER = 2;"}},{"AGENT_LIST_REGION":{"body":["AGENT_LIST_REGION${0}"],"prefix":"AGENT_LIST_REGION","description":"integer AGENT_LIST_REGION = 4;"}},{"AGENT_MOUSELOOK":{"body":["AGENT_MOUSELOOK${0}"],"prefix":"AGENT_MOUSELOOK","description":"integer AGENT_MOUSELOOK = 0x0008;"}},{"AGENT_ON_OBJECT":{"body":["AGENT_ON_OBJECT${0}"],"prefix":"AGENT_ON_OBJECT","description":"integer AGENT_ON_OBJECT = 0x0020;"}},{"AGENT_SCRIPTED":{"body":["AGENT_SCRIPTED${0}"],"prefix":"AGENT_SCRIPTED","description":"integer AGENT_SCRIPTED = 0x0004;"}},{"AGENT_SITTING":{"body":["AGENT_SITTING${0}"],"prefix":"AGENT_SITTING","description":"integer AGENT_SITTING = 0x0010;"}},{"AGENT_TYPING":{"body":["AGENT_TYPING${0}"],"prefix":"AGENT_TYPING","description":"integer AGENT_TYPING = 0x0200;"}},{"AGENT_WALKING":{"body":["AGENT_WALKING${0}"],"prefix":"AGENT_WALKING","description":"integer AGENT_WALKING = 0x0080;"}},{"ALL_SIDES":{"body":["ALL_SIDES${0}"],"prefix":"ALL_SIDES","description":"integer ALL_SIDES = -1;"}},{"ANIM_ON":{"body":["ANIM_ON${0}"],"prefix":"ANIM_ON","description":"integer ANIM_ON = 0x01;"}},{"ATTACH_AVATAR_CENTER":{"body":["ATTACH_AVATAR_CENTER${0}"],"prefix":"ATTACH_AVATAR_CENTER","description":"integer ATTACH_AVATAR_CENTER = 40;"}},{"ATTACH_BACK":{"body":["ATTACH_BACK${0}"],"prefix":"ATTACH_BACK","description":"integer ATTACH_BACK = 9;"}},{"ATTACH_BELLY":{"body":["ATTACH_BELLY${0}"],"prefix":"ATTACH_BELLY","description":"integer ATTACH_BELLY = 28;"}},{"ATTACH_CHEST":{"body":["ATTACH_CHEST${0}"],"prefix":"ATTACH_CHEST","description":"integer ATTACH_CHEST = 1;"}},{"ATTACH_CHIN":{"body":["ATTACH_CHIN${0}"],"prefix":"ATTACH_CHIN","description":"integer ATTACH_CHIN = 12;"}},{"ATTACH_HEAD":{"body":["ATTACH_HEAD${0}"],"prefix":"ATTACH_HEAD","description":"integer ATTACH_HEAD = 2;"}},{"ATTACH_HUD_BOTTOM":{"body":["ATTACH_HUD_BOTTOM${0}"],"prefix":"ATTACH_HUD_BOTTOM","description":"integer ATTACH_HUD_BOTTOM = 37;"}},{"ATTACH_HUD_BOTTOM_LEFT":{"body":["ATTACH_HUD_BOTTOM_LEFT${0}"],"prefix":"ATTACH_HUD_BOTTOM_LEFT","description":"integer ATTACH_HUD_BOTTOM_LEFT = 36;"}},{"ATTACH_HUD_BOTTOM_RIGHT":{"body":["ATTACH_HUD_BOTTOM_RIGHT${0}"],"prefix":"ATTACH_HUD_BOTTOM_RIGHT","description":"integer ATTACH_HUD_BOTTOM_RIGHT = 38;"}},{"ATTACH_HUD_CENTER_1":{"body":["ATTACH_HUD_CENTER_1${0}"],"prefix":"ATTACH_HUD_CENTER_1","description":"integer ATTACH_HUD_CENTER_1 = 35;"}},{"ATTACH_HUD_CENTER_2":{"body":["ATTACH_HUD_CENTER_2${0}"],"prefix":"ATTACH_HUD_CENTER_2","description":"integer ATTACH_HUD_CENTER_2 = 31;"}},{"ATTACH_HUD_TOP_CENTER":{"body":["ATTACH_HUD_TOP_CENTER${0}"],"prefix":"ATTACH_HUD_TOP_CENTER","description":"integer ATTACH_HUD_TOP_CENTER = 33;"}},{"ATTACH_HUD_TOP_LEFT":{"body":["ATTACH_HUD_TOP_LEFT${0}"],"prefix":"ATTACH_HUD_TOP_LEFT","description":"integer ATTACH_HUD_TOP_LEFT = 34;"}},{"ATTACH_HUD_TOP_RIGHT":{"body":["ATTACH_HUD_TOP_RIGHT${0}"],"prefix":"ATTACH_HUD_TOP_RIGHT","description":"integer ATTACH_HUD_TOP_RIGHT = 32;"}},{"ATTACH_LEAR":{"body":["ATTACH_LEAR${0}"],"prefix":"ATTACH_LEAR","description":"integer ATTACH_LEAR = 13;"}},{"ATTACH_LEFT_PEC":{"body":["ATTACH_LEFT_PEC${0}"],"prefix":"ATTACH_LEFT_PEC","description":"integer ATTACH_LEFT_PEC = 29;"}},{"ATTACH_LEYE":{"body":["ATTACH_LEYE${0}"],"prefix":"ATTACH_LEYE","description":"integer ATTACH_LEYE = 15;"}},{"ATTACH_LFOOT":{"body":["ATTACH_LFOOT${0}"],"prefix":"ATTACH_LFOOT","description":"integer ATTACH_LFOOT = 7;"}},{"ATTACH_LHAND":{"body":["ATTACH_LHAND${0}"],"prefix":"ATTACH_LHAND","description":"integer ATTACH_LHAND = 5;"}},{"ATTACH_LHIP":{"body":["ATTACH_LHIP${0}"],"prefix":"ATTACH_LHIP","description":"integer ATTACH_LHIP = 25;"}},{"ATTACH_LLARM":{"body":["ATTACH_LLARM${0}"],"prefix":"ATTACH_LLARM","description":"integer ATTACH_LLARM = 21;"}},{"ATTACH_LLLEG":{"body":["ATTACH_LLLEG${0}"],"prefix":"ATTACH_LLLEG","description":"integer ATTACH_LLLEG = 27;"}},{"ATTACH_LSHOULDER":{"body":["ATTACH_LSHOULDER${0}"],"prefix":"ATTACH_LSHOULDER","description":"integer ATTACH_LSHOULDER = 3;"}},{"ATTACH_LUARM":{"body":["ATTACH_LUARM${0}"],"prefix":"ATTACH_LUARM","description":"integer ATTACH_LUARM = 20;"}},{"ATTACH_LULEG":{"body":["ATTACH_LULEG${0}"],"prefix":"ATTACH_LULEG","description":"integer ATTACH_LULEG = 26;"}},{"ATTACH_MOUTH":{"body":["ATTACH_MOUTH${0}"],"prefix":"ATTACH_MOUTH","description":"integer ATTACH_MOUTH = 11;"}},{"ATTACH_NECK":{"body":["ATTACH_NECK${0}"],"prefix":"ATTACH_NECK","description":"integer ATTACH_NECK = 39;"}},{"ATTACH_NOSE":{"body":["ATTACH_NOSE${0}"],"prefix":"ATTACH_NOSE","description":"integer ATTACH_NOSE = 17;"}},{"ATTACH_PELVIS":{"body":["ATTACH_PELVIS${0}"],"prefix":"ATTACH_PELVIS","description":"integer ATTACH_PELVIS = 10;"}},{"ATTACH_REAR":{"body":["ATTACH_REAR${0}"],"prefix":"ATTACH_REAR","description":"integer ATTACH_REAR = 14;"}},{"ATTACH_REYE":{"body":["ATTACH_REYE${0}"],"prefix":"ATTACH_REYE","description":"integer ATTACH_REYE = 16;"}},{"ATTACH_RFOOT":{"body":["ATTACH_RFOOT${0}"],"prefix":"ATTACH_RFOOT","description":"integer ATTACH_RFOOT = 8;"}},{"ATTACH_RHAND":{"body":["ATTACH_RHAND${0}"],"prefix":"ATTACH_RHAND","description":"integer ATTACH_RHAND = 6;"}},{"ATTACH_RHIP":{"body":["ATTACH_RHIP${0}"],"prefix":"ATTACH_RHIP","description":"integer ATTACH_RHIP = 22;"}},{"ATTACH_RIGHT_PEC":{"body":["ATTACH_RIGHT_PEC${0}"],"prefix":"ATTACH_RIGHT_PEC","description":"integer ATTACH_RIGHT_PEC = 30;"}},{"ATTACH_RLARM":{"body":["ATTACH_RLARM${0}"],"prefix":"ATTACH_RLARM","description":"integer ATTACH_RLARM = 19;"}},{"ATTACH_RLLEG":{"body":["ATTACH_RLLEG${0}"],"prefix":"ATTACH_RLLEG","description":"integer ATTACH_RLLEG = 24;"}},{"ATTACH_RSHOULDER":{"body":["ATTACH_RSHOULDER${0}"],"prefix":"ATTACH_RSHOULDER","description":"integer ATTACH_RSHOULDER = 4;"}},{"ATTACH_RUARM":{"body":["ATTACH_RUARM${0}"],"prefix":"ATTACH_RUARM","description":"integer ATTACH_RUARM = 18;"}},{"ATTACH_RULEG":{"body":["ATTACH_RULEG${0}"],"prefix":"ATTACH_RULEG","description":"integer ATTACH_RULEG = 23;"}},{"CAMERA_ACTIVE":{"body":["CAMERA_ACTIVE${0}"],"prefix":"CAMERA_ACTIVE","description":"integer CAMERA_ACTIVE = 12;"}},{"CAMERA_BEHINDNESS_ANGLE":{"body":["CAMERA_BEHINDNESS_ANGLE${0}"],"prefix":"CAMERA_BEHINDNESS_ANGLE","description":"integer CAMERA_BEHINDNESS_ANGLE = 8;"}},{"CAMERA_BEHINDNESS_LAG":{"body":["CAMERA_BEHINDNESS_LAG${0}"],"prefix":"CAMERA_BEHINDNESS_LAG","description":"integer CAMERA_BEHINDNESS_LAG = 9;"}},{"CAMERA_DISTANCE":{"body":["CAMERA_DISTANCE${0}"],"prefix":"CAMERA_DISTANCE","description":"integer CAMERA_DISTANCE = 7;"}},{"CAMERA_FOCUS":{"body":["CAMERA_FOCUS${0}"],"prefix":"CAMERA_FOCUS","description":"integer CAMERA_FOCUS = 17;"}},{"CAMERA_FOCUS_LAG":{"body":["CAMERA_FOCUS_LAG${0}"],"prefix":"CAMERA_FOCUS_LAG","description":"integer CAMERA_FOCUS_LAG = 6;"}},{"CAMERA_FOCUS_LOCKED":{"body":["CAMERA_FOCUS_LOCKED${0}"],"prefix":"CAMERA_FOCUS_LOCKED","description":"integer CAMERA_FOCUS_LOCKED = 22;"}},{"CAMERA_FOCUS_OFFSET":{"body":["CAMERA_FOCUS_OFFSET${0}"],"prefix":"CAMERA_FOCUS_OFFSET","description":"integer CAMERA_FOCUS_OFFSET = 1;"}},{"CAMERA_FOCUS_THRESHOLD":{"body":["CAMERA_FOCUS_THRESHOLD${0}"],"prefix":"CAMERA_FOCUS_THRESHOLD","description":"integer CAMERA_FOCUS_THRESHOLD = 11;"}},{"CAMERA_PITCH":{"body":["CAMERA_PITCH${0}"],"prefix":"CAMERA_PITCH","description":"integer CAMERA_PITCH = 0;"}},{"CAMERA_POSITION":{"body":["CAMERA_POSITION${0}"],"prefix":"CAMERA_POSITION","description":"integer CAMERA_POSITION = 13;"}},{"CAMERA_POSITION_LAG":{"body":["CAMERA_POSITION_LAG${0}"],"prefix":"CAMERA_POSITION_LAG","description":"integer CAMERA_POSITION_LAG = 5;"}},{"CAMERA_POSITION_LOCKED":{"body":["CAMERA_POSITION_LOCKED${0}"],"prefix":"CAMERA_POSITION_LOCKED","description":"integer CAMERA_POSITION_LOCKED = 21;"}},{"CAMERA_POSITION_THRESHOLD":{"body":["CAMERA_POSITION_THRESHOLD${0}"],"prefix":"CAMERA_POSITION_THRESHOLD","description":"integer CAMERA_POSITION_THRESHOLD = 10;"}},{"CHANGED_ALLOWED_DROP":{"body":["CHANGED_ALLOWED_DROP${0}"],"prefix":"CHANGED_ALLOWED_DROP","description":"integer CHANGED_ALLOWED_DROP = 0x40;"}},{"CHANGED_COLOR":{"body":["CHANGED_COLOR${0}"],"prefix":"CHANGED_COLOR","description":"integer CHANGED_COLOR = 0x2;"}},{"CHANGED_INVENTORY":{"body":["CHANGED_INVENTORY${0}"],"prefix":"CHANGED_INVENTORY","description":""}},{"CHANGED_LINK":{"body":["CHANGED_LINK${0}"],"prefix":"CHANGED_LINK","description":"integer CHANGED_LINK = 0x20;"}},{"CHANGED_MEDIA":{"body":["CHANGED_MEDIA${0}"],"prefix":"CHANGED_MEDIA","description":"integer CHANGED_MEDIA = 0x800;"}},{"CHANGED_OWNER":{"body":["CHANGED_OWNER${0}"],"prefix":"CHANGED_OWNER","description":"integer CHANGED_OWNER = 0x80;"}},{"CHANGED_REGION":{"body":["CHANGED_REGION${0}"],"prefix":"CHANGED_REGION","description":"integer CHANGED_REGION = 0x100;"}},{"CHANGED_REGION_START":{"body":["CHANGED_REGION_START${0}"],"prefix":"CHANGED_REGION_START","description":"integer CHANGED_REGION_START = 0x400;"}},{"CHANGED_SCALE":{"body":["CHANGED_SCALE${0}"],"prefix":"CHANGED_SCALE","description":""}},{"CHANGED_SHAPE":{"body":["CHANGED_SHAPE${0}"],"prefix":"CHANGED_SHAPE","description":"integer CHANGED_SHAPE = 0x4;"}},{"CHANGED_TELEPORT":{"body":["CHANGED_TELEPORT${0}"],"prefix":"CHANGED_TELEPORT","description":"integer CHANGED_TELEPORT = 0x200;"}},{"CHANGED_TEXTURE":{"body":["CHANGED_TEXTURE${0}"],"prefix":"CHANGED_TEXTURE","description":"integer CHANGED_TEXTURE = 0x10;"}},{"CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES":{"body":["CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES${0}"],"prefix":"CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES","description":"integer CHARACTER_ACCOUNT_FOR_SKIPPED_FRAMES = 14;"}},{"CHARACTER_AVOIDANCE_MODE":{"body":["CHARACTER_AVOIDANCE_MODE${0}"],"prefix":"CHARACTER_AVOIDANCE_MODE","description":"integer CHARACTER_AVOIDANCE_MODE = 5;"}},{"CHARACTER_DESIRED_SPEED":{"body":["CHARACTER_DESIRED_SPEED${0}"],"prefix":"CHARACTER_DESIRED_SPEED","description":"integer CHARACTER_DESIRED_SPEED = 1;"}},{"CHARACTER_DESIRED_TURN_SPEED":{"body":["CHARACTER_DESIRED_TURN_SPEED${0}"],"prefix":"CHARACTER_DESIRED_TURN_SPEED","description":"integer CHARACTER_DESIRED_TURN_SPEED = 12;"}},{"CHARACTER_LENGTH":{"body":["CHARACTER_LENGTH${0}"],"prefix":"CHARACTER_LENGTH","description":"integer CHARACTER_LENGTH = 3;"}},{"CHARACTER_MAX_ACCEL":{"body":["CHARACTER_MAX_ACCEL${0}"],"prefix":"CHARACTER_MAX_ACCEL","description":"integer CHARACTER_MAX_ACCEL = 8;"}},{"CHARACTER_MAX_DECEL":{"body":["CHARACTER_MAX_DECEL${0}"],"prefix":"CHARACTER_MAX_DECEL","description":"integer CHARACTER_MAX_DECEL = 9;"}},{"CHARACTER_MAX_SPEED":{"body":["CHARACTER_MAX_SPEED${0}"],"prefix":"CHARACTER_MAX_SPEED","description":"integer CHARACTER_MAX_SPEED = 13;"}},{"CHARACTER_MAX_TURN_RADIUS":{"body":["CHARACTER_MAX_TURN_RADIUS${0}"],"prefix":"CHARACTER_MAX_TURN_RADIUS","description":"integer CHARACTER_MAX_TURN_RADIUS = 10;"}},{"CHARACTER_ORIENTATION":{"body":["CHARACTER_ORIENTATION${0}"],"prefix":"CHARACTER_ORIENTATION","description":"integer CHARACTER_ORIENTATION = 4;"}},{"CHARACTER_RADIUS":{"body":["CHARACTER_RADIUS${0}"],"prefix":"CHARACTER_RADIUS","description":"integer CHARACTER_RADIUS = 2;"}},{"CHARACTER_STAY_WITHIN_PARCEL":{"body":["CHARACTER_STAY_WITHIN_PARCEL${0}"],"prefix":"CHARACTER_STAY_WITHIN_PARCEL","description":"integer CHARACTER_STAY_WITHIN_PARCEL = 15;"}},{"CHARACTER_TYPE":{"body":["CHARACTER_TYPE${0}"],"prefix":"CHARACTER_TYPE","description":"integer CHARACTER_TYPE = 6;"}},{"CHARACTER_TYPE_A":{"body":["CHARACTER_TYPE_A${0}"],"prefix":"CHARACTER_TYPE_A","description":"integer CHARACTER_TYPE_A = 0;"}},{"CHARACTER_TYPE_B":{"body":["CHARACTER_TYPE_B${0}"],"prefix":"CHARACTER_TYPE_B","description":"integer CHARACTER_TYPE_B = 1;"}},{"CHARACTER_TYPE_C":{"body":["CHARACTER_TYPE_C${0}"],"prefix":"CHARACTER_TYPE_C","description":"integer CHARACTER_TYPE_C = 2;"}},{"CHARACTER_TYPE_D":{"body":["CHARACTER_TYPE_D${0}"],"prefix":"CHARACTER_TYPE_D","description":"integer CHARACTER_TYPE_D = 3;"}},{"CHARACTER_TYPE_NONE":{"body":["CHARACTER_TYPE_NONE${0}"],"prefix":"CHARACTER_TYPE_NONE","description":"integer CHARACTER_TYPE_NONE = 4;"}},{"CLICK_ACTION_BUY":{"body":["CLICK_ACTION_BUY${0}"],"prefix":"CLICK_ACTION_BUY","description":"integer CLICK_ACTION_BUY = 2;"}},{"CLICK_ACTION_NONE":{"body":["CLICK_ACTION_NONE${0}"],"prefix":"CLICK_ACTION_NONE","description":"integer CLICK_ACTION_NONE = 0;"}},{"CLICK_ACTION_OPEN":{"body":["CLICK_ACTION_OPEN${0}"],"prefix":"CLICK_ACTION_OPEN","description":"integer CLICK_ACTION_OPEN = 4;"}},{"CLICK_ACTION_OPEN_MEDIA":{"body":["CLICK_ACTION_OPEN_MEDIA${0}"],"prefix":"CLICK_ACTION_OPEN_MEDIA","description":"integer CLICK_ACTION_OPEN_MEDIA = 6;"}},{"CLICK_ACTION_PAY":{"body":["CLICK_ACTION_PAY${0}"],"prefix":"CLICK_ACTION_PAY","description":"integer CLICK_ACTION_PAY = 3;"}},{"CLICK_ACTION_PLAY":{"body":["CLICK_ACTION_PLAY${0}"],"prefix":"CLICK_ACTION_PLAY","description":"integer CLICK_ACTION_PLAY = 5;"}},{"CLICK_ACTION_SIT":{"body":["CLICK_ACTION_SIT${0}"],"prefix":"CLICK_ACTION_SIT","description":"integer CLICK_ACTION_SIT = 1;"}},{"CLICK_ACTION_TOUCH":{"body":["CLICK_ACTION_TOUCH${0}"],"prefix":"CLICK_ACTION_TOUCH","description":"integer CLICK_ACTION_TOUCH = 0;"}},{"CLICK_ACTION_ZOOM":{"body":["CLICK_ACTION_ZOOM${0}"],"prefix":"CLICK_ACTION_ZOOM","description":"integer CLICK_ACTION_ZOOM = 7;"}},{"CONTENT_TYPE_ATOM":{"body":["CONTENT_TYPE_ATOM${0}"],"prefix":"CONTENT_TYPE_ATOM","description":"integer CONTENT_TYPE_ATOM = 4;"}},{"CONTENT_TYPE_FORM":{"body":["CONTENT_TYPE_FORM${0}"],"prefix":"CONTENT_TYPE_FORM","description":"integer CONTENT_TYPE_FORM = 7;"}},{"CONTENT_TYPE_HTML":{"body":["CONTENT_TYPE_HTML${0}"],"prefix":"CONTENT_TYPE_HTML","description":"integer CONTENT_TYPE_HTML = 1;"}},{"CONTENT_TYPE_JSON":{"body":["CONTENT_TYPE_JSON${0}"],"prefix":"CONTENT_TYPE_JSON","description":"integer CONTENT_TYPE_JSON = 5;"}},{"CONTENT_TYPE_LLSD":{"body":["CONTENT_TYPE_LLSD${0}"],"prefix":"CONTENT_TYPE_LLSD","description":"integer CONTENT_TYPE_LLSD = 6;"}},{"CONTENT_TYPE_RSS":{"body":["CONTENT_TYPE_RSS${0}"],"prefix":"CONTENT_TYPE_RSS","description":"integer CONTENT_TYPE_RSS = 8;"}},{"CONTENT_TYPE_TEXT":{"body":["CONTENT_TYPE_TEXT${0}"],"prefix":"CONTENT_TYPE_TEXT","description":"integer CONTENT_TYPE_TEXT = 0;"}},{"CONTENT_TYPE_XHTML":{"body":["CONTENT_TYPE_XHTML${0}"],"prefix":"CONTENT_TYPE_XHTML","description":"integer CONTENT_TYPE_XHTML = 3;"}},{"CONTENT_TYPE_XML":{"body":["CONTENT_TYPE_XML${0}"],"prefix":"CONTENT_TYPE_XML","description":"integer CONTENT_TYPE_XML = 2;"}},{"CONTROL_BACK":{"body":["CONTROL_BACK${0}"],"prefix":"CONTROL_BACK","description":"integer CONTROL_BACK = 0x2;"}},{"CONTROL_DOWN":{"body":["CONTROL_DOWN${0}"],"prefix":"CONTROL_DOWN","description":"integer CONTROL_DOWN = 0x20;"}},{"CONTROL_FWD":{"body":["CONTROL_FWD${0}"],"prefix":"CONTROL_FWD","description":"integer CONTROL_FWD = 0x1;"}},{"CONTROL_LBUTTON":{"body":["CONTROL_LBUTTON${0}"],"prefix":"CONTROL_LBUTTON","description":"integer CONTROL_LBUTTON = 0x10000000;"}},{"CONTROL_LEFT":{"body":["CONTROL_LEFT${0}"],"prefix":"CONTROL_LEFT","description":"integer CONTROL_LEFT = 0x4;"}},{"CONTROL_ML_LBUTTON":{"body":["CONTROL_ML_LBUTTON${0}"],"prefix":"CONTROL_ML_LBUTTON","description":"integer CONTROL_ML_LBUTTON = 0x40000000;"}},{"CONTROL_RIGHT":{"body":["CONTROL_RIGHT${0}"],"prefix":"CONTROL_RIGHT","description":"integer CONTROL_RIGHT = 0x8;"}},{"CONTROL_ROT_LEFT":{"body":["CONTROL_ROT_LEFT${0}"],"prefix":"CONTROL_ROT_LEFT","description":"integer CONTROL_ROT_LEFT = 0x100;"}},{"CONTROL_ROT_RIGHT":{"body":["CONTROL_ROT_RIGHT${0}"],"prefix":"CONTROL_ROT_RIGHT","description":"integer CONTROL_ROT_RIGHT = 0x200;"}},{"CONTROL_UP":{"body":["CONTROL_UP${0}"],"prefix":"CONTROL_UP","description":"integer CONTROL_UP = 0x10;"}},{"DATA_BORN":{"body":["DATA_BORN${0}"],"prefix":"DATA_BORN","description":"integer DATA_BORN = 3;"}},{"DATA_NAME":{"body":["DATA_NAME${0}"],"prefix":"DATA_NAME","description":"integer DATA_NAME = 2;"}},{"DATA_ONLINE":{"body":["DATA_ONLINE${0}"],"prefix":"DATA_ONLINE","description":""}},{"DATA_PAYINFO":{"body":["DATA_PAYINFO${0}"],"prefix":"DATA_PAYINFO","description":"integer DATA_PAYINFO = 8;"}},{"DATA_RATING":{"body":["DATA_RATING${0}"],"prefix":"DATA_RATING","description":"integer DATA_RATING = 4;"}},{"DATA_SIM_POS":{"body":["DATA_SIM_POS${0}"],"prefix":"DATA_SIM_POS","description":"integer DATA_SIM_POS = 5;"}},{"DATA_SIM_RATING":{"body":["DATA_SIM_RATING${0}"],"prefix":"DATA_SIM_RATING","description":"integer DATA_SIM_RATING = 7;"}},{"DATA_SIM_STATUS":{"body":["DATA_SIM_STATUS${0}"],"prefix":"DATA_SIM_STATUS","description":"integer DATA_SIM_STATUS = 6;"}},{"DEBUG_CHANNEL":{"body":["DEBUG_CHANNEL${0}"],"prefix":"DEBUG_CHANNEL","description":"integer DEBUG_CHANNEL = 0x7FFFFFFF;"}},{"DEG_TO_RAD":{"body":["DEG_TO_RAD${0}"],"prefix":"DEG_TO_RAD","description":"float DEG_TO_RAD = 0.017453292519943295769236907684886f;"}},{"EOF":{"body":["EOF${0}"],"prefix":"EOF","description":"string EOF = \"\\n\\n\\n\";"}},{"ERR_GENERIC":{"body":["ERR_GENERIC${0}"],"prefix":"ERR_GENERIC","description":"integer ERR_GENERIC = -1;"}},{"ERR_MALFORMED_PARAMS":{"body":["ERR_MALFORMED_PARAMS${0}"],"prefix":"ERR_MALFORMED_PARAMS","description":"integer ERR_MALFORMED_PARAMS = -3;"}},{"ERR_PARCEL_PERMISSIONS":{"body":["ERR_PARCEL_PERMISSIONS${0}"],"prefix":"ERR_PARCEL_PERMISSIONS","description":"integer ERR_PARCEL_PERMISSIONS = -2;"}},{"ERR_RUNTIME_PERMISSIONS":{"body":["ERR_RUNTIME_PERMISSIONS${0}"],"prefix":"ERR_RUNTIME_PERMISSIONS","description":"integer ERR_RUNTIME_PERMISSIONS = -4;"}},{"ERR_THROTTLED":{"body":["ERR_THROTTLED${0}"],"prefix":"ERR_THROTTLED","description":"integer ERR_THROTTLED = -5;"}},{"ESTATE_ACCESS_ALLOWED_AGENT_ADD":{"body":["ESTATE_ACCESS_ALLOWED_AGENT_ADD${0}"],"prefix":"ESTATE_ACCESS_ALLOWED_AGENT_ADD","description":"integer ESTATE_ACCESS_ALLOWED_AGENT_ADD = 4;"}},{"ESTATE_ACCESS_ALLOWED_AGENT_REMOVE":{"body":["ESTATE_ACCESS_ALLOWED_AGENT_REMOVE${0}"],"prefix":"ESTATE_ACCESS_ALLOWED_AGENT_REMOVE","description":"integer ESTATE_ACCESS_ALLOWED_AGENT_REMOVE = 8;"}},{"ESTATE_ACCESS_ALLOWED_GROUP_ADD":{"body":["ESTATE_ACCESS_ALLOWED_GROUP_ADD${0}"],"prefix":"ESTATE_ACCESS_ALLOWED_GROUP_ADD","description":"integer ESTATE_ACCESS_ALLOWED_GROUP_ADD = 16;"}},{"ESTATE_ACCESS_ALLOWED_GROUP_REMOVE":{"body":["ESTATE_ACCESS_ALLOWED_GROUP_REMOVE${0}"],"prefix":"ESTATE_ACCESS_ALLOWED_GROUP_REMOVE","description":"integer ESTATE_ACCESS_ALLOWED_GROUP_REMOVE = 32;"}},{"ESTATE_ACCESS_BANNED_AGENT_ADD":{"body":["ESTATE_ACCESS_BANNED_AGENT_ADD${0}"],"prefix":"ESTATE_ACCESS_BANNED_AGENT_ADD","description":""}},{"ESTATE_ACCESS_BANNED_AGENT_REMOVE":{"body":["ESTATE_ACCESS_BANNED_AGENT_REMOVE${0}"],"prefix":"ESTATE_ACCESS_BANNED_AGENT_REMOVE","description":"integer ESTATE_ACCESS_BANNED_AGENT_REMOVE = 128;"}},{"FALSE":{"body":["FALSE${0}"],"prefix":"FALSE","description":"integer FALSE = 0;"}},{"FORCE_DIRECT_PATH":{"body":["FORCE_DIRECT_PATH${0}"],"prefix":"FORCE_DIRECT_PATH","description":"integer FORCE_DIRECT_PATH = 1;"}},{"HORIZONTAL":{"body":["HORIZONTAL${0}"],"prefix":"HORIZONTAL","description":"integer HORIZONTAL = 1;"}},{"HTTP_ACCEPT":{"body":["HTTP_ACCEPT${0}"],"prefix":"HTTP_ACCEPT","description":"integer HTTP_ACCEPT = 8;"}},{"HTTP_BODY_MAXLENGTH":{"body":["HTTP_BODY_MAXLENGTH${0}"],"prefix":"HTTP_BODY_MAXLENGTH","description":"integer HTTP_BODY_MAXLENGTH = 2;"}},{"HTTP_BODY_TRUNCATED":{"body":["HTTP_BODY_TRUNCATED${0}"],"prefix":"HTTP_BODY_TRUNCATED","description":"integer HTTP_BODY_TRUNCATED = 0;"}},{"HTTP_CUSTOM_HEADER":{"body":["HTTP_CUSTOM_HEADER${0}"],"prefix":"HTTP_CUSTOM_HEADER","description":"integer HTTP_CUSTOM_HEADER = 5;"}},{"HTTP_METHOD":{"body":["HTTP_METHOD${0}"],"prefix":"HTTP_METHOD","description":"integer HTTP_METHOD = 0;"}},{"HTTP_MIMETYPE":{"body":["HTTP_MIMETYPE${0}"],"prefix":"HTTP_MIMETYPE","description":"integer HTTP_MIMETYPE = 1;"}},{"HTTP_PRAGMA_NO_CACHE":{"body":["HTTP_PRAGMA_NO_CACHE${0}"],"prefix":"HTTP_PRAGMA_NO_CACHE","description":"integer HTTP_PRAGMA_NO_CACHE = 6;"}},{"HTTP_USER_AGENT":{"body":["HTTP_USER_AGENT${0}"],"prefix":"HTTP_USER_AGENT","description":"integer HTTP_USER_AGENT = 7;"}},{"HTTP_VERBOSE_THROTTLE":{"body":["HTTP_VERBOSE_THROTTLE${0}"],"prefix":"HTTP_VERBOSE_THROTTLE","description":"integer HTTP_VERBOSE_THROTTLE = 4;"}},{"HTTP_VERIFY_CERT":{"body":["HTTP_VERIFY_CERT${0}"],"prefix":"HTTP_VERIFY_CERT","description":"integer HTTP_VERIFY_CERT = 3;"}},{"INVENTORY_ALL":{"body":["INVENTORY_ALL${0}"],"prefix":"INVENTORY_ALL","description":"integer INVENTORY_ALL = -1;"}},{"INVENTORY_ANIMATION":{"body":["INVENTORY_ANIMATION${0}"],"prefix":"INVENTORY_ANIMATION","description":"integer INVENTORY_ANIMATION = 20;"}},{"INVENTORY_BODYPART":{"body":["INVENTORY_BODYPART${0}"],"prefix":"INVENTORY_BODYPART","description":"integer INVENTORY_BODYPART = 13;"}},{"INVENTORY_CLOTHING":{"body":["INVENTORY_CLOTHING${0}"],"prefix":"INVENTORY_CLOTHING","description":"integer INVENTORY_CLOTHING = 5;"}},{"INVENTORY_GESTURE":{"body":["INVENTORY_GESTURE${0}"],"prefix":"INVENTORY_GESTURE","description":"integer INVENTORY_GESTURE = 21;"}},{"INVENTORY_LANDMARK":{"body":["INVENTORY_LANDMARK${0}"],"prefix":"INVENTORY_LANDMARK","description":"integer INVENTORY_LANDMARK = 3;"}},{"INVENTORY_NONE":{"body":["INVENTORY_NONE${0}"],"prefix":"INVENTORY_NONE","description":"integer INVENTORY_NONE = -1;"}},{"INVENTORY_NOTECARD":{"body":["INVENTORY_NOTECARD${0}"],"prefix":"INVENTORY_NOTECARD","description":"integer INVENTORY_NOTECARD = 7;"}},{"INVENTORY_OBJECT":{"body":["INVENTORY_OBJECT${0}"],"prefix":"INVENTORY_OBJECT","description":"integer INVENTORY_OBJECT = 6;"}},{"INVENTORY_SCRIPT":{"body":["INVENTORY_SCRIPT${0}"],"prefix":"INVENTORY_SCRIPT","description":"integer INVENTORY_SCRIPT = 10;"}},{"INVENTORY_SOUND":{"body":["INVENTORY_SOUND${0}"],"prefix":"INVENTORY_SOUND","description":"integer INVENTORY_SOUND = 1;"}},{"INVENTORY_TEXTURE":{"body":["INVENTORY_TEXTURE${0}"],"prefix":"INVENTORY_TEXTURE","description":"integer INVENTORY_TEXTURE = 0;"}},{"JSON_APPEND":{"body":["JSON_APPEND${0}"],"prefix":"JSON_APPEND","description":"integer JSON_APPEND = -1;"}},{"JSON_ARRAY":{"body":["JSON_ARRAY${0}"],"prefix":"JSON_ARRAY","description":"string JSON_ARRAY = \"\ufdd2\";"}},{"JSON_DELETE":{"body":["JSON_DELETE${0}"],"prefix":"JSON_DELETE","description":"string JSON_DELETE = \"\ufffd\";"}},{"JSON_FALSE":{"body":["JSON_FALSE${0}"],"prefix":"JSON_FALSE","description":"string JSON_FALSE = \"\ufffd\";"}},{"JSON_INVALID":{"body":["JSON_INVALID${0}"],"prefix":"JSON_INVALID","description":"string JSON_INVALID = \"\ufdd0\";"}},{"JSON_NULL":{"body":["JSON_NULL${0}"],"prefix":"JSON_NULL","description":"string JSON_NULL = \"\ufffd\";"}},{"JSON_NUMBER":{"body":["JSON_NUMBER${0}"],"prefix":"JSON_NUMBER","description":"string JSON_NUMBER = \"\ufffd\";"}},{"JSON_OBJECT":{"body":["JSON_OBJECT${0}"],"prefix":"JSON_OBJECT","description":"string JSON_OBJECT = \"\ufdd1\";"}},{"JSON_STRING":{"body":["JSON_STRING${0}"],"prefix":"JSON_STRING","description":"string JSON_STRING = \"\ufffd\";"}},{"JSON_TRUE":{"body":["JSON_TRUE${0}"],"prefix":"JSON_TRUE","description":"string JSON_TRUE = \"\ufffd\";"}},{"KFM_CMD_PAUSE":{"body":["KFM_CMD_PAUSE${0}"],"prefix":"KFM_CMD_PAUSE","description":"integer KFM_CMD_PAUSE = 2;"}},{"KFM_CMD_PLAY":{"body":["KFM_CMD_PLAY${0}"],"prefix":"KFM_CMD_PLAY","description":"integer KFM_CMD_PLAY = 0;"}},{"KFM_CMD_STOP":{"body":["KFM_CMD_STOP${0}"],"prefix":"KFM_CMD_STOP","description":"integer KFM_CMD_STOP = 1;"}},{"KFM_COMMAND":{"body":["KFM_COMMAND${0}"],"prefix":"KFM_COMMAND","description":"integer KFM_COMMAND = 0;"}},{"KFM_DATA":{"body":["KFM_DATA${0}"],"prefix":"KFM_DATA","description":"integer KFM_DATA = 2;"}},{"KFM_FORWARD":{"body":["KFM_FORWARD${0}"],"prefix":"KFM_FORWARD","description":"integer KFM_FORWARD = 0;"}},{"KFM_LOOP":{"body":["KFM_LOOP${0}"],"prefix":"KFM_LOOP","description":"integer KFM_LOOP = 1;"}},{"KFM_MODE":{"body":["KFM_MODE${0}"],"prefix":"KFM_MODE","description":"integer KFM_MODE = 1;"}},{"KFM_PING_PONG":{"body":["KFM_PING_PONG${0}"],"prefix":"KFM_PING_PONG","description":"integer KFM_PING_PONG = 2;"}},{"KFM_REVERSE":{"body":["KFM_REVERSE${0}"],"prefix":"KFM_REVERSE","description":"integer KFM_REVERSE = 3;"}},{"KFM_ROTATION":{"body":["KFM_ROTATION${0}"],"prefix":"KFM_ROTATION","description":"integer KFM_ROTATION = 0x1;"}},{"KFM_TRANSLATION":{"body":["KFM_TRANSLATION${0}"],"prefix":"KFM_TRANSLATION","description":"integer KFM_TRANSLATION = 0x2;"}},{"LAND_LEVEL":{"body":["LAND_LEVEL${0}"],"prefix":"LAND_LEVEL","description":"integer LAND_LEVEL = 0;"}},{"LAND_LOWER":{"body":["LAND_LOWER${0}"],"prefix":"LAND_LOWER","description":"integer LAND_LOWER = 2;"}},{"LAND_NOISE":{"body":["LAND_NOISE${0}"],"prefix":"LAND_NOISE","description":"integer LAND_NOISE = 4;"}},{"LAND_RAISE":{"body":["LAND_RAISE${0}"],"prefix":"LAND_RAISE","description":"integer LAND_RAISE = 1;"}},{"LAND_REVERT":{"body":["LAND_REVERT${0}"],"prefix":"LAND_REVERT","description":"integer LAND_REVERT = 5;"}},{"LAND_SMOOTH":{"body":["LAND_SMOOTH${0}"],"prefix":"LAND_SMOOTH","description":"integer LAND_SMOOTH = 3;"}},{"LINK_ALL_CHILDREN":{"body":["LINK_ALL_CHILDREN${0}"],"prefix":"LINK_ALL_CHILDREN","description":""}},{"LINK_ALL_OTHERS":{"body":["LINK_ALL_OTHERS${0}"],"prefix":"LINK_ALL_OTHERS","description":""}},{"LINK_ROOT":{"body":["LINK_ROOT${0}"],"prefix":"LINK_ROOT","description":"integer LINK_ROOT = 1;"}},{"LINK_SET":{"body":["LINK_SET${0}"],"prefix":"LINK_SET","description":""}},{"LINK_THIS":{"body":["LINK_THIS${0}"],"prefix":"LINK_THIS","description":""}},{"LIST_STAT_GEOMETRIC_MEAN":{"body":["LIST_STAT_GEOMETRIC_MEAN${0}"],"prefix":"LIST_STAT_GEOMETRIC_MEAN","description":"integer LIST_STAT_GEOMETRIC_MEAN = 9;"}},{"LIST_STAT_MAX":{"body":["LIST_STAT_MAX${0}"],"prefix":"LIST_STAT_MAX","description":"integer LIST_STAT_MAX = 2;"}},{"LIST_STAT_MEAN":{"body":["LIST_STAT_MEAN${0}"],"prefix":"LIST_STAT_MEAN","description":"integer LIST_STAT_MEAN = 3;"}},{"LIST_STAT_MEDIAN":{"body":["LIST_STAT_MEDIAN${0}"],"prefix":"LIST_STAT_MEDIAN","description":"integer LIST_STAT_MEDIAN = 4;"}},{"LIST_STAT_MIN":{"body":["LIST_STAT_MIN${0}"],"prefix":"LIST_STAT_MIN","description":"integer LIST_STAT_MIN = 1;"}},{"LIST_STAT_NUM_COUNT":{"body":["LIST_STAT_NUM_COUNT${0}"],"prefix":"LIST_STAT_NUM_COUNT","description":"integer LIST_STAT_NUM_COUNT = 8;"}},{"LIST_STAT_RANGE":{"body":["LIST_STAT_RANGE${0}"],"prefix":"LIST_STAT_RANGE","description":"integer LIST_STAT_RANGE = 0;"}},{"LIST_STAT_STD_DEV":{"body":["LIST_STAT_STD_DEV${0}"],"prefix":"LIST_STAT_STD_DEV","description":"integer LIST_STAT_STD_DEV = 5;"}},{"LIST_STAT_SUM":{"body":["LIST_STAT_SUM${0}"],"prefix":"LIST_STAT_SUM","description":"integer LIST_STAT_SUM = 6;"}},{"LIST_STAT_SUM_SQUARES":{"body":["LIST_STAT_SUM_SQUARES${0}"],"prefix":"LIST_STAT_SUM_SQUARES","description":"integer LIST_STAT_SUM_SQUARES = 7;"}},{"LOOP":{"body":["LOOP${0}"],"prefix":"LOOP","description":"integer LOOP = 0x02;"}},{"MASK_BASE":{"body":["MASK_BASE${0}"],"prefix":"MASK_BASE","description":"integer MASK_BASE = 0;"}},{"MASK_EVERYONE":{"body":["MASK_EVERYONE${0}"],"prefix":"MASK_EVERYONE","description":"integer MASK_EVERYONE = 3;"}},{"MASK_GROUP":{"body":["MASK_GROUP${0}"],"prefix":"MASK_GROUP","description":"integer MASK_GROUP = 2;"}},{"MASK_NEXT":{"body":["MASK_NEXT${0}"],"prefix":"MASK_NEXT","description":"integer MASK_NEXT = 4;"}},{"MASK_OWNER":{"body":["MASK_OWNER${0}"],"prefix":"MASK_OWNER","description":"integer MASK_OWNER = 1;"}},{"NULL_KEY":{"body":["NULL_KEY${0}"],"prefix":"NULL_KEY","description":"string NULL_KEY = \"00000000-0000-0000-0000-000000000000\";"}},{"OBJECT_ATTACHED_POINT":{"body":["OBJECT_ATTACHED_POINT${0}"],"prefix":"OBJECT_ATTACHED_POINT","description":"integer OBJECT_ATTACHED_POINT = 19;"}},{"OBJECT_BODY_SHAPE_TYPE":{"body":["OBJECT_BODY_SHAPE_TYPE${0}"],"prefix":"OBJECT_BODY_SHAPE_TYPE","description":"integer OBJECT_BODY_SHAPE_TYPE = 26;"}},{"OBJECT_CHARACTER_TIME":{"body":["OBJECT_CHARACTER_TIME${0}"],"prefix":"OBJECT_CHARACTER_TIME","description":"integer OBJECT_CHARACTER_TIME = 17;"}},{"OBJECT_CLICK_ACTION":{"body":["OBJECT_CLICK_ACTION${0}"],"prefix":"OBJECT_CLICK_ACTION","description":"integer OBJECT_CLICK_ACTION = 28;"}},{"OBJECT_CREATOR":{"body":["OBJECT_CREATOR${0}"],"prefix":"OBJECT_CREATOR","description":"integer OBJECT_CREATOR = 8;"}},{"OBJECT_DESC":{"body":["OBJECT_DESC${0}"],"prefix":"OBJECT_DESC","description":"integer OBJECT_DESC = 2;"}},{"OBJECT_GROUP":{"body":["OBJECT_GROUP${0}"],"prefix":"OBJECT_GROUP","description":"integer OBJECT_GROUP = 7;"}},{"OBJECT_HOVER_HEIGHT":{"body":["OBJECT_HOVER_HEIGHT${0}"],"prefix":"OBJECT_HOVER_HEIGHT","description":"integer OBJECT_HOVER_HEIGHT = 25;"}},{"OBJECT_LAST_OWNER_ID":{"body":["OBJECT_LAST_OWNER_ID${0}"],"prefix":"OBJECT_LAST_OWNER_ID","description":"integer OBJECT_LAST_OWNER_ID = 27;"}},{"OBJECT_NAME":{"body":["OBJECT_NAME${0}"],"prefix":"OBJECT_NAME","description":"integer OBJECT_NAME = 1;"}},{"OBJECT_OMEGA":{"body":["OBJECT_OMEGA${0}"],"prefix":"OBJECT_OMEGA","description":"integer OBJECT_OMEGA = 29;"}},{"OBJECT_OWNER":{"body":["OBJECT_OWNER${0}"],"prefix":"OBJECT_OWNER","description":"integer OBJECT_OWNER = 6;"}},{"OBJECT_PATHFINDING_TYPE":{"body":["OBJECT_PATHFINDING_TYPE${0}"],"prefix":"OBJECT_PATHFINDING_TYPE","description":"integer OBJECT_PATHFINDING_TYPE = 20;"}},{"OBJECT_PHANTOM":{"body":["OBJECT_PHANTOM${0}"],"prefix":"OBJECT_PHANTOM","description":"integer OBJECT_PHANTOM = 22;"}},{"OBJECT_PHYSICS":{"body":["OBJECT_PHYSICS${0}"],"prefix":"OBJECT_PHYSICS","description":"integer OBJECT_PHYSICS = 21;"}},{"OBJECT_PHYSICS_COST":{"body":["OBJECT_PHYSICS_COST${0}"],"prefix":"OBJECT_PHYSICS_COST","description":"integer OBJECT_PHYSICS_COST = 16;"}},{"OBJECT_POS":{"body":["OBJECT_POS${0}"],"prefix":"OBJECT_POS","description":"integer OBJECT_POS = 3;"}},{"OBJECT_PRIM_COUNT":{"body":["OBJECT_PRIM_COUNT${0}"],"prefix":"OBJECT_PRIM_COUNT","description":"integer OBJECT_PRIM_COUNT = 30;"}},{"OBJECT_PRIM_EQUIVALENCE":{"body":["OBJECT_PRIM_EQUIVALENCE${0}"],"prefix":"OBJECT_PRIM_EQUIVALENCE","description":"integer OBJECT_PRIM_EQUIVALENCE = 13;"}},{"OBJECT_RENDER_WEIGHT":{"body":["OBJECT_RENDER_WEIGHT${0}"],"prefix":"OBJECT_RENDER_WEIGHT","description":"integer OBJECT_RENDER_WEIGHT = 24;"}},{"OBJECT_RETURN_PARCEL":{"body":["OBJECT_RETURN_PARCEL${0}"],"prefix":"OBJECT_RETURN_PARCEL","description":"integer OBJECT_RETURN_PARCEL = 1;"}},{"OBJECT_RETURN_PARCEL_OWNER":{"body":["OBJECT_RETURN_PARCEL_OWNER${0}"],"prefix":"OBJECT_RETURN_PARCEL_OWNER","description":"integer OBJECT_RETURN_PARCEL_OWNER = 2;"}},{"OBJECT_RETURN_REGION":{"body":["OBJECT_RETURN_REGION${0}"],"prefix":"OBJECT_RETURN_REGION","description":"integer OBJECT_RETURN_REGION = 4;"}},{"OBJECT_ROOT":{"body":["OBJECT_ROOT${0}"],"prefix":"OBJECT_ROOT","description":"integer OBJECT_ROOT = 18;"}},{"OBJECT_ROT":{"body":["OBJECT_ROT${0}"],"prefix":"OBJECT_ROT","description":"integer OBJECT_ROT = 4;"}},{"OBJECT_RUNNING_SCRIPT_COUNT":{"body":["OBJECT_RUNNING_SCRIPT_COUNT${0}"],"prefix":"OBJECT_RUNNING_SCRIPT_COUNT","description":"integer OBJECT_RUNNING_SCRIPT_COUNT = 9;"}},{"OBJECT_SCRIPT_MEMORY":{"body":["OBJECT_SCRIPT_MEMORY${0}"],"prefix":"OBJECT_SCRIPT_MEMORY","description":"integer OBJECT_SCRIPT_MEMORY = 11;"}},{"OBJECT_SCRIPT_TIME":{"body":["OBJECT_SCRIPT_TIME${0}"],"prefix":"OBJECT_SCRIPT_TIME","description":"integer OBJECT_SCRIPT_TIME = 12;"}},{"OBJECT_SERVER_COST":{"body":["OBJECT_SERVER_COST${0}"],"prefix":"OBJECT_SERVER_COST","description":"integer OBJECT_SERVER_COST = 14;"}},{"OBJECT_STREAMING_COST":{"body":["OBJECT_STREAMING_COST${0}"],"prefix":"OBJECT_STREAMING_COST","description":"integer OBJECT_STREAMING_COST = 15;"}},{"OBJECT_TEMP_ON_REZ":{"body":["OBJECT_TEMP_ON_REZ${0}"],"prefix":"OBJECT_TEMP_ON_REZ","description":"integer OBJECT_TEMP_ON_REZ = 23;"}},{"OBJECT_TOTAL_INVENTORY_COUNT":{"body":["OBJECT_TOTAL_INVENTORY_COUNT${0}"],"prefix":"OBJECT_TOTAL_INVENTORY_COUNT","description":"integer OBJECT_TOTAL_INVENTORY_COUNT = 31;"}},{"OBJECT_TOTAL_SCRIPT_COUNT":{"body":["OBJECT_TOTAL_SCRIPT_COUNT${0}"],"prefix":"OBJECT_TOTAL_SCRIPT_COUNT","description":"integer OBJECT_TOTAL_SCRIPT_COUNT = 10;"}},{"OBJECT_UNKNOWN_DETAIL":{"body":["OBJECT_UNKNOWN_DETAIL${0}"],"prefix":"OBJECT_UNKNOWN_DETAIL","description":"integer OBJECT_UNKNOWN_DETAIL = -1;"}},{"OBJECT_VELOCITY":{"body":["OBJECT_VELOCITY${0}"],"prefix":"OBJECT_VELOCITY","description":"integer OBJECT_VELOCITY = 5;"}},{"OPT_CHARACTER":{"body":["OPT_CHARACTER${0}"],"prefix":"OPT_CHARACTER","description":"integer OPT CHARACTER = 2;"}},{"OPT_AVATAR":{"body":["OPT_AVATAR${0}"],"prefix":"OPT_AVATAR","description":"integer OPT_AVATAR = 1;"}},{"OPT_EXCLUSION_VOLUME":{"body":["OPT_EXCLUSION_VOLUME${0}"],"prefix":"OPT_EXCLUSION_VOLUME","description":"integer OPT_EXCLUSION_VOLUME = 6;"}},{"OPT_LEGACY_LINKSET":{"body":["OPT_LEGACY_LINKSET${0}"],"prefix":"OPT_LEGACY_LINKSET","description":"integer OPT_LEGACY_LINKSET = 0;"}},{"OPT_MATERIAL_VOLUME":{"body":["OPT_MATERIAL_VOLUME${0}"],"prefix":"OPT_MATERIAL_VOLUME","description":"integer OPT_MATERIAL_VOLUME = 5;"}},{"OPT_OTHER":{"body":["OPT_OTHER${0}"],"prefix":"OPT_OTHER","description":"integer OPT_OTHER = -1;"}},{"OPT_STATIC_OBSTACLE":{"body":["OPT_STATIC_OBSTACLE${0}"],"prefix":"OPT_STATIC_OBSTACLE","description":"integer OPT_STATIC_OBSTACLE = 4;"}},{"OPT_WALKABLE":{"body":["OPT_WALKABLE${0}"],"prefix":"OPT_WALKABLE","description":"integer OPT_WALKABLE = 3;"}},{"PARCEL_COUNT_GROUP":{"body":["PARCEL_COUNT_GROUP${0}"],"prefix":"PARCEL_COUNT_GROUP","description":"integer PARCEL_COUNT_GROUP = 2;"}},{"PARCEL_COUNT_OTHER":{"body":["PARCEL_COUNT_OTHER${0}"],"prefix":"PARCEL_COUNT_OTHER","description":"integer PARCEL_COUNT_OTHER = 3;"}},{"PARCEL_COUNT_OWNER":{"body":["PARCEL_COUNT_OWNER${0}"],"prefix":"PARCEL_COUNT_OWNER","description":"integer PARCEL_COUNT_OWNER = 1;"}},{"PARCEL_COUNT_SELECTED":{"body":["PARCEL_COUNT_SELECTED${0}"],"prefix":"PARCEL_COUNT_SELECTED","description":"integer PARCEL_COUNT_SELECTED = 4;"}},{"PARCEL_COUNT_TEMP":{"body":["PARCEL_COUNT_TEMP${0}"],"prefix":"PARCEL_COUNT_TEMP","description":"integer PARCEL_COUNT_TEMP = 5;"}},{"PARCEL_COUNT_TOTAL":{"body":["PARCEL_COUNT_TOTAL${0}"],"prefix":"PARCEL_COUNT_TOTAL","description":"integer PARCEL_COUNT_TOTAL = 0;"}},{"PARCEL_DETAILS_AREA":{"body":["PARCEL_DETAILS_AREA${0}"],"prefix":"PARCEL_DETAILS_AREA","description":"integer PARCEL_DETAILS_AREA = 4;"}},{"PARCEL_DETAILS_DESC":{"body":["PARCEL_DETAILS_DESC${0}"],"prefix":"PARCEL_DETAILS_DESC","description":"integer PARCEL_DETAILS_DESC = 1;"}},{"PARCEL_DETAILS_GROUP":{"body":["PARCEL_DETAILS_GROUP${0}"],"prefix":"PARCEL_DETAILS_GROUP","description":"integer PARCEL_DETAILS_GROUP = 3;"}},{"PARCEL_DETAILS_ID":{"body":["PARCEL_DETAILS_ID${0}"],"prefix":"PARCEL_DETAILS_ID","description":"integer PARCEL_DETAILS_ID = 5;"}},{"PARCEL_DETAILS_NAME":{"body":["PARCEL_DETAILS_NAME${0}"],"prefix":"PARCEL_DETAILS_NAME","description":"integer PARCEL_DETAILS_NAME = 0;"}},{"PARCEL_DETAILS_OWNER":{"body":["PARCEL_DETAILS_OWNER${0}"],"prefix":"PARCEL_DETAILS_OWNER","description":"integer PARCEL_DETAILS_OWNER = 2;"}},{"PARCEL_DETAILS_SEE_AVATARS":{"body":["PARCEL_DETAILS_SEE_AVATARS${0}"],"prefix":"PARCEL_DETAILS_SEE_AVATARS","description":"integer PARCEL_DETAILS_SEE_AVATARS = 6;"}},{"PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY":{"body":["PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY${0}"],"prefix":"PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY","description":"integer PARCEL_FLAG_ALLOW_ALL_OBJECT_ENTRY = 0x8000000;"}},{"PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS":{"body":["PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS${0}"],"prefix":"PARCEL_FLAG_ALLOW_CREATE_GROUP_OBJECTS","description":""}},{"PARCEL_FLAG_ALLOW_CREATE_OBJECTS":{"body":["PARCEL_FLAG_ALLOW_CREATE_OBJECTS${0}"],"prefix":"PARCEL_FLAG_ALLOW_CREATE_OBJECTS","description":"integer PARCEL_FLAG_ALLOW_CREATE_OBJECTS = 0x40;"}},{"PARCEL_FLAG_ALLOW_DAMAGE":{"body":["PARCEL_FLAG_ALLOW_DAMAGE${0}"],"prefix":"PARCEL_FLAG_ALLOW_DAMAGE","description":"integer PARCEL_FLAG_ALLOW_DAMAGE = 0x20;"}},{"PARCEL_FLAG_ALLOW_FLY":{"body":["PARCEL_FLAG_ALLOW_FLY${0}"],"prefix":"PARCEL_FLAG_ALLOW_FLY","description":"integer PARCEL_FLAG_ALLOW_FLY = 0x1;"}},{"PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY":{"body":["PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY${0}"],"prefix":"PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY","description":"integer PARCEL_FLAG_ALLOW_GROUP_OBJECT_ENTRY = 0x10000000;"}},{"PARCEL_FLAG_ALLOW_GROUP_SCRIPTS":{"body":["PARCEL_FLAG_ALLOW_GROUP_SCRIPTS${0}"],"prefix":"PARCEL_FLAG_ALLOW_GROUP_SCRIPTS","description":"integer PARCEL_FLAG_ALLOW_GROUP_SCRIPTS = 0x2000000;"}},{"PARCEL_FLAG_ALLOW_LANDMARK":{"body":["PARCEL_FLAG_ALLOW_LANDMARK${0}"],"prefix":"PARCEL_FLAG_ALLOW_LANDMARK","description":"integer PARCEL_FLAG_ALLOW_LANDMARK = 0x8;"}},{"PARCEL_FLAG_ALLOW_SCRIPTS":{"body":["PARCEL_FLAG_ALLOW_SCRIPTS${0}"],"prefix":"PARCEL_FLAG_ALLOW_SCRIPTS","description":"integer PARCEL_FLAG_ALLOW_SCRIPTS = 0x2;"}},{"PARCEL_FLAG_ALLOW_TERRAFORM":{"body":["PARCEL_FLAG_ALLOW_TERRAFORM${0}"],"prefix":"PARCEL_FLAG_ALLOW_TERRAFORM","description":"integer PARCEL_FLAG_ALLOW_TERRAFORM = 0x10;"}},{"PARCEL_FLAG_LOCAL_SOUND_ONLY":{"body":["PARCEL_FLAG_LOCAL_SOUND_ONLY${0}"],"prefix":"PARCEL_FLAG_LOCAL_SOUND_ONLY","description":"integer PARCEL_FLAG_LOCAL_SOUND_ONLY = 0x8000;"}},{"PARCEL_FLAG_RESTRICT_PUSHOBJECT":{"body":["PARCEL_FLAG_RESTRICT_PUSHOBJECT${0}"],"prefix":"PARCEL_FLAG_RESTRICT_PUSHOBJECT","description":"integer PARCEL_FLAG_RESTRICT_PUSHOBJECT = 0x200000;"}},{"PARCEL_FLAG_USE_ACCESS_GROUP":{"body":["PARCEL_FLAG_USE_ACCESS_GROUP${0}"],"prefix":"PARCEL_FLAG_USE_ACCESS_GROUP","description":"integer PARCEL_FLAG_USE_ACCESS_GROUP = 0x100;"}},{"PARCEL_FLAG_USE_ACCESS_LIST":{"body":["PARCEL_FLAG_USE_ACCESS_LIST${0}"],"prefix":"PARCEL_FLAG_USE_ACCESS_LIST","description":"integer PARCEL_FLAG_USE_ACCESS_LIST = 0x200;"}},{"PARCEL_FLAG_USE_BAN_LIST":{"body":["PARCEL_FLAG_USE_BAN_LIST${0}"],"prefix":"PARCEL_FLAG_USE_BAN_LIST","description":"integer PARCEL_FLAG_USE_BAN_LIST = 0x400;"}},{"PARCEL_FLAG_USE_LAND_PASS_LIST":{"body":["PARCEL_FLAG_USE_LAND_PASS_LIST${0}"],"prefix":"PARCEL_FLAG_USE_LAND_PASS_LIST","description":"integer PARCEL_FLAG_USE_LAND_PASS_LIST = 0x800;"}},{"PARCEL_MEDIA_COMMAND_AGENT":{"body":["PARCEL_MEDIA_COMMAND_AGENT${0}"],"prefix":"PARCEL_MEDIA_COMMAND_AGENT","description":"integer PARCEL_MEDIA_COMMAND_AGENT = 7;"}},{"PARCEL_MEDIA_COMMAND_AUTO_ALIGN":{"body":["PARCEL_MEDIA_COMMAND_AUTO_ALIGN${0}"],"prefix":"PARCEL_MEDIA_COMMAND_AUTO_ALIGN","description":"integer PARCEL_MEDIA_COMMAND_AUTO_ALIGN = 9;"}},{"PARCEL_MEDIA_COMMAND_DESC":{"body":["PARCEL_MEDIA_COMMAND_DESC${0}"],"prefix":"PARCEL_MEDIA_COMMAND_DESC","description":"integer PARCEL_MEDIA_COMMAND_DESC = 12;"}},{"PARCEL_MEDIA_COMMAND_LOOP":{"body":["PARCEL_MEDIA_COMMAND_LOOP${0}"],"prefix":"PARCEL_MEDIA_COMMAND_LOOP","description":"integer PARCEL_MEDIA_COMMAND_LOOP = 3;"}},{"PARCEL_MEDIA_COMMAND_LOOP_SET":{"body":["PARCEL_MEDIA_COMMAND_LOOP_SET${0}"],"prefix":"PARCEL_MEDIA_COMMAND_LOOP_SET","description":"integer PARCEL_MEDIA_COMMAND_LOOP_SET = 13;"}},{"PARCEL_MEDIA_COMMAND_PAUSE":{"body":["PARCEL_MEDIA_COMMAND_PAUSE${0}"],"prefix":"PARCEL_MEDIA_COMMAND_PAUSE","description":"integer PARCEL_MEDIA_COMMAND_PAUSE = 1;"}},{"PARCEL_MEDIA_COMMAND_PLAY":{"body":["PARCEL_MEDIA_COMMAND_PLAY${0}"],"prefix":"PARCEL_MEDIA_COMMAND_PLAY","description":"integer PARCEL_MEDIA_COMMAND_PLAY = 2;"}},{"PARCEL_MEDIA_COMMAND_SIZE":{"body":["PARCEL_MEDIA_COMMAND_SIZE${0}"],"prefix":"PARCEL_MEDIA_COMMAND_SIZE","description":"integer PARCEL_MEDIA_COMMAND_SIZE = 11;"}},{"PARCEL_MEDIA_COMMAND_STOP":{"body":["PARCEL_MEDIA_COMMAND_STOP${0}"],"prefix":"PARCEL_MEDIA_COMMAND_STOP","description":"integer PARCEL_MEDIA_COMMAND_STOP = 0;"}},{"PARCEL_MEDIA_COMMAND_TEXTURE":{"body":["PARCEL_MEDIA_COMMAND_TEXTURE${0}"],"prefix":"PARCEL_MEDIA_COMMAND_TEXTURE","description":"integer PARCEL_MEDIA_COMMAND_TEXTURE = 4;"}},{"PARCEL_MEDIA_COMMAND_TIME":{"body":["PARCEL_MEDIA_COMMAND_TIME${0}"],"prefix":"PARCEL_MEDIA_COMMAND_TIME","description":"integer PARCEL_MEDIA_COMMAND_TIME = 6;"}},{"PARCEL_MEDIA_COMMAND_TYPE":{"body":["PARCEL_MEDIA_COMMAND_TYPE${0}"],"prefix":"PARCEL_MEDIA_COMMAND_TYPE","description":"integer PARCEL_MEDIA_COMMAND_TYPE = 10;"}},{"PARCEL_MEDIA_COMMAND_UNLOAD":{"body":["PARCEL_MEDIA_COMMAND_UNLOAD${0}"],"prefix":"PARCEL_MEDIA_COMMAND_UNLOAD","description":"integer PARCEL_MEDIA_COMMAND_UNLOAD = 8;"}},{"PARCEL_MEDIA_COMMAND_URL":{"body":["PARCEL_MEDIA_COMMAND_URL${0}"],"prefix":"PARCEL_MEDIA_COMMAND_URL","description":"integer PARCEL_MEDIA_COMMAND_URL = 5;"}},{"PASSIVE":{"body":["PASSIVE${0}"],"prefix":"PASSIVE","description":"integer PASSIVE = 0x4;"}},{"PASS_ALWAYS":{"body":["PASS_ALWAYS${0}"],"prefix":"PASS_ALWAYS","description":"integer PASS_ALWAYS = 1;"}},{"PASS_IF_NOT_HANDLED":{"body":["PASS_IF_NOT_HANDLED${0}"],"prefix":"PASS_IF_NOT_HANDLED","description":"integer PASS_IF_NOT_HANDLED = 0;"}},{"PASS_NEVER":{"body":["PASS_NEVER${0}"],"prefix":"PASS_NEVER","description":"integer PASS_NEVER = 2;"}},{"PATROL_PAUSE_AT_WAYPOINTS":{"body":["PATROL_PAUSE_AT_WAYPOINTS${0}"],"prefix":"PATROL_PAUSE_AT_WAYPOINTS","description":"integer PATROL_PAUSE_AT_WAYPOINTS = 0;"}},{"PAYMENT_INFO_ON_FILE":{"body":["PAYMENT_INFO_ON_FILE${0}"],"prefix":"PAYMENT_INFO_ON_FILE","description":"integer PAYMENT_INFO_ON_FILE = 0x1;"}},{"PAYMENT_INFO_USED":{"body":["PAYMENT_INFO_USED${0}"],"prefix":"PAYMENT_INFO_USED","description":"integer PAYMENT_INFO_USED = 0x2;"}},{"PAY_DEFAULT":{"body":["PAY_DEFAULT${0}"],"prefix":"PAY_DEFAULT","description":"integer PAY_DEFAULT = -2;"}},{"PAY_HIDE":{"body":["PAY_HIDE${0}"],"prefix":"PAY_HIDE","description":"integer PAY_HIDE = -1;"}},{"PERMISSION_ATTACH":{"body":["PERMISSION_ATTACH${0}"],"prefix":"PERMISSION_ATTACH","description":"integer PERMISSION_ATTACH = 0x20;"}},{"PERMISSION_CHANGE_LINKS":{"body":["PERMISSION_CHANGE_LINKS${0}"],"prefix":"PERMISSION_CHANGE_LINKS","description":"integer PERMISSION_CHANGE_LINKS = 0x80;"}},{"PERMISSION_CONTROL_CAMERA":{"body":["PERMISSION_CONTROL_CAMERA${0}"],"prefix":"PERMISSION_CONTROL_CAMERA","description":"integer PERMISSION_CONTROL_CAMERA = 0x800;"}},{"PERMISSION_DEBIT":{"body":["PERMISSION_DEBIT${0}"],"prefix":"PERMISSION_DEBIT","description":"integer PERMISSION_DEBIT = 0x2;"}},{"PERMISSION_OVERRIDE_ANIMATIONS":{"body":["PERMISSION_OVERRIDE_ANIMATIONS${0}"],"prefix":"PERMISSION_OVERRIDE_ANIMATIONS","description":"integer PERMISSION_OVERRIDE_ANIMATIONS = 0x8000;"}},{"PERMISSION_RETURN_OBJECTS":{"body":["PERMISSION_RETURN_OBJECTS${0}"],"prefix":"PERMISSION_RETURN_OBJECTS","description":"integer PERMISSION_RETURN_OBJECTS = 65536;"}},{"PERMISSION_SILENT_ESTATE_MANAGEMENT":{"body":["PERMISSION_SILENT_ESTATE_MANAGEMENT${0}"],"prefix":"PERMISSION_SILENT_ESTATE_MANAGEMENT","description":"integer PERMISSION_SILENT_ESTATE_MANAGEMENT = 0x4000;"}},{"PERMISSION_TAKE_CONTROLS":{"body":["PERMISSION_TAKE_CONTROLS${0}"],"prefix":"PERMISSION_TAKE_CONTROLS","description":"integer PERMISSION_TAKE_CONTROLS = 0x4;"}},{"PERMISSION_TELEPORT":{"body":["PERMISSION_TELEPORT${0}"],"prefix":"PERMISSION_TELEPORT","description":"integer PERMISSION_TELEPORT = 0x1000;"}},{"PERMISSION_TRACK_CAMERA":{"body":["PERMISSION_TRACK_CAMERA${0}"],"prefix":"PERMISSION_TRACK_CAMERA","description":"integer PERMISSION_TRACK_CAMERA = 0x400;"}},{"PERMISSION_TRIGGER_ANIMATION":{"body":["PERMISSION_TRIGGER_ANIMATION${0}"],"prefix":"PERMISSION_TRIGGER_ANIMATION","description":"integer PERMISSION_TRIGGER_ANIMATION = 0x10;"}},{"PERM_ALL":{"body":["PERM_ALL${0}"],"prefix":"PERM_ALL","description":"integer PERM_ALL = 0x7FFFFFFF;"}},{"PERM_COPY":{"body":["PERM_COPY${0}"],"prefix":"PERM_COPY","description":"integer PERM_COPY = 0x00008000;"}},{"PERM_MODIFY":{"body":["PERM_MODIFY${0}"],"prefix":"PERM_MODIFY","description":"integer PERM_MODIFY = 0x00004000;"}},{"PERM_MOVE":{"body":["PERM_MOVE${0}"],"prefix":"PERM_MOVE","description":"integer PERM_MOVE = 0x00080000;"}},{"PERM_TRANSFER":{"body":["PERM_TRANSFER${0}"],"prefix":"PERM_TRANSFER","description":"integer PERM_TRANSFER = 0x00002000;"}},{"PI":{"body":["PI${0}"],"prefix":"PI","description":"float PI = 3.1415926535897932384626433832795f;"}},{"PING_PONG":{"body":["PING_PONG${0}"],"prefix":"PING_PONG","description":"integer PING_PONG = 0x08;"}},{"PI_BY_TWO":{"body":["PI_BY_TWO${0}"],"prefix":"PI_BY_TWO","description":"float PI_BY_TWO = 1.5707963267948966192313216916398f;"}},{"PRIM_ALLOW_UNSIT":{"body":["PRIM_ALLOW_UNSIT${0}"],"prefix":"PRIM_ALLOW_UNSIT","description":"integer PRIM_ALLOW_UNSIT = 39;"}},{"PRIM_ALPHA_MODE":{"body":["PRIM_ALPHA_MODE${0}"],"prefix":"PRIM_ALPHA_MODE","description":""}},{"PRIM_ALPHA_MODE_BLEND":{"body":["PRIM_ALPHA_MODE_BLEND${0}"],"prefix":"PRIM_ALPHA_MODE_BLEND","description":"integer PRIM_ALPHA_MODE_BLEND = 1;"}},{"PRIM_ALPHA_MODE_EMISSIVE":{"body":["PRIM_ALPHA_MODE_EMISSIVE${0}"],"prefix":"PRIM_ALPHA_MODE_EMISSIVE","description":"integer PRIM_ALPHA_MODE_EMISSIVE = 3;"}},{"PRIM_ALPHA_MODE_MASK":{"body":["PRIM_ALPHA_MODE_MASK${0}"],"prefix":"PRIM_ALPHA_MODE_MASK","description":"integer PRIM_ALPHA_MODE_MASK = 2;"}},{"PRIM_ALPHA_MODE_NONE":{"body":["PRIM_ALPHA_MODE_NONE${0}"],"prefix":"PRIM_ALPHA_MODE_NONE","description":"integer PRIM_ALPHA_MODE_NONE = 0;"}},{"PRIM_BUMP_BARK":{"body":["PRIM_BUMP_BARK${0}"],"prefix":"PRIM_BUMP_BARK","description":"integer PRIM_BUMP_BARK = 4;"}},{"PRIM_BUMP_BLOBS":{"body":["PRIM_BUMP_BLOBS${0}"],"prefix":"PRIM_BUMP_BLOBS","description":"integer PRIM_BUMP_BLOBS = 12;"}},{"PRIM_BUMP_BRICKS":{"body":["PRIM_BUMP_BRICKS${0}"],"prefix":"PRIM_BUMP_BRICKS","description":"integer PRIM_BUMP_BRICKS = 5;"}},{"PRIM_BUMP_BRIGHT":{"body":["PRIM_BUMP_BRIGHT${0}"],"prefix":"PRIM_BUMP_BRIGHT","description":"integer PRIM_BUMP_BRIGHT = 1;"}},{"PRIM_BUMP_CHECKER":{"body":["PRIM_BUMP_CHECKER${0}"],"prefix":"PRIM_BUMP_CHECKER","description":"integer PRIM_BUMP_CHECKER = 6;"}},{"PRIM_BUMP_CONCRETE":{"body":["PRIM_BUMP_CONCRETE${0}"],"prefix":"PRIM_BUMP_CONCRETE","description":"integer PRIM_BUMP_CONCRETE = 7;"}},{"PRIM_BUMP_DARK":{"body":["PRIM_BUMP_DARK${0}"],"prefix":"PRIM_BUMP_DARK","description":"integer PRIM_BUMP_DARK = 2;"}},{"PRIM_BUMP_DISKS":{"body":["PRIM_BUMP_DISKS${0}"],"prefix":"PRIM_BUMP_DISKS","description":"integer PRIM_BUMP_DISKS = 10;"}},{"PRIM_BUMP_GRAVEL":{"body":["PRIM_BUMP_GRAVEL${0}"],"prefix":"PRIM_BUMP_GRAVEL","description":"integer PRIM_BUMP_GRAVEL = 11;"}},{"PRIM_BUMP_LARGETILE":{"body":["PRIM_BUMP_LARGETILE${0}"],"prefix":"PRIM_BUMP_LARGETILE","description":"integer PRIM_BUMP_LARGETILE = 14;"}},{"PRIM_BUMP_NONE":{"body":["PRIM_BUMP_NONE${0}"],"prefix":"PRIM_BUMP_NONE","description":"integer PRIM_BUMP_NONE = 0;"}},{"PRIM_BUMP_SHINY":{"body":["PRIM_BUMP_SHINY${0}"],"prefix":"PRIM_BUMP_SHINY","description":"integer PRIM_BUMP_SHINY = 19;"}},{"PRIM_BUMP_SIDING":{"body":["PRIM_BUMP_SIDING${0}"],"prefix":"PRIM_BUMP_SIDING","description":"integer PRIM_BUMP_SIDING = 13;"}},{"PRIM_BUMP_STONE":{"body":["PRIM_BUMP_STONE${0}"],"prefix":"PRIM_BUMP_STONE","description":"integer PRIM_BUMP_STONE = 9;"}},{"PRIM_BUMP_STUCCO":{"body":["PRIM_BUMP_STUCCO${0}"],"prefix":"PRIM_BUMP_STUCCO","description":"integer PRIM_BUMP_STUCCO = 15;"}},{"PRIM_BUMP_SUCTION":{"body":["PRIM_BUMP_SUCTION${0}"],"prefix":"PRIM_BUMP_SUCTION","description":"integer PRIM_BUMP_SUCTION = 16;"}},{"PRIM_BUMP_TILE":{"body":["PRIM_BUMP_TILE${0}"],"prefix":"PRIM_BUMP_TILE","description":"integer PRIM_BUMP_TILE = 8;"}},{"PRIM_BUMP_WEAVE":{"body":["PRIM_BUMP_WEAVE${0}"],"prefix":"PRIM_BUMP_WEAVE","description":"integer PRIM_BUMP_WEAVE = 17;"}},{"PRIM_BUMP_WOOD":{"body":["PRIM_BUMP_WOOD${0}"],"prefix":"PRIM_BUMP_WOOD","description":"integer PRIM_BUMP_WOOD = 3;"}},{"PRIM_COLOR":{"body":["PRIM_COLOR${0}"],"prefix":"PRIM_COLOR","description":"integer PRIM_COLOR = 18;"}},{"PRIM_DESC":{"body":["PRIM_DESC${0}"],"prefix":"PRIM_DESC","description":"integer PRIM_DESC = 28;"}},{"PRIM_FLEXIBLE":{"body":["PRIM_FLEXIBLE${0}"],"prefix":"PRIM_FLEXIBLE","description":"integer PRIM_FLEXIBLE = 21;"}},{"PRIM_FULLBRIGHT":{"body":["PRIM_FULLBRIGHT${0}"],"prefix":"PRIM_FULLBRIGHT","description":"integer PRIM_FULLBRIGHT = 20;"}},{"PRIM_GLOW":{"body":["PRIM_GLOW${0}"],"prefix":"PRIM_GLOW","description":"integer PRIM_GLOW = 25;"}},{"PRIM_HOLE_CIRCLE":{"body":["PRIM_HOLE_CIRCLE${0}"],"prefix":"PRIM_HOLE_CIRCLE","description":"integer PRIM_HOLE_CIRCLE = 0x10;"}},{"PRIM_HOLE_DEFAULT":{"body":["PRIM_HOLE_DEFAULT${0}"],"prefix":"PRIM_HOLE_DEFAULT","description":"integer PRIM_HOLE_DEFAULT = 0x00;"}},{"PRIM_HOLE_SQUARE":{"body":["PRIM_HOLE_SQUARE${0}"],"prefix":"PRIM_HOLE_SQUARE","description":"integer PRIM_HOLE_SQUARE = 0x20;"}},{"PRIM_HOLE_TRIANGLE":{"body":["PRIM_HOLE_TRIANGLE${0}"],"prefix":"PRIM_HOLE_TRIANGLE","description":"integer PRIM_HOLE_TRIANGLE = 0x30;"}},{"PRIM_LINK_TARGET":{"body":["PRIM_LINK_TARGET${0}"],"prefix":"PRIM_LINK_TARGET","description":"integer PRIM_LINK_TARGET = 34;"}},{"PRIM_MATERIAL":{"body":["PRIM_MATERIAL${0}"],"prefix":"PRIM_MATERIAL","description":"integer PRIM_MATERIAL = 2;"}},{"PRIM_MATERIAL_FLESH":{"body":["PRIM_MATERIAL_FLESH${0}"],"prefix":"PRIM_MATERIAL_FLESH","description":"integer PRIM_MATERIAL_FLESH = 4;"}},{"PRIM_MATERIAL_GLASS":{"body":["PRIM_MATERIAL_GLASS${0}"],"prefix":"PRIM_MATERIAL_GLASS","description":"integer PRIM_MATERIAL_GLASS = 2;"}},{"PRIM_MATERIAL_LIGHT":{"body":["PRIM_MATERIAL_LIGHT${0}"],"prefix":"PRIM_MATERIAL_LIGHT","description":"integer PRIM_MATERIAL_LIGHT = 7;"}},{"PRIM_MATERIAL_METAL":{"body":["PRIM_MATERIAL_METAL${0}"],"prefix":"PRIM_MATERIAL_METAL","description":"integer PRIM_MATERIAL_METAL = 1;"}},{"PRIM_MATERIAL_PLASTIC":{"body":["PRIM_MATERIAL_PLASTIC${0}"],"prefix":"PRIM_MATERIAL_PLASTIC","description":"integer PRIM_MATERIAL_PLASTIC = 5;"}},{"PRIM_MATERIAL_RUBBER":{"body":["PRIM_MATERIAL_RUBBER${0}"],"prefix":"PRIM_MATERIAL_RUBBER","description":"integer PRIM_MATERIAL_RUBBER = 6;"}},{"PRIM_MATERIAL_STONE":{"body":["PRIM_MATERIAL_STONE${0}"],"prefix":"PRIM_MATERIAL_STONE","description":"integer PRIM_MATERIAL_STONE = 0;"}},{"PRIM_MATERIAL_WOOD":{"body":["PRIM_MATERIAL_WOOD${0}"],"prefix":"PRIM_MATERIAL_WOOD","description":"integer PRIM_MATERIAL_WOOD = 3;"}},{"PRIM_MEDIA_ALT_IMAGE_ENABLE":{"body":["PRIM_MEDIA_ALT_IMAGE_ENABLE${0}"],"prefix":"PRIM_MEDIA_ALT_IMAGE_ENABLE","description":"integer PRIM_MEDIA_ALT_IMAGE_ENABLE = 0;"}},{"PRIM_MEDIA_AUTO_LOOP":{"body":["PRIM_MEDIA_AUTO_LOOP${0}"],"prefix":"PRIM_MEDIA_AUTO_LOOP","description":"integer PRIM_MEDIA_AUTO_LOOP = 4;"}},{"PRIM_MEDIA_AUTO_PLAY":{"body":["PRIM_MEDIA_AUTO_PLAY${0}"],"prefix":"PRIM_MEDIA_AUTO_PLAY","description":"integer PRIM_MEDIA_AUTO_PLAY = 5;"}},{"PRIM_MEDIA_AUTO_SCALE":{"body":["PRIM_MEDIA_AUTO_SCALE${0}"],"prefix":"PRIM_MEDIA_AUTO_SCALE","description":"integer PRIM_MEDIA_AUTO_SCALE = 6;"}},{"PRIM_MEDIA_AUTO_ZOOM":{"body":["PRIM_MEDIA_AUTO_ZOOM${0}"],"prefix":"PRIM_MEDIA_AUTO_ZOOM","description":"integer PRIM_MEDIA_AUTO_ZOOM = 7;"}},{"PRIM_MEDIA_CURRENT_URL":{"body":["PRIM_MEDIA_CURRENT_URL${0}"],"prefix":"PRIM_MEDIA_CURRENT_URL","description":"integer PRIM_MEDIA_CURRENT_URL = 2;"}},{"PRIM_MEDIA_FIRST_CLICK_INTERACT":{"body":["PRIM_MEDIA_FIRST_CLICK_INTERACT${0}"],"prefix":"PRIM_MEDIA_FIRST_CLICK_INTERACT","description":"integer PRIM_MEDIA_FIRST_CLICK_INTERACT = 8;"}},{"PRIM_MEDIA_HEIGHT_PIXELS":{"body":["PRIM_MEDIA_HEIGHT_PIXELS${0}"],"prefix":"PRIM_MEDIA_HEIGHT_PIXELS","description":"integer PRIM_MEDIA_HEIGHT_PIXELS = 10;"}},{"PRIM_MEDIA_HOME_URL":{"body":["PRIM_MEDIA_HOME_URL${0}"],"prefix":"PRIM_MEDIA_HOME_URL","description":"integer PRIM_MEDIA_HOME_URL = 3;"}},{"PRIM_MEDIA_PERMS_CONTROL":{"body":["PRIM_MEDIA_PERMS_CONTROL${0}"],"prefix":"PRIM_MEDIA_PERMS_CONTROL","description":"integer PRIM_MEDIA_PERMS_CONTROL = 14;"}},{"PRIM_MEDIA_PERMS_INTERACT":{"body":["PRIM_MEDIA_PERMS_INTERACT${0}"],"prefix":"PRIM_MEDIA_PERMS_INTERACT","description":"integer PRIM_MEDIA_PERMS_INTERACT = 13;"}},{"PRIM_MEDIA_PERM_ANYONE":{"body":["PRIM_MEDIA_PERM_ANYONE${0}"],"prefix":"PRIM_MEDIA_PERM_ANYONE","description":"integer PRIM_MEDIA_PERM_ANYONE = 0x4;"}},{"PRIM_MEDIA_PERM_GROUP":{"body":["PRIM_MEDIA_PERM_GROUP${0}"],"prefix":"PRIM_MEDIA_PERM_GROUP","description":"integer PRIM_MEDIA_PERM_GROUP = 0x2;"}},{"PRIM_MEDIA_PERM_NONE":{"body":["PRIM_MEDIA_PERM_NONE${0}"],"prefix":"PRIM_MEDIA_PERM_NONE","description":"integer PRIM_MEDIA_PERM_NONE = 0x0;"}},{"PRIM_MEDIA_PERM_OWNER":{"body":["PRIM_MEDIA_PERM_OWNER${0}"],"prefix":"PRIM_MEDIA_PERM_OWNER","description":"integer PRIM_MEDIA_PERM_OWNER = 0x1;"}},{"PRIM_MEDIA_WHITELIST":{"body":["PRIM_MEDIA_WHITELIST${0}"],"prefix":"PRIM_MEDIA_WHITELIST","description":"integer PRIM_MEDIA_WHITELIST = 12;"}},{"PRIM_MEDIA_WHITELIST_ENABLE":{"body":["PRIM_MEDIA_WHITELIST_ENABLE${0}"],"prefix":"PRIM_MEDIA_WHITELIST_ENABLE","description":"integer PRIM_MEDIA_WHITELIST_ENABLE = 11;"}},{"PRIM_MEDIA_WIDTH_PIXELS":{"body":["PRIM_MEDIA_WIDTH_PIXELS${0}"],"prefix":"PRIM_MEDIA_WIDTH_PIXELS","description":"integer PRIM_MEDIA_WIDTH_PIXELS = 9;"}},{"PRIM_NAME":{"body":["PRIM_NAME${0}"],"prefix":"PRIM_NAME","description":"integer PRIM_NAME = 27;"}},{"PRIM_NORMAL":{"body":["PRIM_NORMAL${0}"],"prefix":"PRIM_NORMAL","description":"integer PRIM_NORMAL = 37;"}},{"PRIM_OMEGA":{"body":["PRIM_OMEGA${0}"],"prefix":"PRIM_OMEGA","description":"integer PRIM_OMEGA = 32;"}},{"PRIM_PHANTOM":{"body":["PRIM_PHANTOM${0}"],"prefix":"PRIM_PHANTOM","description":"integer PRIM_PHANTOM = 5;"}},{"PRIM_PHYSICS":{"body":["PRIM_PHYSICS${0}"],"prefix":"PRIM_PHYSICS","description":"integer PRIM_PHYSICS = 3;"}},{"PRIM_PHYSICS_SHAPE_CONVEX":{"body":["PRIM_PHYSICS_SHAPE_CONVEX${0}"],"prefix":"PRIM_PHYSICS_SHAPE_CONVEX","description":"integer PRIM_PHYSICS_SHAPE_CONVEX = 2;"}},{"PRIM_PHYSICS_SHAPE_NONE":{"body":["PRIM_PHYSICS_SHAPE_NONE${0}"],"prefix":"PRIM_PHYSICS_SHAPE_NONE","description":"integer PRIM_PHYSICS_SHAPE_NONE = 1;"}},{"PRIM_PHYSICS_SHAPE_PRIM":{"body":["PRIM_PHYSICS_SHAPE_PRIM${0}"],"prefix":"PRIM_PHYSICS_SHAPE_PRIM","description":"integer PRIM_PHYSICS_SHAPE_PRIM = 0;"}},{"PRIM_PHYSICS_SHAPE_TYPE":{"body":["PRIM_PHYSICS_SHAPE_TYPE${0}"],"prefix":"PRIM_PHYSICS_SHAPE_TYPE","description":"integer PRIM_PHYSICS_SHAPE_TYPE = 30;"}},{"PRIM_POINT_LIGHT":{"body":["PRIM_POINT_LIGHT${0}"],"prefix":"PRIM_POINT_LIGHT","description":"integer PRIM_POINT_LIGHT = 23;"}},{"PRIM_POSITION":{"body":["PRIM_POSITION${0}"],"prefix":"PRIM_POSITION","description":"integer PRIM_POSITION = 6;"}},{"PRIM_POS_LOCAL":{"body":["PRIM_POS_LOCAL${0}"],"prefix":"PRIM_POS_LOCAL","description":"integer PRIM_POS_LOCAL = 33;"}},{"PRIM_ROTATION":{"body":["PRIM_ROTATION${0}"],"prefix":"PRIM_ROTATION","description":"integer PRIM_ROTATION = 8;"}},{"PRIM_ROT_LOCAL":{"body":["PRIM_ROT_LOCAL${0}"],"prefix":"PRIM_ROT_LOCAL","description":"integer PRIM_ROT_LOCAL = 29;"}},{"PRIM_SCRIPTED_SIT_ONLY":{"body":["PRIM_SCRIPTED_SIT_ONLY${0}"],"prefix":"PRIM_SCRIPTED_SIT_ONLY","description":"integer PRIM_SCRIPTED_SIT_ONLY = 40;"}},{"PRIM_SCULPT_FLAG_INVERT":{"body":["PRIM_SCULPT_FLAG_INVERT${0}"],"prefix":"PRIM_SCULPT_FLAG_INVERT","description":"integer PRIM_SCULPT_FLAG_INVERT = 0x40;"}},{"PRIM_SCULPT_FLAG_MIRROR":{"body":["PRIM_SCULPT_FLAG_MIRROR${0}"],"prefix":"PRIM_SCULPT_FLAG_MIRROR","description":"integer PRIM_SCULPT_FLAG_MIRROR = 0x80;"}},{"PRIM_SCULPT_TYPE_CYLINDER":{"body":["PRIM_SCULPT_TYPE_CYLINDER${0}"],"prefix":"PRIM_SCULPT_TYPE_CYLINDER","description":"integer PRIM_SCULPT_TYPE_CYLINDER = 4;"}},{"PRIM_SCULPT_TYPE_MASK":{"body":["PRIM_SCULPT_TYPE_MASK${0}"],"prefix":"PRIM_SCULPT_TYPE_MASK","description":"integer PRIM_SCULPT_TYPE_MASK = 7;"}},{"PRIM_SCULPT_TYPE_PLANE":{"body":["PRIM_SCULPT_TYPE_PLANE${0}"],"prefix":"PRIM_SCULPT_TYPE_PLANE","description":"integer PRIM_SCULPT_TYPE_PLANE = 3;"}},{"PRIM_SCULPT_TYPE_SPHERE":{"body":["PRIM_SCULPT_TYPE_SPHERE${0}"],"prefix":"PRIM_SCULPT_TYPE_SPHERE","description":"integer PRIM_SCULPT_TYPE_SPHERE = 1;"}},{"PRIM_SCULPT_TYPE_TORUS":{"body":["PRIM_SCULPT_TYPE_TORUS${0}"],"prefix":"PRIM_SCULPT_TYPE_TORUS","description":"integer PRIM_SCULPT_TYPE_TORUS = 2;"}},{"PRIM_SHINY_HIGH":{"body":["PRIM_SHINY_HIGH${0}"],"prefix":"PRIM_SHINY_HIGH","description":"integer PRIM_SHINY_HIGH = 3;"}},{"PRIM_SHINY_LOW":{"body":["PRIM_SHINY_LOW${0}"],"prefix":"PRIM_SHINY_LOW","description":"integer PRIM_SHINY_LOW = 1;"}},{"PRIM_SHINY_MEDIUM":{"body":["PRIM_SHINY_MEDIUM${0}"],"prefix":"PRIM_SHINY_MEDIUM","description":"integer PRIM_SHINY_MEDIUM = 2;"}},{"PRIM_SHINY_NONE":{"body":["PRIM_SHINY_NONE${0}"],"prefix":"PRIM_SHINY_NONE","description":"integer PRIM_SHINY_NONE = 0;"}},{"PRIM_SIT_TARGET":{"body":["PRIM_SIT_TARGET${0}"],"prefix":"PRIM_SIT_TARGET","description":"integer PRIM_SIT_TARGET = 41;"}},{"PRIM_SIZE":{"body":["PRIM_SIZE${0}"],"prefix":"PRIM_SIZE","description":"integer PRIM_SIZE = 7;"}},{"PRIM_SLICE":{"body":["PRIM_SLICE${0}"],"prefix":"PRIM_SLICE","description":"integer PRIM_SLICE = 35;"}},{"PRIM_SPECULAR":{"body":["PRIM_SPECULAR${0}"],"prefix":"PRIM_SPECULAR","description":"integer PRIM_SPECULAR = 36;"}},{"PRIM_TEMP_ON_REZ":{"body":["PRIM_TEMP_ON_REZ${0}"],"prefix":"PRIM_TEMP_ON_REZ","description":"integer PRIM_TEMP_ON_REZ = 4;"}},{"PRIM_TEXGEN":{"body":["PRIM_TEXGEN${0}"],"prefix":"PRIM_TEXGEN","description":"integer PRIM_TEXGEN = 22;"}},{"PRIM_TEXGEN_DEFAULT":{"body":["PRIM_TEXGEN_DEFAULT${0}"],"prefix":"PRIM_TEXGEN_DEFAULT","description":"integer PRIM_TEXGEN_DEFAULT = 0;"}},{"PRIM_TEXGEN_PLANAR":{"body":["PRIM_TEXGEN_PLANAR${0}"],"prefix":"PRIM_TEXGEN_PLANAR","description":"integer PRIM_TEXGEN_PLANAR = 1;"}},{"PRIM_TEXT":{"body":["PRIM_TEXT${0}"],"prefix":"PRIM_TEXT","description":"integer PRIM_TEXT = 26;"}},{"PRIM_TEXTURE":{"body":["PRIM_TEXTURE${0}"],"prefix":"PRIM_TEXTURE","description":"integer PRIM_TEXTURE = 17;"}},{"PRIM_TYPE":{"body":["PRIM_TYPE${0}"],"prefix":"PRIM_TYPE","description":"integer PRIM_TYPE = 9;"}},{"PRIM_TYPE_BOX":{"body":["PRIM_TYPE_BOX${0}"],"prefix":"PRIM_TYPE_BOX","description":"integer PRIM_TYPE_BOX = 0;"}},{"PRIM_TYPE_CYLINDER":{"body":["PRIM_TYPE_CYLINDER${0}"],"prefix":"PRIM_TYPE_CYLINDER","description":"integer PRIM_TYPE_CYLINDER = 1;"}},{"PRIM_TYPE_PRISM":{"body":["PRIM_TYPE_PRISM${0}"],"prefix":"PRIM_TYPE_PRISM","description":"integer PRIM_TYPE_PRISM = 2;"}},{"PRIM_TYPE_RING":{"body":["PRIM_TYPE_RING${0}"],"prefix":"PRIM_TYPE_RING","description":"integer PRIM_TYPE_RING = 6;"}},{"PRIM_TYPE_SCULPT":{"body":["PRIM_TYPE_SCULPT${0}"],"prefix":"PRIM_TYPE_SCULPT","description":"integer PRIM_TYPE_SCULPT = 7;"}},{"PRIM_TYPE_SPHERE":{"body":["PRIM_TYPE_SPHERE${0}"],"prefix":"PRIM_TYPE_SPHERE","description":"integer PRIM_TYPE_SPHERE = 3;"}},{"PRIM_TYPE_TORUS":{"body":["PRIM_TYPE_TORUS${0}"],"prefix":"PRIM_TYPE_TORUS","description":"integer PRIM_TYPE_TORUS = 4;"}},{"PRIM_TYPE_TUBE":{"body":["PRIM_TYPE_TUBE${0}"],"prefix":"PRIM_TYPE_TUBE","description":"integer PRIM_TYPE_TUBE = 5;"}},{"PROFILE_NONE":{"body":["PROFILE_NONE${0}"],"prefix":"PROFILE_NONE","description":"integer PROFILE_NONE = 0;"}},{"PROFILE_SCRIPT_MEMORY":{"body":["PROFILE_SCRIPT_MEMORY${0}"],"prefix":"PROFILE_SCRIPT_MEMORY","description":"integer PROFILE_SCRIPT_MEMORY = 1;"}},{"PUBLIC_CHANNEL":{"body":["PUBLIC_CHANNEL${0}"],"prefix":"PUBLIC_CHANNEL","description":"integer PUBLIC_CHANNEL = 0x0;"}},{"RAD_TO_DEG":{"body":["RAD_TO_DEG${0}"],"prefix":"RAD_TO_DEG","description":"float RAD_TO_DEG = 57.295779513082320876798154814105f;"}},{"RCERR_CAST_TIME_EXCEEDED":{"body":["RCERR_CAST_TIME_EXCEEDED${0}"],"prefix":"RCERR_CAST_TIME_EXCEEDED","description":"integer RCERR_CAST_TIME_EXCEEDED = -3;"}},{"RCERR_SIM_PERF_LOW":{"body":["RCERR_SIM_PERF_LOW${0}"],"prefix":"RCERR_SIM_PERF_LOW","description":"integer RCERR_SIM_PERF_LOW = -2;"}},{"RCERR_UNKNOWN":{"body":["RCERR_UNKNOWN${0}"],"prefix":"RCERR_UNKNOWN","description":"integer RCERR_UNKNOWN = -1;"}},{"RC_DATA_FLAGS":{"body":["RC_DATA_FLAGS${0}"],"prefix":"RC_DATA_FLAGS","description":"integer RC_DATA_FLAGS = 2;"}},{"RC_DETECT_PHANTOM":{"body":["RC_DETECT_PHANTOM${0}"],"prefix":"RC_DETECT_PHANTOM","description":"integer RC_DETECT_PHANTOM = 1;"}},{"RC_GET_LINK_NUM":{"body":["RC_GET_LINK_NUM${0}"],"prefix":"RC_GET_LINK_NUM","description":"integer RC_GET_LINK_NUM = 4;"}},{"RC_GET_NORMAL":{"body":["RC_GET_NORMAL${0}"],"prefix":"RC_GET_NORMAL","description":"integer RC_GET_NORMAL = 1;"}},{"RC_GET_ROOT_KEY":{"body":["RC_GET_ROOT_KEY${0}"],"prefix":"RC_GET_ROOT_KEY","description":"integer RC_GET_ROOT_KEY = 2;"}},{"RC_MAX_HITS":{"body":["RC_MAX_HITS${0}"],"prefix":"RC_MAX_HITS","description":"integer RC_MAX_HITS = 3;"}},{"RC_REJECT_AGENTS":{"body":["RC_REJECT_AGENTS${0}"],"prefix":"RC_REJECT_AGENTS","description":"integer RC_REJECT_AGENTS = 1;"}},{"RC_REJECT_LAND":{"body":["RC_REJECT_LAND${0}"],"prefix":"RC_REJECT_LAND","description":"integer RC_REJECT_LAND = 8;"}},{"RC_REJECT_NONPHYSICAL":{"body":["RC_REJECT_NONPHYSICAL${0}"],"prefix":"RC_REJECT_NONPHYSICAL","description":"integer RC_REJECT_NONPHYSICAL = 4;"}},{"RC_REJECT_PHYSICAL":{"body":["RC_REJECT_PHYSICAL${0}"],"prefix":"RC_REJECT_PHYSICAL","description":"integer RC_REJECT_PHYSICAL = 2;"}},{"RC_REJECT_TYPES":{"body":["RC_REJECT_TYPES${0}"],"prefix":"RC_REJECT_TYPES","description":"integer RC_REJECT_TYPES = 0;"}},{"REGION_FLAG_ALLOW_DAMAGE":{"body":["REGION_FLAG_ALLOW_DAMAGE${0}"],"prefix":"REGION_FLAG_ALLOW_DAMAGE","description":"integer REGION_FLAG_ALLOW_DAMAGE = 0x00000001;"}},{"REGION_FLAG_ALLOW_DIRECT_TELEPORT":{"body":["REGION_FLAG_ALLOW_DIRECT_TELEPORT${0}"],"prefix":"REGION_FLAG_ALLOW_DIRECT_TELEPORT","description":"integer REGION_FLAG_ALLOW_DIRECT_TELEPORT = 0x00100000;"}},{"REGION_FLAG_BLOCK_FLY":{"body":["REGION_FLAG_BLOCK_FLY${0}"],"prefix":"REGION_FLAG_BLOCK_FLY","description":"integer REGION_FLAG_BLOCK_FLY = 0x00080000;"}},{"REGION_FLAG_BLOCK_TERRAFORM":{"body":["REGION_FLAG_BLOCK_TERRAFORM${0}"],"prefix":"REGION_FLAG_BLOCK_TERRAFORM","description":"integer REGION_FLAG_BLOCK_TERRAFORM = 0x00000040;"}},{"REGION_FLAG_DISABLE_COLLISIONS":{"body":["REGION_FLAG_DISABLE_COLLISIONS${0}"],"prefix":"REGION_FLAG_DISABLE_COLLISIONS","description":"integer REGION_FLAG_DISABLE_COLLISIONS = 0x00001000;"}},{"REGION_FLAG_DISABLE_PHYSICS":{"body":["REGION_FLAG_DISABLE_PHYSICS${0}"],"prefix":"REGION_FLAG_DISABLE_PHYSICS","description":"integer REGION_FLAG_DISABLE_PHYSICS = 0x00004000;"}},{"REGION_FLAG_FIXED_SUN":{"body":["REGION_FLAG_FIXED_SUN${0}"],"prefix":"REGION_FLAG_FIXED_SUN","description":"integer REGION_FLAG_FIXED_SUN = 0x00000010;"}},{"REGION_FLAG_RESTRICT_PUSHOBJECT":{"body":["REGION_FLAG_RESTRICT_PUSHOBJECT${0}"],"prefix":"REGION_FLAG_RESTRICT_PUSHOBJECT","description":"integer REGION_FLAG_RESTRICT_PUSHOBJECT = 0x00400000;"}},{"REGION_FLAG_SANDBOX":{"body":["REGION_FLAG_SANDBOX${0}"],"prefix":"REGION_FLAG_SANDBOX","description":"integer REGION_FLAG_SANDBOX = 0x00000100;"}},{"REMOTE_DATA_CHANNEL":{"body":["REMOTE_DATA_CHANNEL${0}"],"prefix":"REMOTE_DATA_CHANNEL","description":"integer REMOTE_DATA_CHANNEL = 1;"}},{"REMOTE_DATA_REPLY":{"body":["REMOTE_DATA_REPLY${0}"],"prefix":"REMOTE_DATA_REPLY","description":"integer REMOTE_DATA_REPLY = 3;"}},{"REMOTE_DATA_REQUEST":{"body":["REMOTE_DATA_REQUEST${0}"],"prefix":"REMOTE_DATA_REQUEST","description":"integer REMOTE_DATA_REQUEST = 2;"}},{"REVERSE":{"body":["REVERSE${0}"],"prefix":"REVERSE","description":"integer REVERSE = 0x04;"}},{"ROTATE":{"body":["ROTATE${0}"],"prefix":"ROTATE","description":"integer ROTATE = 0x20;"}},{"SCALE":{"body":["SCALE${0}"],"prefix":"SCALE","description":"integer SCALE = 0x40;"}},{"SCRIPTED":{"body":["SCRIPTED${0}"],"prefix":"SCRIPTED","description":"integer SCRIPTED = 0x8;"}},{"SIM_STAT_PCT_CHARS_STEPPED":{"body":["SIM_STAT_PCT_CHARS_STEPPED${0}"],"prefix":"SIM_STAT_PCT_CHARS_STEPPED","description":"integer SIM_STAT_PCT_CHARS_STEPPED = 0;"}},{"SMOOTH":{"body":["SMOOTH${0}"],"prefix":"SMOOTH","description":"integer SMOOTH = 0x010;"}},{"SQRT2":{"body":["SQRT2${0}"],"prefix":"SQRT2","description":"float SQRT2 = 1.4142135623730950488016887242097f;"}},{"STATUS_BLOCK_GRAB":{"body":["STATUS_BLOCK_GRAB${0}"],"prefix":"STATUS_BLOCK_GRAB","description":"integer STATUS_BLOCK_GRAB = 0x40;"}},{"STATUS_BLOCK_GRAB_OBJECT":{"body":["STATUS_BLOCK_GRAB_OBJECT${0}"],"prefix":"STATUS_BLOCK_GRAB_OBJECT","description":"integer STATUS_BLOCK_GRAB_OBJECT = 0x400;"}},{"STATUS_BOUNDS_ERROR":{"body":["STATUS_BOUNDS_ERROR${0}"],"prefix":"STATUS_BOUNDS_ERROR","description":"integer STATUS_BOUNDS_ERROR = 1002;"}},{"STATUS_CAST_SHADOWS":{"body":["STATUS_CAST_SHADOWS${0}"],"prefix":"STATUS_CAST_SHADOWS","description":"integer STATUS_CAST_SHADOWS = 0x200;"}},{"STATUS_DIE_AT_EDGE":{"body":["STATUS_DIE_AT_EDGE${0}"],"prefix":"STATUS_DIE_AT_EDGE","description":"integer STATUS_DIE_AT_EDGE = 0x80;"}},{"STATUS_INTERNAL_ERROR":{"body":["STATUS_INTERNAL_ERROR${0}"],"prefix":"STATUS_INTERNAL_ERROR","description":"integer STATUS_INTERNAL_ERROR = 1999;"}},{"STATUS_MALFORMED_PARAMS":{"body":["STATUS_MALFORMED_PARAMS${0}"],"prefix":"STATUS_MALFORMED_PARAMS","description":"integer STATUS_MALFORMED_PARAMS = 1000;"}},{"STATUS_NOT_FOUND":{"body":["STATUS_NOT_FOUND${0}"],"prefix":"STATUS_NOT_FOUND","description":"integer STATUS_NOT_FOUND = 1003;"}},{"STATUS_NOT_SUPPORTED":{"body":["STATUS_NOT_SUPPORTED${0}"],"prefix":"STATUS_NOT_SUPPORTED","description":"integer STATUS_NOT_SUPPORTED = 1004;"}},{"STATUS_OK":{"body":["STATUS_OK${0}"],"prefix":"STATUS_OK","description":"integer STATUS_OK = 0;"}},{"STATUS_PHANTOM":{"body":["STATUS_PHANTOM${0}"],"prefix":"STATUS_PHANTOM","description":"integer STATUS_PHANTOM = 0x10;"}},{"STATUS_PHYSICS":{"body":["STATUS_PHYSICS${0}"],"prefix":"STATUS_PHYSICS","description":""}},{"STATUS_RETURN_AT_EDGE":{"body":["STATUS_RETURN_AT_EDGE${0}"],"prefix":"STATUS_RETURN_AT_EDGE","description":"integer STATUS_RETURN_AT_EDGE = 0x100;"}},{"STATUS_ROTATE_X":{"body":["STATUS_ROTATE_X${0}"],"prefix":"STATUS_ROTATE_X","description":"integer STATUS_ROTATE_X = 0x2;"}},{"STATUS_ROTATE_Y":{"body":["STATUS_ROTATE_Y${0}"],"prefix":"STATUS_ROTATE_Y","description":"integer STATUS_ROTATE_Y = 0x4;"}},{"STATUS_ROTATE_Z":{"body":["STATUS_ROTATE_Z${0}"],"prefix":"STATUS_ROTATE_Z","description":"integer STATUS_ROTATE_Z = 0x8;"}},{"STATUS_SANDBOX":{"body":["STATUS_SANDBOX${0}"],"prefix":"STATUS_SANDBOX","description":"integer STATUS_SANDBOX = 0x20;"}},{"STATUS_TYPE_MISMATCH":{"body":["STATUS_TYPE_MISMATCH${0}"],"prefix":"STATUS_TYPE_MISMATCH","description":"integer STATUS_TYPE_MISMATCH = 1001;"}},{"STATUS_WHITELIST_FAILED":{"body":["STATUS_WHITELIST_FAILED${0}"],"prefix":"STATUS_WHITELIST_FAILED","description":"integer STATUS_WHITELIST_FAILED = 2001;"}},{"STRING_TRIM":{"body":["STRING_TRIM${0}"],"prefix":"STRING_TRIM","description":"integer STRING_TRIM = 0x03;"}},{"STRING_TRIM_HEAD":{"body":["STRING_TRIM_HEAD${0}"],"prefix":"STRING_TRIM_HEAD","description":"integer STRING_TRIM_HEAD = 0x01;"}},{"STRING_TRIM_TAIL":{"body":["STRING_TRIM_TAIL${0}"],"prefix":"STRING_TRIM_TAIL","description":"integer STRING_TRIM_TAIL = 0x02;"}},{"TEXTURE_DEFAULT":{"body":["TEXTURE_DEFAULT${0}"],"prefix":"TEXTURE_DEFAULT","description":"string TEXTURE_PLYWOOD = \"89556747-24cb-43ed-920b-47caed15465f\";"}},{"TEXTURE_BLANK":{"body":["TEXTURE_BLANK${0}"],"prefix":"TEXTURE_BLANK","description":"string TEXTURE_BLANK = \"5748decc-f629-461c-9a36-a35a221fe21f\";"}},{"TEXTURE_MEDIA":{"body":["TEXTURE_MEDIA${0}"],"prefix":"TEXTURE_MEDIA","description":"string TEXTURE_MEDIA = \"8b5fec65-8d8d-9dc5-cda8-8fdf2716e361\";"}},{"TEXTURE_PLYWOOD":{"body":["TEXTURE_PLYWOOD${0}"],"prefix":"TEXTURE_PLYWOOD","description":"string TEXTURE_PLYWOOD = \"89556747-24cb-43ed-920b-47caed15465f\";"}},{"TEXTURE_TRANSPARENT":{"body":["TEXTURE_TRANSPARENT${0}"],"prefix":"TEXTURE_TRANSPARENT","description":"string TEXTURE_TRANSPARENT = \"8dcd4a48-2d37-4909-9f78-f7a9eb4ef903\";"}},{"TOUCH_INVALID_FACE":{"body":["TOUCH_INVALID_FACE${0}"],"prefix":"TOUCH_INVALID_FACE","description":"integer TOUCH_INVALID_FACE = 0xFFFFFFFF;"}},{"TOUCH_INVALID_TEXCOORD":{"body":["TOUCH_INVALID_TEXCOORD${0}"],"prefix":"TOUCH_INVALID_TEXCOORD","description":"vector TOUCH_INVALID_TEXCOORD = <-1.0, -1.0, 0.0>;"}},{"TOUCH_INVALID_VECTOR":{"body":["TOUCH_INVALID_VECTOR${0}"],"prefix":"TOUCH_INVALID_VECTOR","description":"vector TOUCH_INVALID_VECTOR = <0.0, 0.0, 0.0>;"}},{"TRAVERSAL_TYPE":{"body":["TRAVERSAL_TYPE${0}"],"prefix":"TRAVERSAL_TYPE","description":"integer TRAVERSAL_TYPE = 7;"}},{"TRUE":{"body":["TRUE${0}"],"prefix":"TRUE","description":"integer TRUE = 1;"}},{"TWO_PI":{"body":["TWO_PI${0}"],"prefix":"TWO_PI","description":"float TWO_PI = 6.283185307179586476925286766559f;"}},{"TYPE_FLOAT":{"body":["TYPE_FLOAT${0}"],"prefix":"TYPE_FLOAT","description":"integer TYPE_FLOAT = 2;"}},{"TYPE_INTEGER":{"body":["TYPE_INTEGER${0}"],"prefix":"TYPE_INTEGER","description":"integer TYPE_INTEGER = 1;"}},{"TYPE_INVALID":{"body":["TYPE_INVALID${0}"],"prefix":"TYPE_INVALID","description":"integer TYPE_INVALID = 0;"}},{"TYPE_KEY":{"body":["TYPE_KEY${0}"],"prefix":"TYPE_KEY","description":"integer TYPE_KEY = 4;"}},{"TYPE_ROTATION":{"body":["TYPE_ROTATION${0}"],"prefix":"TYPE_ROTATION","description":"integer TYPE_ROTATION = 6;"}},{"TYPE_STRING":{"body":["TYPE_STRING${0}"],"prefix":"TYPE_STRING","description":"integer TYPE_STRING = 3;"}},{"TYPE_VECTOR":{"body":["TYPE_VECTOR${0}"],"prefix":"TYPE_VECTOR","description":"integer TYPE_VECTOR = 5;"}},{"URL_REQUEST_DENIED":{"body":["URL_REQUEST_DENIED${0}"],"prefix":"URL_REQUEST_DENIED","description":"string URL_REQUEST_DENIED = \"URL_REQUEST_DENIED\";"}},{"URL_REQUEST_GRANTED":{"body":["URL_REQUEST_GRANTED${0}"],"prefix":"URL_REQUEST_GRANTED","description":"string URL_REQUEST_GRANTED = \"URL_REQUEST_GRANTED\";"}},{"VEHICLE_FLAG_NO_FLY_UP":{"body":["VEHICLE_FLAG_NO_FLY_UP${0}"],"prefix":"VEHICLE_FLAG_NO_FLY_UP","description":"integer VEHICLE_FLAG_NO_DEFLECTION_UP = 0x001;"}},{"VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY":{"body":["VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY${0}"],"prefix":"VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY","description":"integer VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY = 32;"}},{"VEHICLE_ANGULAR_DEFLECTION_TIMESCALE":{"body":["VEHICLE_ANGULAR_DEFLECTION_TIMESCALE${0}"],"prefix":"VEHICLE_ANGULAR_DEFLECTION_TIMESCALE","description":"integer VEHICLE_ANGULAR_DEFLECTION_TIMESCALE = 33;"}},{"VEHICLE_ANGULAR_FRICTION_TIMESCALE":{"body":["VEHICLE_ANGULAR_FRICTION_TIMESCALE${0}"],"prefix":"VEHICLE_ANGULAR_FRICTION_TIMESCALE","description":"integer VEHICLE_ANGULAR_FRICTION_TIMESCALE = 17;"}},{"VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE":{"body":["VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE${0}"],"prefix":"VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE","description":"integer VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE = 35;"}},{"VEHICLE_ANGULAR_MOTOR_DIRECTION":{"body":["VEHICLE_ANGULAR_MOTOR_DIRECTION${0}"],"prefix":"VEHICLE_ANGULAR_MOTOR_DIRECTION","description":"integer VEHICLE_ANGULAR_MOTOR_DIRECTION = 19;"}},{"VEHICLE_ANGULAR_MOTOR_TIMESCALE":{"body":["VEHICLE_ANGULAR_MOTOR_TIMESCALE${0}"],"prefix":"VEHICLE_ANGULAR_MOTOR_TIMESCALE","description":"integer VEHICLE_ANGULAR_MOTOR_TIMESCALE = 34;"}},{"VEHICLE_BANKING_EFFICIENCY":{"body":["VEHICLE_BANKING_EFFICIENCY${0}"],"prefix":"VEHICLE_BANKING_EFFICIENCY","description":""}},{"VEHICLE_BANKING_MIX":{"body":["VEHICLE_BANKING_MIX${0}"],"prefix":"VEHICLE_BANKING_MIX","description":"integer VEHICLE_BANKING_MIX = 39;"}},{"VEHICLE_BANKING_TIMESCALE":{"body":["VEHICLE_BANKING_TIMESCALE${0}"],"prefix":"VEHICLE_BANKING_TIMESCALE","description":"integer VEHICLE_BANKING_TIMESCALE = 40;"}},{"VEHICLE_BUOYANCY":{"body":["VEHICLE_BUOYANCY${0}"],"prefix":"VEHICLE_BUOYANCY","description":"integer VEHICLE_BUOYANCY = 27;"}},{"VEHICLE_FLAG_CAMERA_DECOUPLED":{"body":["VEHICLE_FLAG_CAMERA_DECOUPLED${0}"],"prefix":"VEHICLE_FLAG_CAMERA_DECOUPLED","description":"integer VEHICLE_FLAG_CAMERA_DECOUPLED = 0x200;"}},{"VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT":{"body":["VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT${0}"],"prefix":"VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT","description":"integer VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT = 0x010;"}},{"VEHICLE_FLAG_HOVER_TERRAIN_ONLY":{"body":["VEHICLE_FLAG_HOVER_TERRAIN_ONLY${0}"],"prefix":"VEHICLE_FLAG_HOVER_TERRAIN_ONLY","description":"integer VEHICLE_FLAG_HOVER_TERRAIN_ONLY = 0x008;"}},{"VEHICLE_FLAG_HOVER_UP_ONLY":{"body":["VEHICLE_FLAG_HOVER_UP_ONLY${0}"],"prefix":"VEHICLE_FLAG_HOVER_UP_ONLY","description":"integer VEHICLE_FLAG_HOVER_UP_ONLY = 0x020;"}},{"VEHICLE_FLAG_HOVER_WATER_ONLY":{"body":["VEHICLE_FLAG_HOVER_WATER_ONLY${0}"],"prefix":"VEHICLE_FLAG_HOVER_WATER_ONLY","description":"integer VEHICLE_FLAG_HOVER_WATER_ONLY = 0x004;"}},{"VEHICLE_FLAG_LIMIT_MOTOR_UP":{"body":["VEHICLE_FLAG_LIMIT_MOTOR_UP${0}"],"prefix":"VEHICLE_FLAG_LIMIT_MOTOR_UP","description":"integer VEHICLE_FLAG_LIMIT_MOTOR_UP = 0x080;"}},{"VEHICLE_FLAG_LIMIT_ROLL_ONLY":{"body":["VEHICLE_FLAG_LIMIT_ROLL_ONLY${0}"],"prefix":"VEHICLE_FLAG_LIMIT_ROLL_ONLY","description":"integer VEHICLE_FLAG_LIMIT_ROLL_ONLY = 0x002;"}},{"VEHICLE_FLAG_MOUSELOOK_BANK":{"body":["VEHICLE_FLAG_MOUSELOOK_BANK${0}"],"prefix":"VEHICLE_FLAG_MOUSELOOK_BANK","description":"integer VEHICLE_FLAG_MOUSELOOK_BANK = 0x200;"}},{"VEHICLE_FLAG_MOUSELOOK_STEER":{"body":["VEHICLE_FLAG_MOUSELOOK_STEER${0}"],"prefix":"VEHICLE_FLAG_MOUSELOOK_STEER","description":"integer VEHICLE_FLAG_MOUSELOOK_STEER = 0x100;"}},{"VEHICLE_FLAG_NO_DEFLECTION_UP":{"body":["VEHICLE_FLAG_NO_DEFLECTION_UP${0}"],"prefix":"VEHICLE_FLAG_NO_DEFLECTION_UP","description":"integer VEHICLE_FLAG_NO_DEFLECTION_UP = 0x001;"}},{"VEHICLE_HOVER_EFFICIENCY":{"body":["VEHICLE_HOVER_EFFICIENCY${0}"],"prefix":"VEHICLE_HOVER_EFFICIENCY","description":"integer VEHICLE_HOVER_EFFICIENCY = 25;"}},{"VEHICLE_HOVER_HEIGHT":{"body":["VEHICLE_HOVER_HEIGHT${0}"],"prefix":"VEHICLE_HOVER_HEIGHT","description":"integer VEHICLE_HOVER_HEIGHT = 24;"}},{"VEHICLE_HOVER_TIMESCALE":{"body":["VEHICLE_HOVER_TIMESCALE${0}"],"prefix":"VEHICLE_HOVER_TIMESCALE","description":"integer VEHICLE_HOVER_TIMESCALE = 26;"}},{"VEHICLE_LINEAR_DEFLECTION_EFFICIENCY":{"body":["VEHICLE_LINEAR_DEFLECTION_EFFICIENCY${0}"],"prefix":"VEHICLE_LINEAR_DEFLECTION_EFFICIENCY","description":"integer VEHICLE_LINEAR_DEFLECTION_EFFICIENCY = 28;"}},{"VEHICLE_LINEAR_DEFLECTION_TIMESCALE":{"body":["VEHICLE_LINEAR_DEFLECTION_TIMESCALE${0}"],"prefix":"VEHICLE_LINEAR_DEFLECTION_TIMESCALE","description":"integer VEHICLE_LINEAR_DEFLECTION_TIMESCALE = 31;"}},{"VEHICLE_LINEAR_FRICTION_TIMESCALE":{"body":["VEHICLE_LINEAR_FRICTION_TIMESCALE${0}"],"prefix":"VEHICLE_LINEAR_FRICTION_TIMESCALE","description":"integer VEHICLE_LINEAR_FRICTION_TIMESCALE = 16;"}},{"VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE":{"body":["VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE${0}"],"prefix":"VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE","description":"integer VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE = 31;"}},{"VEHICLE_LINEAR_MOTOR_DIRECTION":{"body":["VEHICLE_LINEAR_MOTOR_DIRECTION${0}"],"prefix":"VEHICLE_LINEAR_MOTOR_DIRECTION","description":"integer VEHICLE_LINEAR_MOTOR_DIRECTION = 18;"}},{"VEHICLE_LINEAR_MOTOR_OFFSET":{"body":["VEHICLE_LINEAR_MOTOR_OFFSET${0}"],"prefix":"VEHICLE_LINEAR_MOTOR_OFFSET","description":"integer VEHICLE_LINEAR_MOTOR_OFFSET = 20;"}},{"VEHICLE_LINEAR_MOTOR_TIMESCALE":{"body":["VEHICLE_LINEAR_MOTOR_TIMESCALE${0}"],"prefix":"VEHICLE_LINEAR_MOTOR_TIMESCALE","description":"integer VEHICLE_LINEAR_MOTOR_TIMESCALE = 30;"}},{"VEHICLE_REFERENCE_FRAME":{"body":["VEHICLE_REFERENCE_FRAME${0}"],"prefix":"VEHICLE_REFERENCE_FRAME","description":"integer VEHICLE_REFERENCE_FRAME = 44;"}},{"VEHICLE_TYPE_AIRPLANE":{"body":["VEHICLE_TYPE_AIRPLANE${0}"],"prefix":"VEHICLE_TYPE_AIRPLANE","description":"integer VEHICLE_TYPE_AIRPLANE = 4;"}},{"VEHICLE_TYPE_BALLOON":{"body":["VEHICLE_TYPE_BALLOON${0}"],"prefix":"VEHICLE_TYPE_BALLOON","description":"integer VEHICLE_TYPE_BALLOON = 5;"}},{"VEHICLE_TYPE_BOAT":{"body":["VEHICLE_TYPE_BOAT${0}"],"prefix":"VEHICLE_TYPE_BOAT","description":"integer VEHICLE_TYPE_BOAT = 3;"}},{"VEHICLE_TYPE_CAR":{"body":["VEHICLE_TYPE_CAR${0}"],"prefix":"VEHICLE_TYPE_CAR","description":"integer VEHICLE_TYPE_CAR = 2;"}},{"VEHICLE_TYPE_NONE":{"body":["VEHICLE_TYPE_NONE${0}"],"prefix":"VEHICLE_TYPE_NONE","description":"integer VEHICLE_TYPE_NONE = 0;"}},{"VEHICLE_TYPE_SLED":{"body":["VEHICLE_TYPE_SLED${0}"],"prefix":"VEHICLE_TYPE_SLED","description":"integer VEHICLE_TYPE_SLED = 1;"}},{"VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY":{"body":["VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY${0}"],"prefix":"VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY","description":"integer VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY = 36;"}},{"VEHICLE_VERTICAL_ATTRACTION_TIMESCALE":{"body":["VEHICLE_VERTICAL_ATTRACTION_TIMESCALE${0}"],"prefix":"VEHICLE_VERTICAL_ATTRACTION_TIMESCALE","description":"integer VEHICLE_VERTICAL_ATTRACTION_TIMESCALE = 37;"}},{"VERTICAL":{"body":["VERTICAL${0}"],"prefix":"VERTICAL","description":"integer VERTICAL = 0;"}},{"ZERO_ROTATION":{"body":["ZERO_ROTATION${0}"],"prefix":"ZERO_ROTATION","description":"rotation ZERO_ROTATION = <0.0, 0.0, 0.0, 1.0>;"}},{"ZERO_VECTOR":{"body":["ZERO_VECTOR${0}"],"prefix":"ZERO_VECTOR","description":"vector ZERO_VECTOR = <0.0, 0.0, 0.0>;"}},{"do...while loop":{"prefix":"do","body":["do","{","\t$0","} while (${true});"],"description":"do...while loop"},"for loop":{"prefix":"for","body":["integer ${i};","for (${i} = 0; ${i} < ${length}; ${i}++)","{","\t$0","}"],"description":"for loop"},"Reverse for loop":{"prefix":"forr","body":["integer ${i};","for ({i} = ${length} - 1; {i} >= 0; {i}--)","{","\t$0","}"],"description":"Reverse for loop"},"if statement":{"prefix":"if","body":["if (${true})","{","\t$0","}"],"description":"if statement"},"else statement":{"prefix":"else","body":["else","{","\t$0","}"],"description":"else statement"},"while loop":{"prefix":"while","body":["while (${true})","{","\t$0","}"],"description":"while loop"},"attach":{"prefix":"attach","body":["attach(key ${1:id})\n{\n\t$0\n}"],"description":"event"},"at_rot_target":{"prefix":"at_rot_target","body":["at_rot_target(integer ${1:tnum}, rotation ${2:targetrot}, rotation ${3:ourrot})\n{\n\t$0\n}"],"description":"event"},"at_target":{"prefix":"at_target","body":["at_target(integer ${1:tnum}, vector ${2:targetpos}, vector ${3:ourpos})\n{\n\t$0\n}"],"description":"event"},"changed":{"prefix":"changed","body":["changed(integer ${1:change})\n{\n\t$0\n}"],"description":"event"},"collision":{"prefix":"collision","body":["collision(integer ${1:num_detected})\n{\n\t$0\n}"],"description":"event"},"collision_end":{"prefix":"collision_end","body":["collision_end(integer ${1:num_detected})\n{\n\t$0\n}"],"description":"event"},"collision_start":{"prefix":"collision_start","body":["collision_start(integer ${1:num_detected})\n{\n\t$0\n}"],"description":"event"},"control":{"prefix":"control","body":["control(key ${1:id}, integer ${2:level}, integer ${3:edge})\n{\n\t$0\n}"],"description":"event"},"dataserver":{"prefix":"dataserver","body":["dataserver(key ${1:queryid}, string ${2:data})\n{\n\t$0\n}"],"description":"event"},"email":{"prefix":"email","body":["email(string ${1:time}, string ${2:address}, string ${3:subj}, string ${4:message}, integer ${5:num_left})\n{\n\t$0\n}"],"description":"event"},"experience_permissions":{"prefix":"experience_permissions","body":["experience_permissions(key ${1:agent})\n{\n\t$0\n}"],"description":"event"},"experience_permissions_denied":{"prefix":"experience_permissions_denied","body":["experience_permissions_denied(key ${1:agent}, integer ${2:reason})\n{\n\t$0\n}"],"description":"event"},"http_request":{"prefix":"http_request","body":["http_request(key ${1:id}, string ${2:method}, string ${3:body})\n{\n\t$0\n}"],"description":"event"},"http_response":{"prefix":"http_response","body":["http_response(key ${1:request_id}, integer ${2:status}, list ${3:metadata}, string ${4:body})\n{\n\t$0\n}"],"description":"event"},"land_collision":{"prefix":"land_collision","body":["land_collision(vector ${1:pos})\n{\n\t$0\n}"],"description":"event"},"land_collision_end":{"prefix":"land_collision_end","body":["land_collision_end(vector ${1:pos})\n{\n\t$0\n}"],"description":"event"},"land_collision_start":{"prefix":"land_collision_start","body":["land_collision_start(vector ${1:pos})\n{\n\t$0\n}"],"description":"event"},"link_message":{"prefix":"link_message","body":["link_message(integer ${1:sender_num}, integer ${2:num}, string ${3:str}, key ${4:id})\n{\n\t$0\n}"],"description":"event"},"listen":{"prefix":"listen","body":["listen(integer ${1:channel}, string ${2:name}, key ${3:id}, string ${4:message})\n{\n\t$0\n}"],"description":"event"},"money":{"prefix":"money","body":["money(key ${1:id}, integer ${2:amount})\n{\n\t$0\n}"],"description":"event"},"moving_end":{"prefix":"moving_end","body":["moving_end()\n{\n\t$0\n}"],"description":"event"},"moving_start":{"prefix":"moving_start","body":["moving_start()\n{\n\t$0\n}"],"description":"event"},"not_at_rot_target":{"prefix":"not_at_rot_target","body":["not_at_rot_target()\n{\n\t$0\n}"],"description":"event"},"not_at_target":{"prefix":"not_at_target","body":["not_at_target()\n{\n\t$0\n}"],"description":"event"},"no_sensor":{"prefix":"no_sensor","body":["no_sensor()\n{\n\t$0\n}"],"description":"event"},"object_rez":{"prefix":"object_rez","body":["object_rez(key ${1:id})\n{\n\t$0\n}"],"description":"event"},"on_rez":{"prefix":"on_rez","body":["on_rez(integer ${1:start_param})\n{\n\t$0\n}"],"description":"event"},"path_update":{"prefix":"path_update","body":["path_update(integer ${1:type}, list ${2:reserved})\n{\n\t$0\n}"],"description":"event"},"remote_data":{"prefix":"remote_data","body":["remote_data(integer ${1:event_type}, key ${2:channel}, key ${3:message_id}, string ${4:sender}, integer ${5:idata}, string ${6:sdata})\n{\n\t$0\n}"],"description":"event"},"run_time_permissions":{"prefix":"run_time_permissions","body":["run_time_permissions(integer ${1:perm})\n{\n\t$0\n}"],"description":"event"},"sensor":{"prefix":"sensor","body":["sensor(integer ${1:num_detected})\n{\n\t$0\n}"],"description":"event"},"state_entry":{"prefix":"state_entry","body":["state_entry()\n{\n\t$0\n}"],"description":"event"},"state_exit":{"prefix":"state_exit","body":["state_exit()\n{\n\t$0\n}"],"description":"event"},"timer":{"prefix":"timer","body":["timer()\n{\n\t$0\n}"],"description":"event"},"touch":{"prefix":"touch","body":["touch(integer ${1:num_detected})\n{\n\t$0\n}"],"description":"event"},"touch_end":{"prefix":"touch_end","body":["touch_end(integer ${1:num_detected})\n{\n\t$0\n}"],"description":"event"},"touch_start":{"prefix":"touch_start","body":["touch_start(integer ${1:num_detected})\n{\n\t$0\n}"],"description":"event"},"transaction_result":{"prefix":"transaction_result","body":["transaction_result(key ${1:id}, integer ${2:success}, string ${3:data})\n{\n\t$0\n}"],"description":"event"},"default state":{"prefix":"default","body":["default","{","\tstate_entry()\n\t{\n\t\t$0\n\t}","}"],"description":"Default State"},"state target":{"prefix":"state","body":["state ${target}","{","\tstate_entry()\n\t{\n\t\t$0\n\t}","}"]},"reverse for loop":{"prefix":"forr","body":["integer ${i} = ${length} - 1; for (; ${i} >= 0 ; ${i}--)","{","\t$0","}"],"description":"Reverse for loop"},"for loop":{"prefix":"for","body":["integer ${i}; for (;${i} < ${length}; ++${i})","{","\t$0","}"],"description":"for loop"},"while loop":{"prefix":"while","body":["while (${TRUE})","{","\t$0","}"],"description":"While loop"},"do...while loop":{"prefix":"do","body":["do","{","\t$0","} while (${TRUE});"],"description":"do...while loop"},"if statement":{"prefix":"if","body":["if (${TRUE})","{","\t$0","}"],"description":"if statement"},"else statement":{"prefix":"else","body":["else","{","\t$0","}"],"description":"else statement"},"else if statement":{"prefix":"elseif","body":["else if (${TRUE})","{","\t$0","}"],"description":"else if statement."},"Region/x/y/z SLURL":{"prefix":"slurl:region/x/y/z","body":["vector ${v} = llGetPos();","string ${location} = \"/\" + (string)llRound(${v}.x)","\t+ \"/\" + (string)llRound(${v}.y)","\t+ \"/\" + (string)llRound(${v}.z);","string ${slurl} = \"secondlife:///\" + llEscapeURL(${llGetRegionName()}) + ${location};"],"description":"SLURL to Login at / Show place profile with position"},"Agent profile SLURL":{"prefix":"slurl:app/agent/about","body":["string ${slurl} = \"secondlife:///app/agent/\" + (string)${llGetOwner()} + \"/about\";"],"description":"Avatar's profile SLURL"},"Agent info dialog SLURL":{"prefix":"slurl:app/agent/inspect","body":["string ${slurl} = \"secondlife:///app/agent/\" + (string)${llGetOwner()} + \"/inspect\";"],"description":"Avatar information dialog SLURL"},"Agent IM SLURL":{"prefix":"slurl:app/agent/im","body":["string ${slurl} = \"secondlife:///app/agent/\" + (string)${llGetOwner()} + \"/im\";"],"description":"Avatar IM SLURL"},"Agent Complete Name SLURL":{"prefix":"slurl:app/agent/completename","body":["string ${slurl} = \"secondlife:///app/agent/\" + (string)${llGetOwner()} + \"/completename\";"],"description":"Avatar full name SLURL"},"Agent display name SLURL":{"prefix":"slurl:app/agent/displayname","body":["string ${slurl} = \"secondlife:///app/agent/\" + (string)${llGetOwner()} + \"/displayname\";"],"description":"Avatar display name SLURL"},"Agent username SLURL":{"prefix":"slurl:app/agent/username","body":["string ${slurl} = \"secondlife:///app/agent/\" + (string)${llGetOwner()} + \"/username\";"],"description":"Avatar username SLURL"},"About Group SLURL":{"prefix":"slurl:app/group/about","body":["string ${slurl} = \"secondlife:///app/group/\" + ${llList2String(llGetObjectDetails(llGetKey(), [OBJECT_GROUP]), 0)} + \"/about\";"],"description":"About group SLURL"},"Inspect Group SLURL":{"prefix":"slurl:app/group/inspect","body":["string ${slurl} = \"secondlife:///app/group/\" + ${llList2String(llGetObjectDetails(llGetKey(), [OBJECT_GROUP]), 0)} + \"/inspect\";"],"description":"Inspect group SLURL"},"About Parcel SLURL":{"prefix":"slurl:app/parcel/about","body":["string ${slurl} = \"secondlife:///app/parcel/\" + ${llList2String(llGetParcelDetails(llGetPos(), [PARCEL_DETAILS_ID]), 0)} + \"/about\";"],"description":"About Parcel SLURL"},"Direct Teleport SLURL":{"prefix":"slurl:app/teleport/x/y/z","body":["vector ${v} = llGetPos();","string ${location} = \"/\" + (string)llRound(${v}.x)","\t+ \"/\" + (string)llRound(${v}.y)","\t+ \"/\" + (string)llRound(${v}.z);","string ${slurl} = \"secondlife:///app/teleport/\" + llEscapeURL(${llGetRegionName()}) + ${location};"],"Description":"Direct teleport SLURL"},"Region Map SLURL":{"prefix":"slurl:app/worldmap/x/y/z","body":["vector ${v} = llGetPos();","string ${location} = \"/\" + (string)llRound(${v}.x)","\t+ \"/\" + (string)llRound(${v}.y)","\t+ \"/\" + (string)llRound(${v}.z);","string ${slurl} = \"secondlife:///app/worldmap/\" + llEscapeURL(${llGetRegionName()}) + ${location};"],"description":"Region Map SLURL"}}]